From konstantin at podsvirov.pro  Fri May 11 09:15:56 2018
From: konstantin at podsvirov.pro (Konstantin Podsvirov)
Date: Fri, 11 May 2018 12:15:56 +0300
Subject: [ragel-users] [ISSUE] Portage problems. The fork () alternativities?
Message-ID: <349921526030156@web16j.yandex.ru>

Current code in `master` branch use the `fork()` method from POSIX API (sys/wait.h header), but it's not available on non POSIX platforms.
Any plans to fix this issue?

--
Regards,
Konstantin Podsvirov



From thurston at colm.net  Fri May 11 17:16:51 2018
From: thurston at colm.net (Adrian Thurston)
Date: Fri, 11 May 2018 13:16:51 -0400
Subject: [ragel-users]
 =?utf-8?q?=5BISSUE=5D_Portage_problems=2E_The_fork_?=
 =?utf-8?q?=28=29_alternativities=3F?=
In-Reply-To: <349921526030156@web16j.yandex.ru>
References: <349921526030156@web16j.yandex.ru>
Message-ID: <59116f4aa3e48099e23b415e4cab2fde@mail.colm.net>

All that's happening before the fork is some args parsing so it should 
be easy to make a non-posix version. Note that if all you're doing is 
generating C code the process creation can be eliminated. Actually I 
think it's not compiled in at this point.

On 2018-05-11 05:15, Konstantin Podsvirov wrote:
> Current code in `master` branch use the `fork()` method from POSIX API
> (sys/wait.h header), but it's not available on non POSIX platforms.
> Any plans to fix this issue?
> 
> --
> Regards,
> Konstantin Podsvirov
> 
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at colm.net
> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users


From dsavints at gmail.com  Tue May 15 15:17:40 2018
From: dsavints at gmail.com (Dmitry Savintsev)
Date: Tue, 15 May 2018 17:17:40 +0200
Subject: [ragel-users] //line directives in ragel-generated Go code
Message-ID: <CAKmYsCymQtOqtYCvh+tOndSaU3CBMAUrv0n53t5c_AkxzHqHyA@mail.gmail.com>

What is the meaning and intended usage of `//line filename.go` directives
in the Go code generated by ragel? I understand that '//line filename.rl'
references can help to trace back the origin of the statements, but don't
yet see the significance or intended usage of the .go file references.

-L directive is applicable only to C/D/Ruby/C#/OCaml - I wonder if it would
be difficult to enable it for Go as well?  The '//line' directives seem to
confuse the `go test -cover` command into producing invalid data (and then
an internal error like "cover: inconsistent NumStmt: changed from 3 to
2").  I am using ragel version 6.10 (on a Mac).

The workaround I'm using is removing the `//line` lines from the generated
.go file:
sed -i '' /^\/\/line\.*/d filename.go

Many thanks,

Dmitry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20180515/6bfe7215/attachment.html>

From thurston at colm.net  Tue May 15 16:53:15 2018
From: thurston at colm.net (Adrian Thurston)
Date: Tue, 15 May 2018 12:53:15 -0400
Subject: [ragel-users] //line directives in ragel-generated Go code
In-Reply-To: <CAKmYsCymQtOqtYCvh+tOndSaU3CBMAUrv0n53t5c_AkxzHqHyA@mail.gmail.com>
References: <CAKmYsCymQtOqtYCvh+tOndSaU3CBMAUrv0n53t5c_AkxzHqHyA@mail.gmail.com>
Message-ID: <545266dead97a1b2ca876cb1c8692a22@mail.colm.net>

 

For C codegen they are there so that any problems that spill back into
the generated code can be reported properly. Rare, given that it's a
code generator, but useful when you're doing ragel development. Also,
there can be environmental factors that trigger a problem in the
generated code, such as a define. 

I don't know GO well enough to say that's important there as well. 

On 2018-05-15 11:17, Dmitry Savintsev wrote: 

> What is the meaning and intended usage of `//line filename.go` directives in the Go code generated by ragel? I understand that '//line filename.rl' references can help to trace back the origin of the statements, but don't yet see the significance or intended usage of the .go file references. 
> 
> -L directive is applicable only to C/D/Ruby/C#/OCaml - I wonder if it would be difficult to enable it for Go as well? The '//line' directives seem to confuse the `go test -cover` command into producing invalid data (and then an internal error like "cover: inconsistent NumStmt: changed from 3 to 2"). I am using ragel version 6.10 (on a Mac). 
> 
> The workaround I'm using is removing the `//line` lines from the generated .go file: 
> sed -i '' /^//line.*/d filename.go 
> 
> Many thanks, 
> 
> Dmitry 
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at colm.net
> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users [1]
 

Links:
------
[1] http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20180515/81f9fd83/attachment.html>

From daniel at wavesofdawn.com  Tue May 15 17:48:56 2018
From: daniel at wavesofdawn.com (Daniel Nelson)
Date: Tue, 15 May 2018 10:48:56 -0700
Subject: [ragel-users] //line directives in ragel-generated Go code
In-Reply-To: <CAKmYsCymQtOqtYCvh+tOndSaU3CBMAUrv0n53t5c_AkxzHqHyA@mail.gmail.com>
References: <CAKmYsCymQtOqtYCvh+tOndSaU3CBMAUrv0n53t5c_AkxzHqHyA@mail.gmail.com>
Message-ID: <20180515174856.GA12423@loaner>

On Tue, May 15, 2018 at 05:17:40PM +0200, Dmitry Savintsev wrote:
> What is the meaning and intended usage of `//line filename.go` directives
> in the Go code generated by ragel? I understand that '//line filename.rl'
> references can help to trace back the origin of the statements, but don't
> yet see the significance or intended usage of the .go file references.

The //line directive[1] is used to modify the stacktraces reported by the Go
compiler.  This way the stacktrace will point to your machine definition
instead of into the generated file, which is helpful if you have a compile
error.
--
Daniel

[1] https://golang.org/cmd/compile/#hdr-Compiler_Directives
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20180515/870aada8/attachment.sig>

From thurston at colm.net  Fri May 18 18:40:01 2018
From: thurston at colm.net (Adrian Thurston)
Date: Fri, 18 May 2018 14:40:01 -0400
Subject: [ragel-users] new development tarballs
Message-ID: <c2c1828d6801a661e4642dc1e823de88@mail.colm.net>

Hi, I just posted new development tarballs of both Colm and Ragel.

Thanks,
  Adrian

-- 
Dr. Adrian D. Thurston
Chief Scientist
Colm Networks
http://colm.net/



