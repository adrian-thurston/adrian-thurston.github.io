From ragel-user at jgoettgens.de  Sat Apr  2 09:31:11 2011
From: ragel-user at jgoettgens.de (ragel-user at jgoettgens.de)
Date: Sat, 2 Apr 2011 11:31:11 +0200
Subject: [ragel-users] Path handling of the native Windows build
In-Reply-To: <4D94068C.9060308@complang.org>
References: <17B587A11A814C0499E07DCC05B3F2CD@localdomain>
	<4D94068C.9060308@complang.org>
Message-ID: <C3F77B20003F4DFBBDFDA1D06FDD93C2@localdomain>

I agree, the path "issue" is not really a problem and the patches seem to be 
effective, though not elegant.

If you don't mind, I'll mail some suggestions, but because touching 
prepareLitString() with some OS dependent code and possibly adding something 
like a "is_path" flag looks awful. I think that a bit of patching for the 
Windows build is acceptable. I'll also have a look at temporary files, when 
looking at the code again.

I'll update the regular Windows download package later this day with my 
patches.

jg


_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From gordeev.vladimir.v at gmail.com  Mon Apr  4 20:38:56 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Mon, 04 Apr 2011 23:38:56 +0300
Subject: [ragel-users] Debug
Message-ID: <4D9A2C60.4070008@gmail.com>

Hi everyone,

How you usually debug your ragel-based parser?

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From yipdw at member.fsf.org  Mon Apr  4 21:07:41 2011
From: yipdw at member.fsf.org (David Yip)
Date: Mon, 4 Apr 2011 16:07:41 -0500
Subject: [ragel-users] Debug
In-Reply-To: <4D9A2C60.4070008@gmail.com>
References: <4D9A2C60.4070008@gmail.com>
Message-ID: <BANLkTinHM_kh5LkThYzYdxX1XytdWW=fBg@mail.gmail.com>

Hi Vladimir,

I try to avoid debugging the generated state machine code, as I find
it too difficult to understand the machine at that level.

When writing a Ragel state machine, I write out sentences in the
language that I want it to recognize, turn those into executable test
cases, and then implement the state machine one test case at a time.
When I get stuck, I use Ragel's Graphviz output (-V), often targeting
a machine that I think is the culprit (-M) and use that to find subtle
errors.

That's worked out well for me, but admittedly the machines I've
written are quite simple: they don't step outside Ragel's basic model.

- David

On Mon, Apr 4, 2011 at 3:38 PM, Vladimir VG
<gordeev.vladimir.v at gmail.com> wrote:
> Hi everyone,
>
> How you usually debug your ragel-based parser?
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From alexander.me at gmail.com  Wed Apr  6 04:19:36 2011
From: alexander.me at gmail.com (Denis Naumov)
Date: Wed, 6 Apr 2011 08:19:36 +0400
Subject: [ragel-users] C# - bad code generation
Message-ID: <BANLkTi=nVmp6W9dOJvpxqB8GdH3mDvtApQ@mail.gmail.com>

Hi, Adrian.

Can you fix troubles from my posts:

http://www.complang.org/pipermail/ragel-users/2011-March/002560.html
http://www.complang.org/pipermail/ragel-users/2011-March/002559.html
http://www.complang.org/pipermail/ragel-users/2011-March/002565.html
http://www.complang.org/pipermail/ragel-users/2011-March/002566.html

or i do something wrong?


Best regards,
Denis Naumov.

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From nathan.sweet at gmail.com  Wed Apr  6 08:20:29 2011
From: nathan.sweet at gmail.com (Nate)
Date: Wed, 6 Apr 2011 01:20:29 -0700
Subject: [ragel-users] Java static field initializers
Message-ID: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>

Ragel currently outputs a method and static field for Java, eg:

private static byte[] init__tableLayout_trans_targs_0 () { return new byte[]
{...}; }
private static final byte _tableLayout_trans_targs[] =
init__tableLayout_trans_targs_0();

We could save a few bytes on class file size by just assigning the array,
without an method:

private static final byte _tableLayout_trans_targs[] = new byte[] {...};

The end result is the exactly the same, but less code needs to be output and
the class files will be a little bit smaller.

-Nate
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110406/4b112ca8/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From wbarroz at bol.com.br  Wed Apr  6 13:47:48 2011
From: wbarroz at bol.com.br (Wilson Barros)
Date: Wed, 6 Apr 2011 10:47:48 -0300
Subject: [ragel-users] Consuming input
Message-ID: <4d9c6f049b523_5566a77d83c5cf@a2-winter12.tmail>

An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110406/5dbde772/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Wed Apr  6 22:19:09 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 06 Apr 2011 15:19:09 -0700
Subject: [ragel-users] ragel didn't rename data variable for C# code.
In-Reply-To: <AANLkTim3mUijTzhRru1Crhwj6ooVkV6g1yxitVGS1bBb@mail.gmail.com>
References: <AANLkTim3mUijTzhRru1Crhwj6ooVkV6g1yxitVGS1bBb@mail.gmail.com>
Message-ID: <4D9CE6DD.1050704@complang.org>

Hi Denis,

Sorry for the delay ... been working like a crazy person on another 
project: a protocol for social networking called DSNP. There are a 
number of people trying to do this right now, so it's getting most of my 
attention. If I don't finish off my project, someone else will beat me 
to it.

So anyways, confirmed as a bug. Thank you for reporting it. It will be 
fixed ASAP.

http://www.complang.org/redmine/issues/250

-Adrian

On 03/24/2011 02:21 AM, Denis Naumov wrote:
> Hi Adrian,
>
> A week ago i start ragel and found that it is a very usefull tool.
>
> I use it for generate C and C# code (from Microsoft Visual Studio).
>
> it seems that ragel didn't rename data variable for C# code.
>
> use:
>              %% variable  data   _ctx.data;
>              %% variable  p        _ctx.current;
>              %% variable  pe      _ctx.end;
>
> code will:
>
>    ...  if ( data[(      _ctx.current)]<  _test_trans_keys[_mid] ) ...
>
>
> Also i have some feature request:
> 1.
> Sometime it would be very convenient to set options in rl file rathe
> than command line.
> something like:
>     %% option lang = C#                         (in addition to -C, -A ...)
>
>     %% option line  = on/off/1/0/yes/no   (-L)
>
>     %% option minimization = off/end/most/every   (-n/-m/-l/-e)
>
>     %% option mode = table/table1/flat/flat1/goto/goto1 ...  (-T0/-T1...)
>
>     %% option output = "<filename>"  (-o<filename>)
>
>     %% option error = gnu/msvc ...
>
>
> to change this from IDE more convenient than change project settings.
> This can be alternative way to set options and options from command
> line (if set) will have max priority.
>
> 2.
> Mode for option -o<filename>.
> -o -  (-o "-") - for output generated code into stdout.
> This usefull for VS custom tool (custom code generator extention for
> VisualStudio).
> Now i create temp file for output - read it to std-stream and delete
> temp file to work around this.
>
>
> Best regards,
> Denis Naumov.
>
>
> PS: sorry for my english :)
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Wed Apr  6 22:27:56 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 06 Apr 2011 15:27:56 -0700
Subject: [ragel-users] Bad code generation for C# ?
In-Reply-To: <AANLkTi=hgZTXpx+qsB6Mie_LBF8uRZMtuuNY31cW_9Cw@mail.gmail.com>
References: <mailman.23.1300981981.2543.ragel-users@complang.org>
	<AANLkTi=hgZTXpx+qsB6Mie_LBF8uRZMtuuNY31cW_9Cw@mail.gmail.com>
Message-ID: <4D9CE8EC.60608@complang.org>

Also a bug. Thanks again. The C# code generator was contributed by a 
user and I never really had the chance to go over it in detail, which is 
why it hasn't yet been listed on the homepage as a supported language.

http://www.complang.org/redmine/issues/251

-Adrian


On 03/24/2011 09:47 AM, Denis Naumov wrote:
> Hi Adrian,
>
> I found that Alphtype Statement probably not work for C#.
>
> By default type is 'char'
>
> and ragel generate
>      static readonly char[] _test_trans_keys =  new ushort [] { '\u0022' .... }
>
> for -T0 mode and
>
>     switch( data[(      _ctx.current)] )
>         {  case '\u0009': goto tr0;  ...  }
>
> for -G0 mode
>
> it's ok.
>
> but if i use "alphtype byte;" ragel generate
>
>      static readonly byte[] _test_trans_keys =  new ushort [] { '\u0022' .... }
>
> for -T0 mode and
>
>     switch( data[(      _ctx.current)] )
>         {  case '\u0009': goto tr0;  ...  }
>
> for -G0 mode
>
> it's wrong. It must be
>      static readonly byte[] _test_trans_keys =  new ushort [] { 22, .... }
> and
>     switch( data[(      _ctx.current)] )
>         {  case 9: goto tr0;  ...  }
>
> it seems to be that ragel generate '\u****' constants for all alphtypes.
>
>
> Best regards,
> Denis Naumov.
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Wed Apr  6 22:37:32 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 06 Apr 2011 15:37:32 -0700
Subject: [ragel-users] ragel didn't rename data variable for C# code.
In-Reply-To: <AANLkTin4V=LNZXj92+SeEMN=t1Kv8aK4aquX2tFgh563@mail.gmail.com>
References: <E5C0C4D7A4524E4DB84B7A8AE07E0465@localdomain>
	<AANLkTin4V=LNZXj92+SeEMN=t1Kv8aK4aquX2tFgh563@mail.gmail.com>
Message-ID: <4D9CEB2C.50209@complang.org>

Tracked as a feature request.

http://www.complang.org/redmine/issues/252

I'm not sure I will address this for 6.7, as it may require a 
pre-parsing pass and there are some sticky issues involved ... how to 
parse the host language to get to the ragel code where we specify the 
host language? Granted, only scanning is necessary, but it is still a 
problem.

-Adrian

On 03/24/2011 11:38 PM, Denis Naumov wrote:
> Thanks :)
>
> I know about .rules files.  but this is a little not what I need.
> It's not problem to setup project options after project creation.
> But...
>
> before ragel i used re2c compiler and there was in-file-options like
>     /*!re2c
>          re2c:yyfill:enable = 1;
>          re2c:yyfill:check  = 1;
>         ...
>
>     */
>
> and before re2c i used flex. Flex has in-file scanner options like
>       %option   8bit reentrant bison-bridge
>       %option   warn nodefault
>       %option   yylineno
>       %option   outfile="scanner.c" header-file="scanner.h"
>
>
> For my developing i use VisualStudio .NET/2008/2010 and C++/C#.
>
> build .rules file - used in VS.NET/2008, but VS 2010 - not work with
> this. 2010 have .target files for this.
> and this all - only for C/C++. In C# projects there is no .rules files at all.
> For C# projects VS use "Custom tool" - for code generators. I write
> custom tool extention for VS to call ragel, but command line options -
> it's problem.
> There is no simple way to pass command line options to ragel.
> Now my custom tool read comment like this:
>             // BUILD-COMMAND-LINE: -L -A
> from first string of rl file and pass it to ragel.
>
> In this all situations - simplest universal way to save options for
> various projects - save them in rl file (IMHO).
> like re2c or flex. Something like
>      %%option name = value;
> And - this options is simple to change from IDE while writing file.
> Just change text in file rather than clicks for menu and dialog boxes
> every time.
>
> If the same option set from rl file and from command line - option
> value from command line have max priority or vice versa.
>
> Ragel have %%alphtype ... %%variable ... and other commands. I think
> it's not so difficult to add %% option name=value; command for command
> line options.
>
> it's all my IMHO. :)
>
> Best regards,
> Denis Naumov.
>
> PS: Sprry for bad english. :)
>
> 2011/3/24<ragel-user at jgoettgens.de>:
>> Whoops---I probably deleted part of a sentence shortly before I hit the send
>> button...
>>
>> ...
>> The build chain is just a little bit longer. Due to the mapping betwen the
>> suffix .rl to the rules, Ragel now looks almost like a VisualStudio tool.
>>
>> jg
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From nathan.sweet at gmail.com  Thu Apr  7 03:43:20 2011
From: nathan.sweet at gmail.com (Nate)
Date: Wed, 6 Apr 2011 20:43:20 -0700
Subject: [ragel-users] setting the initial state
Message-ID: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>

Hi Adrian and friends,

I need to re-parse some input, starting at an offset and an initial state. I
know I can just set "p" to the offset and "cs" to the state, however, my
states are meaningful outside of the parser. My program is a language parser
for syntax highlighting, so I need int constants that represent the type of
tokens founds. I need some way of saying, "parse this char[] at offset X
using initial token type LITERAL_CHAR". I don't care if the LITERAL_CHAR
constant is the same as the parser state, but I need some way of setting
"cs" to a specific machine name or label.

I came across a post on the mailing list from 2007 saying, "For a really
long time now I've been meaning to implement a new feature which should help
you out. %% write entry <machine_or_label>;". This would work nicely I
think. I guess it has been a *really* really long time now, eh? :D Is there
any chance that this feature could be implemented soonly?

Thanks!
-Nate

PS
Ragel is so awesome! :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110406/6bd9c4fb/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Thu Apr  7 20:16:53 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:16:53 -0700
Subject: [ragel-users] Bug? Backslash-escapes not escaped
	enough	in	.dotfiles?
In-Reply-To: <4D8F2816.6090106@yahoo.com>
References: <4D8F0BA5.7060002@yahoo.com>	<1D137513DEA84D33AF06BEC20A138A26@localdomain>	<4D8F2257.4080101@yahoo.com>
	<4D8F2816.6090106@yahoo.com>
Message-ID: <4D9E1BB5.3060002@complang.org>

Thanks Austin, I will consider the closed WRT ragel.

-Adrian

On 03/27/2011 05:05 AM, Austin Hastings wrote:
> On 3/27/2011 7:41 AM, Austin Hastings wrote:
>> Sure. I think this is a "dotty" bug, though.
>>
>
> I have submitted this as a bug against graphviz.
>
> =Austin
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ra

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 20:22:31 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:22:31 -0700
Subject: [ragel-users] One question.
In-Reply-To: <AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>
	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
Message-ID: <4D9E1D07.5050004@complang.org>

To expand on this a bit ... it is entirely up to the user to manage the 
stack allocation. Ragel's support for recursive structures (fcall/fret) 
is an extension to the basic model, which is pure state machine (not a 
PDA). If you find you have a lot recursion in what you need to parse, 
you should consider that ragel might not be the right tool for the job.

Regards

On 03/29/2011 09:59 PM, Nate wrote:
> Yes, see the int[] stack in the link. :) Also note the code under "prepush".
>
> -Nate
>
>
> On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
> <gordeev.vladimir.v at gmail.com <mailto:gordeev.vladimir.v at gmail.com>> wrote:
>
>     Hm, this looks like solution. I will try it. Thanks.
>
>     Related question: Does Ragel have some inner stack to handle nested
>     fcall/fret?
>
>
>     On 30.03.2011 00:59, Nate wrote:
>>     You can use fcall to jump to a machine, then fret to resume where
>>     you were. It's a bit tricky, but once you understand it you can
>>     parse recursively. See the startTable action here (though this is
>>     a pretty hairy parser):
>>     http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>>
>>     -Nate
>>
>>
>>     On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>>     <twisolar at gmail.com <mailto:twisolar at gmail.com>> wrote:
>>
>>         On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>>         <gordeev.vladimir.v at gmail.com
>>         <mailto:gordeev.vladimir.v at gmail.com>> wrote:
>>         > So I got following error:
>>         >
>>         >     test.rl:7:32: graph lookup of "list" failed
>>
>>         The reason you get that error is because a rule can only reference
>>         definitions that came before it. "list" doesn't exist until the
>>         definition is finished, so it can't reference itself. (That would
>>         create a recursive structure anyways, which Ragel isn't
>>         equipped to
>>         handle natively.)
>>
>>         ~Jonathan
>>
>>         _______________________________________________
>>         ragel-users mailing list
>>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>>         http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>     _______________________________________________
>>     ragel-users mailing list
>>     ragel-users at complang.org  <mailto:ragel-users at complang.org>
>>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>     _______________________________________________
>     ragel-users mailing list
>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
> --===============092103

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 20:30:42 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:30:42 -0700
Subject: [ragel-users] Debug
In-Reply-To: <4D9A2C60.4070008@gmail.com>
References: <4D9A2C60.4070008@gmail.com>
Message-ID: <4D9E1EF2.6000203@complang.org>

Combination graphviz and debug statements. If really strange things are 
happening the most likely culprit is unintended nondeterminism. Often I 
will shrink the machine (and cut back the input) to narrow down 
problems. If you bring it down to something really small and 
incrementally enable components, all the while testing your assumptions, 
you can often find the source of the problem quite quickly.

On 04/04/2011 01:38 PM, Vladimir VG wrote:
> Hi everyone,
>
> How you usually debug your ragel-based parser?
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/rag

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 20:34:04 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:34:04 -0700
Subject: [ragel-users] Java static field initializers
In-Reply-To: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>
References: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>
Message-ID: <4D9E1FBC.2040701@complang.org>

If I recall correctly, the functions are there because the initializers 
become code in the calling function. Since java has a limit on the 
amount of (compiled) code per function, we always use separate functions 
so we can test for a reasonable approximation of the limit on a 
per-array basis. I think that was it.

On 04/06/2011 01:20 AM, Nate wrote:
> Ragel currently outputs a method and static field for Java, eg:
>
> private static byte[] init__tableLayout_trans_targs_0 () { return new
> byte[] {...}; }
> private static final byte _tableLayout_trans_targs[] =
> init__tableLayout_trans_targs_0();
>
> We could save a few bytes on class file size by just assigning the
> array, without an method:
>
> private static final byte _tableLayout_trans_targs[] = new byte[] {...};
>
> The end result is the exactly the same, but less code needs to be output
> and the class files will be a little bit smaller.
>
> -Nate
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
> --===============1102049

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 21:11:26 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 14:11:26 -0700
Subject: [ragel-users] Consuming input
In-Reply-To: <4d9c6f049b523_5566a77d83c5cf@a2-winter12.tmail>
References: <4d9c6f049b523_5566a77d83c5cf@a2-winter12.tmail>
Message-ID: <4D9E287E.6000306@complang.org>

See the attached code. Note the "| any*". This is a trick to make ragel 
accept any prefix of the machine. But it only works in this case because 
you want the machine to accept any string at all. What is really needed 
is an any-prefix operator (in the TODO for years).

If this is too cryptic, you may want to consider using state charts.

-Adrian

On 04/06/2011 06:47 AM, Wilson Barros wrote:
> main:='O'@init ((any-[CTRDH])*
> ('C'$ccaOn(any-'c')*'c'$ccaOff
> |'T'$txOn(any-'t')*'t'$txOff
> |'R'$rxOn(any-'r')*'r'$rxOff
> |'D'$dozeOn(any-'A')*'A'$dozeOff
> |'H'$hibOn(any-'A')*'A'$hibOff #)
> )*;

-- 
Adrian D. Thurston
http://www.complang.org/thurston/
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: modem.rl
URL: <http://www.colm.net/pipermail/ragel/attachments/20110407/81c2e0c9/attachment.ksh>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From gordeev.vladimir.v at gmail.com  Thu Apr  7 21:19:53 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Fri, 08 Apr 2011 00:19:53 +0300
Subject: [ragel-users] One question.
In-Reply-To: <4D9E1D07.5050004@complang.org>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
	<4D9E1D07.5050004@complang.org>
Message-ID: <4D9E2A79.30705@gmail.com>

On 04/07/2011 11:22 PM, Adrian Thurston wrote:

Yes, I understand. I do it exactly with fret/fcall. Here some working 
sample:
https://github.com/vladimir-vg/alonzo_prototype/blob/master/parser/parser.rl

 > ragel might not be the right tool for the job.

Can you list some right tools for programming languages parsing?

> To expand on this a bit ... it is entirely up to the user to manage 
> the stack allocation. Ragel's support for recursive structures 
> (fcall/fret) is an extension to the basic model, which is pure state 
> machine (not a PDA). If you find you have a lot recursion in what you 
> need to parse, you should consider that ragel might not be the right 
> tool for the job.
>
> Regards
>


_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 21:20:30 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 14:20:30 -0700
Subject: [ragel-users] setting the initial state
In-Reply-To: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>
References: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>
Message-ID: <4D9E2A9E.5030508@complang.org>

I can't say when it will be done, but I can give you an issue number :)

http://www.complang.org/redmine/issues/256

-Adrian

On 04/06/2011 08:43 PM, Nate wrote:
> Hi Adrian and friends,
>
> I need to re-parse some input, starting at an offset and an initial
> state. I know I can just set "p" to the offset and "cs" to the state,
> however, my states are meaningful outside of the parser. My program is a
> language parser for syntax highlighting, so I need int constants that
> represent the type of tokens founds. I need some way of saying, "parse
> this char[] at offset X using initial token type LITERAL_CHAR". I don't
> care if the LITERAL_CHAR constant is the same as the parser state, but I
> need some way of setting "cs" to a specific machine name or label.
>
> I came across a post on the mailing list from 2007 saying, "For a really
> long time now I've been meaning to implement a new feature which should
> help you out. %% write entry <machine_or_label>;". This would work
> nicely I think. I guess it has been a *really* really long time now, eh?
> :D Is there any chance that this feature could be implemented soonly?
>
> Thanks!
> -Nate
>
> PS
> Ragel is so awesome! :)
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 21:39:10 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 14:39:10 -0700
Subject: [ragel-users] One question.
In-Reply-To: <4D9E2A79.30705@gmail.com>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>	<4D9E1D07.5050004@complang.org>
	<4D9E2A79.30705@gmail.com>
Message-ID: <4D9E2EFE.7080402@complang.org>

I will normally go for my own, Kelbt :) But if I need something that is 
typically installed almost everywhere and known to other devs, I will 
use bison.

On 04/07/2011 02:19 PM, Vladimir VG wrote:
> On 04/07/2011 11:22 PM, Adrian Thurston wrote:
>
> Yes, I understand. I do it exactly with fret/fcall. Here some working
> sample:
> https://github.com/vladimir-vg/alonzo_prototype/blob/master/parser/parser.rl
>
>
>  > ragel might not be the right tool for the job.
>
> Can you list some right tools for programming languages parsing?
>
>> To expand on this a bit ... it is entirely up to the user to manage
>> the stack allocation. Ragel's support for recursive structures
>> (fcall/fret) is an extension to the basic model, which is pure state
>> machine (not a PDA). If you find you have a lot recursion in what you
>> need to parse, you should consider that ragel might not be the right
>> tool for the job.
>>
>> Regards
>>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From ygrek at autistici.org  Thu Apr  7 21:46:00 2011
From: ygrek at autistici.org (ygrek)
Date: Fri, 8 Apr 2011 00:46:00 +0300
Subject: [ragel-users] ocaml codegen
Message-ID: <20110408004600.7e1f8148.ygrek@autistici.org>

Hello,

 Attached patch adds ragel ocaml code generation.
 Implemented code styles are : -T0 -T1 -F0 -F1 and -G0 (partial).
 The only input data type is string (elements are bytes).
 Several simple tests are included in examples/ocaml/.
 Here are speed benchmark results for different codegen styles
 (examples/go/url.rl converted to ocaml host language) :

ocaml -T0 : 4.02 sec
ocaml -T1 : 3.85 sec
ocaml -F0 : 1.72 sec
ocaml -F1 : 1.52 sec
ocaml -G0 : 1.70 sec
go -G2    : 2.18 sec

rounds : 100_000
go : 8g version release.2011-02-01.1 7463
ocaml : 3.11.2

-- 
 ygrek
 http://ygrek.org.ua/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ocaml-codegen.diff.gz
Type: application/octet-stream
Size: 30687 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel/attachments/20110408/3bdbb6ad/attachment.obj>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From zabivator at gmail.com  Thu Apr  7 22:39:11 2011
From: zabivator at gmail.com (Oleg Tsarev)
Date: Fri, 8 Apr 2011 01:39:11 +0300
Subject: [ragel-users] ocaml codegen
In-Reply-To: <20110408004600.7e1f8148.ygrek@autistici.org>
References: <20110408004600.7e1f8148.ygrek@autistici.org>
Message-ID: <BANLkTimVBy52NqVUL0fkRxSeNNTK0-c3oQ@mail.gmail.com>

Thank you, nice!

2011/4/8 ygrek <ygrek at autistici.org>:
> Hello,
>
>  Attached patch adds ragel ocaml code generation.
>  Implemented code styles are : -T0 -T1 -F0 -F1 and -G0 (partial).
>  The only input data type is string (elements are bytes).
>  Several simple tests are included in examples/ocaml/.
>  Here are speed benchmark results for different codegen styles
>  (examples/go/url.rl converted to ocaml host language) :
>
> ocaml -T0 : 4.02 sec
> ocaml -T1 : 3.85 sec
> ocaml -F0 : 1.72 sec
> ocaml -F1 : 1.52 sec
> ocaml -G0 : 1.70 sec
> go -G2    : 2.18 sec
>
> rounds : 100_000
> go : 8g version release.2011-02-01.1 7463
> ocaml : 3.11.2
>
> --
>  ygrek
>  http://ygrek.org.ua/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From nathan.sweet at gmail.com  Thu Apr  7 22:50:06 2011
From: nathan.sweet at gmail.com (Nate)
Date: Thu, 7 Apr 2011 15:50:06 -0700
Subject: [ragel-users] One question.
In-Reply-To: <4D9E1D07.5050004@complang.org>
References: <4D923DDF.3030805@gmail.com>
	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>
	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>
	<4D92B3B1.3070509@gmail.com>
	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
	<4D9E1D07.5050004@complang.org>
Message-ID: <BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>

I've now done a couple projects with recursion using fcall. It isn't too
bad. Is there something I lose by doing this, beyond the ability to express
the recursion in Ragel? What would really make switch tools for a project?

-Nate


On Thu, Apr 7, 2011 at 1:22 PM, Adrian Thurston <thurston at complang.org>wrote:

> To expand on this a bit ... it is entirely up to the user to manage the
> stack allocation. Ragel's support for recursive structures (fcall/fret) is
> an extension to the basic model, which is pure state machine (not a PDA). If
> you find you have a lot recursion in what you need to parse, you should
> consider that ragel might not be the right tool for the job.
>
> Regards
>
>
> On 03/29/2011 09:59 PM, Nate wrote:
>
>> Yes, see the int[] stack in the link. :) Also note the code under
>> "prepush".
>>
>> -Nate
>>
>>
>> On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
>> <gordeev.vladimir.v at gmail.com <mailto:gordeev.vladimir.v at gmail.com>>
>> wrote:
>>
>>    Hm, this looks like solution. I will try it. Thanks.
>>
>>    Related question: Does Ragel have some inner stack to handle nested
>>    fcall/fret?
>>
>>
>>    On 30.03.2011 00:59, Nate wrote:
>>
>>>    You can use fcall to jump to a machine, then fret to resume where
>>>    you were. It's a bit tricky, but once you understand it you can
>>>    parse recursively. See the startTable action here (though this is
>>>    a pretty hairy parser):
>>>
>>> http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>>>
>>>    -Nate
>>>
>>>
>>>    On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>>>    <twisolar at gmail.com <mailto:twisolar at gmail.com>> wrote:
>>>
>>>        On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>>>        <gordeev.vladimir.v at gmail.com
>>>        <mailto:gordeev.vladimir.v at gmail.com>> wrote:
>>>        > So I got following error:
>>>        >
>>>        >     test.rl:7:32: graph lookup of "list" failed
>>>
>>>        The reason you get that error is because a rule can only reference
>>>        definitions that came before it. "list" doesn't exist until the
>>>        definition is finished, so it can't reference itself. (That would
>>>        create a recursive structure anyways, which Ragel isn't
>>>        equipped to
>>>        handle natively.)
>>>
>>>        ~Jonathan
>>>
>>>        _______________________________________________
>>>        ragel-users mailing list
>>>        ragel-users at complang.org <mailto:ragel-users at complang.org>
>>>
>>>        http://www.complang.org/mailman/listinfo/ragel-users
>>>
>>>
>>>
>>>    _______________________________________________
>>>    ragel-users mailing list
>>>    ragel-users at complang.org  <mailto:ragel-users at complang.org>
>>>
>>>    http://www.complang.org/mailman/listinfo/ragel-users
>>>
>>
>>
>>    _______________________________________________
>>    ragel-users mailing list
>>    ragel-users at complang.org <mailto:ragel-users at complang.org>
>>
>>    http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>> --===============092103
>>
>
> --
> Adrian D. Thurston
> http://www.complang.org/thurston/
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110407/933dc7e0/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From nathan.sweet at gmail.com  Thu Apr  7 22:59:28 2011
From: nathan.sweet at gmail.com (Nate)
Date: Thu, 7 Apr 2011 15:59:28 -0700
Subject: [ragel-users] setting the initial state
In-Reply-To: <4D9E2A9E.5030508@complang.org>
References: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>
	<4D9E2A9E.5030508@complang.org>
Message-ID: <BANLkTimFHB+Viy9yAX61YGCt34k5qSKvpQ@mail.gmail.com>

Fair enough. Thanks! :)

-Nate


On Thu, Apr 7, 2011 at 2:20 PM, Adrian Thurston <thurston at complang.org>wrote:

> I can't say when it will be done, but I can give you an issue number :)
>
> http://www.complang.org/redmine/issues/256
>
> -Adrian
>
>
> On 04/06/2011 08:43 PM, Nate wrote:
>
>> Hi Adrian and friends,
>>
>> I need to re-parse some input, starting at an offset and an initial
>> state. I know I can just set "p" to the offset and "cs" to the state,
>> however, my states are meaningful outside of the parser. My program is a
>> language parser for syntax highlighting, so I need int constants that
>> represent the type of tokens founds. I need some way of saying, "parse
>> this char[] at offset X using initial token type LITERAL_CHAR". I don't
>> care if the LITERAL_CHAR constant is the same as the parser state, but I
>> need some way of setting "cs" to a specific machine name or label.
>>
>> I came across a post on the mailing list from 2007 saying, "For a really
>> long time now I've been meaning to implement a new feature which should
>> help you out. %% write entry <machine_or_label>;". This would work
>> nicely I think. I guess it has been a *really* really long time now, eh?
>> :D Is there any chance that this feature could be implemented soonly?
>>
>> Thanks!
>> -Nate
>>
>> PS
>> Ragel is so awesome! :)
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
> --
> Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110407/edb2a091/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From nathan.sweet at gmail.com  Thu Apr  7 23:08:59 2011
From: nathan.sweet at gmail.com (Nate)
Date: Thu, 7 Apr 2011 16:08:59 -0700
Subject: [ragel-users] Java static field initializers
In-Reply-To: <4D9E1FBC.2040701@complang.org>
References: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>
	<4D9E1FBC.2040701@complang.org>
Message-ID: <BANLkTimxsnyHr1ww3Akd6f9ZJiJssYWCSg@mail.gmail.com>

Ah, interesting. Does Ragel actually approximate the bytecode size of the
separate functions and break them into multiple init functions if near the
64kb limit? If it does, maybe an approximation could be done to avoid init
functions entirely. Or alternatively, how about a "write init" option to not
use functions at all?

-Nate


On Thu, Apr 7, 2011 at 1:34 PM, Adrian Thurston <thurston at complang.org>wrote:

> If I recall correctly, the functions are there because the initializers
> become code in the calling function. Since java has a limit on the amount of
> (compiled) code per function, we always use separate functions so we can
> test for a reasonable approximation of the limit on a per-array basis. I
> think that was it.
>
>
> On 04/06/2011 01:20 AM, Nate wrote:
>
>> Ragel currently outputs a method and static field for Java, eg:
>>
>> private static byte[] init__tableLayout_trans_targs_0 () { return new
>> byte[] {...}; }
>> private static final byte _tableLayout_trans_targs[] =
>> init__tableLayout_trans_targs_0();
>>
>> We could save a few bytes on class file size by just assigning the
>> array, without an method:
>>
>> private static final byte _tableLayout_trans_targs[] = new byte[] {...};
>>
>> The end result is the exactly the same, but less code needs to be output
>> and the class files will be a little bit smaller.
>>
>> -Nate
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>> --===============1102049
>>
>
> --
> Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110407/2f9fe44d/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Fri Apr  8 06:00:29 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 23:00:29 -0700
Subject: [ragel-users] ocaml codegen
In-Reply-To: <20110408004600.7e1f8148.ygrek@autistici.org>
References: <20110408004600.7e1f8148.ygrek@autistici.org>
Message-ID: <4D9EA47D.7090608@complang.org>

That is great, thank you!

On 11-04-07 02:46 PM, ygrek wrote:
> Hello,
>
>   Attached patch adds ragel ocaml code generation.
>   Implemented code styles are : -T0 -T1 -F0 -F1 and -G0 (partial).
>   The only input data type is string (elements are bytes).
>   Several simple tests are included in examples/ocaml/.
>   Here are speed benchmark results for different codegen styles
>   (examples/go/url.rl converted to ocaml host language) :
>
> ocaml -T0 : 4.02 sec
> ocaml -T1 : 3.85 sec
> ocaml -F0 : 1.72 sec
> ocaml -F1 : 1.52 sec
> ocaml -G0 : 1.70 sec
> go -G2    : 2.18 sec
>
> rounds : 100_000
> go : 8g version release.2011-02-01.1 7463
> ocaml : 3.11.2
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From gordeev.vladimir.v at gmail.com  Fri Apr  8 16:09:49 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Fri, 08 Apr 2011 19:09:49 +0300
Subject: [ragel-users] Regex end and begin of data.
In-Reply-To: <4D9EA47D.7090608@complang.org>
References: <20110408004600.7e1f8148.ygrek@autistici.org>
	<4D9EA47D.7090608@complang.org>
Message-ID: <4D9F334D.2000102@gmail.com>

Is there in Ragel equivalent regexp's $ ^ patterns?

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From andrey.vityuk at gmail.com  Sat Apr  9 05:48:40 2011
From: andrey.vityuk at gmail.com (Andrey Vityuk)
Date: Sat, 9 Apr 2011 08:48:40 +0300
Subject: [ragel-users] Unexpected final state action call
Message-ID: <BANLkTinSYj8q_zDAyQjDqa54iu+84_t-QA@mail.gmail.com>

Hi,

I write some sample rules:

content = any+ -- '||';
main := content %{ System.out.println("Matched content. fpc = "  + fpc); } .
'||' . '\n'?;

For input: "abc||" action called 2 times: for each pipe char:
Matched content. fpc = 3
Matched content. fpc = 4

Is it correct behaviour? How to workaround it?

Thanks,
Andrey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110409/9c8866ce/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From andrey.vityuk at gmail.com  Sat Apr  9 09:40:10 2011
From: andrey.vityuk at gmail.com (Andrey Vityuk)
Date: Sat, 9 Apr 2011 12:40:10 +0300
Subject: [ragel-users] Unexpected final state action call
Message-ID: <BANLkTim5a6OWOycN0fyD=UhrhZ1i+ZCHjw@mail.gmail.com>

Actually I found solution:
action start { System.out.println("start. fpc = " + fpc); }
action end  { System.out.println("end. fpc = " + fpc); }

content = (any+ -- '||') >start ;
main := content . '||' @end . '\n'?;

But the problem is my original rules are more complex:
content = '||' . (any+ -- '||') >start ;
main := content+ . '||' @end . '\n'?;

For input: "||abc||efg||" they work fine:
start. fpc = 2
end. fpc = 6
start. fpc = 7
end. fpc = 11
start. fpc = 12
Consumed all: true

But for input: "||abc|||" I am getting unxpected calls:
start. fpc = 2
end. fpc = 6
start. fpc = 7
end. fpc = 7
start. fpc = 8
Consumed all: true
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110409/0e43ae92/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Sat Apr  9 17:06:58 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:06:58 -0700
Subject: [ragel-users] One question.
In-Reply-To: <BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>	<4D9E1D07.5050004@complang.org>
	<BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>
Message-ID: <4DA09232.1090009@complang.org>

It depends on the language being parsed. If it's easy to know when push 
and pop (because of the appearance of certain tokens) then you probably 
won't run into problems and it's just a matter of personal preference. 
If the language is more complicated than that (say like a programming 
language) then you are certainly going to get a headache trying to parse 
in ragel and you'll have to switch.

On 11-04-07 03:50 PM, Nate wrote:
> I've now done a couple projects with recursion using fcall. It isn't too
> bad. Is there something I lose by doing this, beyond the ability to
> express the recursion in Ragel? What would really make switch tools for
> a project?
>
> -Nate
>
>
> On Thu, Apr 7, 2011 at 1:22 PM, Adrian Thurston <thurston at complang.org
> <mailto:thurston at complang.org>> wrote:
>
>     To expand on this a bit ... it is entirely up to the user to manage
>     the stack allocation. Ragel's support for recursive structures
>     (fcall/fret) is an extension to the basic model, which is pure state
>     machine (not a PDA). If you find you have a lot recursion in what
>     you need to parse, you should consider that ragel might not be the
>     right tool for the job.
>
>     Regards
>
>
>     On 03/29/2011 09:59 PM, Nate wrote:
>
>         Yes, see the int[] stack in the link. :) Also note the code
>         under "prepush".
>
>         -Nate
>
>
>         On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
>         <gordeev.vladimir.v at gmail.com
>         <mailto:gordeev.vladimir.v at gmail.com>
>         <mailto:gordeev.vladimir.v at gmail.com
>         <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>
>             Hm, this looks like solution. I will try it. Thanks.
>
>             Related question: Does Ragel have some inner stack to handle
>         nested
>             fcall/fret?
>
>
>             On 30.03.2011 00:59, Nate wrote:
>
>                 You can use fcall to jump to a machine, then fret to
>             resume where
>                 you were. It's a bit tricky, but once you understand it
>             you can
>                 parse recursively. See the startTable action here
>             (though this is
>                 a pretty hairy parser):
>             http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>
>                 -Nate
>
>
>                 On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>             <twisolar at gmail.com <mailto:twisolar at gmail.com>
>             <mailto:twisolar at gmail.com <mailto:twisolar at gmail.com>>> wrote:
>
>                     On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>             <gordeev.vladimir.v at gmail.com
>             <mailto:gordeev.vladimir.v at gmail.com>
>             <mailto:gordeev.vladimir.v at gmail.com
>             <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>              > So I got following error:
>              >
>              >     test.rl:7:32: graph lookup of "list" failed
>
>                     The reason you get that error is because a rule can
>             only reference
>                     definitions that came before it. "list" doesn't
>             exist until the
>                     definition is finished, so it can't reference
>             itself. (That would
>                     create a recursive structure anyways, which Ragel isn't
>                     equipped to
>                     handle natively.)
>
>                     ~Jonathan
>
>                     _______________________________________________
>                     ragel-users mailing list
>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>             <mailto:ragel-users at complang.org
>             <mailto:ragel-users at complang.org>>
>
>             http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>                 _______________________________________________
>                 ragel-users mailing list
>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>             <mailto:ragel-users at complang.org
>             <mailto:ragel-users at complang.org>>
>
>             http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>             _______________________________________________
>             ragel-users mailing list
>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>         <mailto:ragel-users at complang.org <mailto:ragel-users at complang.org>>
>
>         http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
>         _______________________________________________
>         ragel-users mailing list
>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>         http://www.complang.org/mailman/listinfo/ragel-users
>         --===============092103
>
>
>     --
>     Adrian D. Thurston
>     http://www.complang.org/thurston/
>
>
>     _______________________________________________
>     ragel-users mailing list
>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Sat Apr  9 17:17:30 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:17:30 -0700
Subject: [ragel-users] Java static field initializers
In-Reply-To: <BANLkTimxsnyHr1ww3Akd6f9ZJiJssYWCSg@mail.gmail.com>
References: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>	<4D9E1FBC.2040701@complang.org>
	<BANLkTimxsnyHr1ww3Akd6f9ZJiJssYWCSg@mail.gmail.com>
Message-ID: <4DA094AA.3020505@complang.org>

There is a hardcoded array limit based on one-time measurements.

I think that would be possible, but would the gain in startup speed be 
worth the coding effort?

On 11-04-07 04:08 PM, Nate wrote:
> Ah, interesting. Does Ragel actually approximate the bytecode size of
> the separate functions and break them into multiple init functions if
> near the 64kb limit? If it does, maybe an approximation could be done to
> avoid init functions entirely. Or alternatively, how about a "write
> init" option to not use functions at all?
>
> -Nate
>
>
> On Thu, Apr 7, 2011 at 1:34 PM, Adrian Thurston <thurston at complang.org
> <mailto:thurston at complang.org>> wrote:
>
>     If I recall correctly, the functions are there because the
>     initializers become code in the calling function. Since java has a
>     limit on the amount of (compiled) code per function, we always use
>     separate functions so we can test for a reasonable approximation of
>     the limit on a per-array basis. I think that was it.
>
>
>     On 04/06/2011 01:20 AM, Nate wrote:
>
>         Ragel currently outputs a method and static field for Java, eg:
>
>         private static byte[] init__tableLayout_trans_targs_0 () {
>         return new
>         byte[] {...}; }
>         private static final byte _tableLayout_trans_targs[] =
>         init__tableLayout_trans_targs_0();
>
>         We could save a few bytes on class file size by just assigning the
>         array, without an method:
>
>         private static final byte _tableLayout_trans_targs[] = new
>         byte[] {...};
>
>         The end result is the exactly the same, but less code needs to
>         be output
>         and the class files will be a little bit smaller.
>
>         -Nate
>
>
>
>         _______________________________________________
>         ragel-users mailing list
>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>         http://www.complang.org/mailman/listinfo/ragel-users
>         --===============1102049
>
>
>     --
>     Adrian D. Thurston
>     http://www.complang.org/thurston/
>
>     _______________________________________________
>     ragel-users mailing list
>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Sat Apr  9 17:20:14 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:20:14 -0700
Subject: [ragel-users] Regex end and begin of data.
In-Reply-To: <4D9F334D.2000102@gmail.com>
References: <20110408004600.7e1f8148.ygrek@autistici.org>	<4D9EA47D.7090608@complang.org>
	<4D9F334D.2000102@gmail.com>
Message-ID: <4DA0954E.7010505@complang.org>

No, because ragel does not ever skip any bytes before trying to match. 
Similarly, if you supply additional data to a state machine that is in 
the final state, it will move to the error state.

On 11-04-08 09:09 AM, Vladimir VG wrote:
> Is there in Ragel equivalent regexp's $ ^ patterns?
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Sat Apr  9 17:29:55 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:29:55 -0700
Subject: [ragel-users] Unexpected final state action call
In-Reply-To: <BANLkTim5a6OWOycN0fyD=UhrhZ1i+ZCHjw@mail.gmail.com>
References: <BANLkTim5a6OWOycN0fyD=UhrhZ1i+ZCHjw@mail.gmail.com>
Message-ID: <4DA09793.6000202@complang.org>

You could do one of the following, depending on your parsing requirements.

1. exclude ( '||' '|'* ) from content.
2. specify %end

If things get too complicated, you may want to switch to a scanner.


On 11-04-09 02:40 AM, Andrey Vityuk wrote:
> Actually I found solution:
> action start { System.out.println("start. fpc = " + fpc); }
> action end  { System.out.println("end. fpc = " + fpc); }
>
> content = (any+ -- '||') >start ;
> main := content . '||' @end . '\n'?;
>
> But the problem is my original rules are more complex:
> content = '||' . (any+ -- '||') >start ;
> main := content+ . '||' @end . '\n'?;
>
> For input: "||abc||efg||" they work fine:
> start. fpc = 2
> end. fpc = 6
> start. fpc = 7
> end. fpc = 11
> start. fpc = 12
> Consumed all: true
>
> But for input: "||abc|||" I am getting unxpected calls:
> start. fpc = 2
> end. fpc = 6
> start. fpc = 7
> end. fpc = 7
> start. fpc = 8
> Consumed all: true
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From gordeev.vladimir.v at gmail.com  Sat Apr  9 18:01:28 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Sat, 09 Apr 2011 21:01:28 +0300
Subject: [ragel-users] One question.
In-Reply-To: <4DA09232.1090009@complang.org>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>	<4D9E1D07.5050004@complang.org>	<BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>
	<4DA09232.1090009@complang.org>
Message-ID: <4DA09EF8.50605@gmail.com>

I already understand that =). I switched to ANTLR.

On 04/09/2011 08:06 PM, Adrian Thurston wrote:
> It depends on the language being parsed. If it's easy to know when 
> push and pop (because of the appearance of certain tokens) then you 
> probably won't run into problems and it's just a matter of personal 
> preference. If the language is more complicated than that (say like a 
> programming language) then you are certainly going to get a headache 
> trying to parse in ragel and you'll have to switch.
>
> On 11-04-07 03:50 PM, Nate wrote:
>> I've now done a couple projects with recursion using fcall. It isn't too
>> bad. Is there something I lose by doing this, beyond the ability to
>> express the recursion in Ragel? What would really make switch tools for
>> a project?
>>
>> -Nate
>>
>>
>> On Thu, Apr 7, 2011 at 1:22 PM, Adrian Thurston <thurston at complang.org
>> <mailto:thurston at complang.org>> wrote:
>>
>>     To expand on this a bit ... it is entirely up to the user to manage
>>     the stack allocation. Ragel's support for recursive structures
>>     (fcall/fret) is an extension to the basic model, which is pure state
>>     machine (not a PDA). If you find you have a lot recursion in what
>>     you need to parse, you should consider that ragel might not be the
>>     right tool for the job.
>>
>>     Regards
>>
>>
>>     On 03/29/2011 09:59 PM, Nate wrote:
>>
>>         Yes, see the int[] stack in the link. :) Also note the code
>>         under "prepush".
>>
>>         -Nate
>>
>>
>>         On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
>> <gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>
>> <mailto:gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>>
>>             Hm, this looks like solution. I will try it. Thanks.
>>
>>             Related question: Does Ragel have some inner stack to handle
>>         nested
>>             fcall/fret?
>>
>>
>>             On 30.03.2011 00:59, Nate wrote:
>>
>>                 You can use fcall to jump to a machine, then fret to
>>             resume where
>>                 you were. It's a bit tricky, but once you understand it
>>             you can
>>                 parse recursively. See the startTable action here
>>             (though this is
>>                 a pretty hairy parser):
>>             
>> http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>>
>>                 -Nate
>>
>>
>>                 On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>> <twisolar at gmail.com <mailto:twisolar at gmail.com>
>> <mailto:twisolar at gmail.com <mailto:twisolar at gmail.com>>> wrote:
>>
>>                     On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>> <gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>
>> <mailto:gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>> > So I got following error:
>> >
>> >     test.rl:7:32: graph lookup of "list" failed
>>
>>                     The reason you get that error is because a rule can
>>             only reference
>>                     definitions that came before it. "list" doesn't
>>             exist until the
>>                     definition is finished, so it can't reference
>>             itself. (That would
>>                     create a recursive structure anyways, which Ragel 
>> isn't
>>                     equipped to
>>                     handle natively.)
>>
>>                     ~Jonathan
>>
>>                     _______________________________________________
>>                     ragel-users mailing list
>>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>> <mailto:ragel-users at complang.org
>> <mailto:ragel-users at complang.org>>
>>
>>             http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>                 _______________________________________________
>>                 ragel-users mailing list
>>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>> <mailto:ragel-users at complang.org
>> <mailto:ragel-users at complang.org>>
>>
>>             http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>             _______________________________________________
>>             ragel-users mailing list
>>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>> <mailto:ragel-users at complang.org <mailto:ragel-users at complang.org>>
>>
>>         http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>
>>         _______________________________________________
>>         ragel-users mailing list
>>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>>         http://www.complang.org/mailman/listinfo/ragel-users
>>         --===============092103
>>
>>
>>     --
>>     Adrian D. Thurston
>>     http://www.complang.org/thurston/
>>
>>
>>     _______________________________________________
>>     ragel-users mailing list
>>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>>     http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>


_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From 8181919 at gmail.com  Sat Apr 16 16:07:19 2011
From: 8181919 at gmail.com (Midas)
Date: Sun, 17 Apr 2011 00:07:19 +0800
Subject: [ragel-users] How to generate Objective-C?
Message-ID: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>

I'm to ragle, and when I use ragel source.rl, it only generate C file.
thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110417/1141db89/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Sun Apr 17 15:36:03 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sun, 17 Apr 2011 08:36:03 -0700
Subject: [ragel-users] How to generate Objective-C?
In-Reply-To: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>
References: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>
Message-ID: <4DAB08E3.6020006@complang.org>

The C code generator generates valid Objective-C as well.

On 11-04-16 09:07 AM, Midas wrote:
> I'm to ragle, and when I use ragel source.rl, it only generate C file.
> thanks
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From 8181919 at gmail.com  Tue Apr 19 10:09:37 2011
From: 8181919 at gmail.com (Midas)
Date: Tue, 19 Apr 2011 18:09:37 +0800
Subject: [ragel-users] How to generate Objective-C?
In-Reply-To: <4DAB08E3.6020006@complang.org>
References: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>
	<4DAB08E3.6020006@complang.org>
Message-ID: <BANLkTinpCXR0jJRc9rHMtg529zJZ7yMNGA@mail.gmail.com>

I see, thanks

2011/4/17 Adrian Thurston <thurston at complang.org>

> The C code generator generates valid Objective-C as well.
>
>
> On 11-04-16 09:07 AM, Midas wrote:
>
>> I'm to ragle, and when I use ragel source.rl, it only generate C file.
>> thanks
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
> --
> Dr. Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20110419/067f5006/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From ygrek at autistici.org  Mon Apr 25 07:37:23 2011
From: ygrek at autistici.org (ygrek)
Date: Mon, 25 Apr 2011 10:37:23 +0300
Subject: [ragel-users] access prefix
Message-ID: <20110425103723.9b2088b3.ygrek@autistici.org>

Hello,

 Is there any reason why %access defines prefix for all state variables except some (p,pe,cs,eof)?
 I think it would be useful to specify prefix for all state variables (and then override some variables if
 needed with individual %variable declarations).

-- 
 ygrek
 http://ygrek.org.ua/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Mon Apr 25 16:06:50 2011
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 25 Apr 2011 09:06:50 -0700
Subject: [ragel-users] access prefix
In-Reply-To: <20110425103723.9b2088b3.ygrek@autistici.org>
References: <20110425103723.9b2088b3.ygrek@autistici.org>
Message-ID: <4DB59C1A.3040605@complang.org>

Hi,

The p, pe, and eof variables are not modified because they do not need 
to be maintained across partial executions of state machines. They are 
normally declared as local variables in the function that contains the 
write exec.

The cs variable should be modified. If you are finding it isn't for some 
language, then that would definitely be a bug.

-Adrian

On 11-04-25 12:37 AM, ygrek wrote:
> Hello,
>
>   Is there any reason why %access defines prefix for all state variables except some (p,pe,cs,eof)?
>   I think it would be useful to specify prefix for all state variables (and then override some variables if
>   needed with individual %variable declarations).
>

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From brian at brimworks.com  Tue Apr 26 04:02:24 2011
From: brian at brimworks.com (Brian Maher)
Date: Mon, 25 Apr 2011 21:02:24 -0700
Subject: [ragel-users] access prefix
In-Reply-To: <4DB59C1A.3040605@complang.org>
References: <20110425103723.9b2088b3.ygrek@autistici.org>
	<4DB59C1A.3040605@complang.org>
Message-ID: <BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>

If it makes a difference, I actually keep p, pe, and eof in my
"struct" for managing ragel state, so if %access defined a prefix for
*all* state variables, then it would be a welcome change from my
perspective.

Although Adrian is right about p, pe, and eof being rather
"transient", I find it easier to write functions that take a single
"struct" argument that manages the ragel state.  This way I can write
a function called state_machine that encapsulates all my actions for
the state machine, but ends up delegating each action to a function
that takes the "struct" as an argument.  I just find this way of
writing code is easier for me and my editor to digest.

Cheers,
-Brian

On Mon, Apr 25, 2011 at 9:06 AM, Adrian Thurston <thurston at complang.org> wrote:
> Hi,
>
> The p, pe, and eof variables are not modified because they do not need to be
> maintained across partial executions of state machines. They are normally
> declared as local variables in the function that contains the write exec.
>
> The cs variable should be modified. If you are finding it isn't for some
> language, then that would definitely be a bug.
>
> -Adrian
>
> On 11-04-25 12:37 AM, ygrek wrote:
>>
>> Hello,
>>
>>  Is there any reason why %access defines prefix for all state variables
>> except some (p,pe,cs,eof)?
>>  I think it would be useful to specify prefix for all state variables (and
>> then override some variables if
>>  needed with individual %variable declarations).
>>
>
> --
> Dr. Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>



-- 
Brian Maher >> Glory to God <<

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From adrian.thurston at esentire.com  Tue Apr 26 15:05:40 2011
From: adrian.thurston at esentire.com (Adrian Thurston)
Date: Tue, 26 Apr 2011 08:05:40 -0700
Subject: [ragel-users] access prefix
In-Reply-To: <BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>
References: <20110425103723.9b2088b3.ygrek@autistici.org>	<4DB59C1A.3040605@complang.org>
	<BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>
Message-ID: <4DB6DF44.8040600@esentire.com>

Ya that's a perfectly reasonable way to do it. I'd like to design ragel 
for the most common case. I *think* making pe, pe and eof local is more 
common, but I could be wrong.

-Adrian

On 11-04-25 09:02 PM, Brian Maher wrote:
> If it makes a difference, I actually keep p, pe, and eof in my
> "struct" for managing ragel state, so if %access defined a prefix for
> *all* state variables, then it would be a welcome change from my
> perspective.
>
> Although Adrian is right about p, pe, and eof being rather
> "transient", I find it easier to write functions that take a single
> "struct" argument that manages the ragel state.  This way I can write
> a function called state_machine that encapsulates all my actions for
> the state machine, but ends up delegating each action to a function
> that takes the "struct" as an argument.  I just find this way of
> writing code is easier for me and my editor to digest.
>
> Cheers,
> -Brian
>
> On Mon, Apr 25, 2011 at 9:06 AM, Adrian Thurston<thurston at complang.org>  wrote:
>> Hi,
>>
>> The p, pe, and eof variables are not modified because they do not need to be
>> maintained across partial executions of state machines. They are normally
>> declared as local variables in the function that contains the write exec.
>>
>> The cs variable should be modified. If you are finding it isn't for some
>> language, then that would definitely be a bug.
>>
>> -Adrian
>>
>> On 11-04-25 12:37 AM, ygrek wrote:
>>>
>>> Hello,
>>>
>>>   Is there any reason why %access defines prefix for all state variables
>>> except some (p,pe,cs,eof)?
>>>   I think it would be useful to specify prefix for all state variables (and
>>> then override some variables if
>>>   needed with individual %variable declarations).
>>>
>>
>> --
>> Dr. Adrian D. Thurston
>> http://www.complang.org/thurston/
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
>
>

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From ygrek at autistici.org  Tue Apr 26 20:41:18 2011
From: ygrek at autistici.org (ygrek)
Date: Tue, 26 Apr 2011 23:41:18 +0300
Subject: [ragel-users] access prefix
In-Reply-To: <4DB6DF44.8040600@esentire.com>
References: <20110425103723.9b2088b3.ygrek@autistici.org>
	<4DB59C1A.3040605@complang.org>
	<BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>
	<4DB6DF44.8040600@esentire.com>
Message-ID: <20110426234118.8266b370.ygrek@autistici.org>

On Tue, 26 Apr 2011 08:05:40 -0700
Adrian Thurston <adrian.thurston at esentire.com> wrote:

> Ya that's a perfectly reasonable way to do it. I'd like to design ragel 
> for the most common case. I *think* making pe, pe and eof local is more 
> common, but I could be wrong.
> 
> -Adrian
> 
> On 11-04-25 09:02 PM, Brian Maher wrote:
> > [...]
> > Although Adrian is right about p, pe, and eof being rather
> > "transient", I find it easier to write functions that take a single
> > "struct" argument that manages the ragel state.  This way I can write
> > a function called state_machine that encapsulates all my actions for
> > the state machine, but ends up delegating each action to a function
> > that takes the "struct" as an argument.  I just find this way of
> > writing code is easier for me and my editor to digest.

Yes, this is exactly the reason for this question - I wanted to abstract over
ragel machine invocation so that it is more lightweight to use. Flexibility
is good and valuable, but the most popular case should be covered with least code.
My goal is somthing like this :

%%{
machive smth;
access state.;
...
}%%

module ParseSomething = struct
let init () =
  let state = Ragel.init () in
  %%write init;
  state
let parse state data =
  %%write exec noprefix;
  Ragel.is_finished state
end

With the module Ragel being reusable (in different projects).
If p and pe variables are put in state then more common idioms can be reused, like

  >{Ragel.mark state} @{Ragel.extract state}

and

  module Ragel = struct
  ...
  let mark state = state.mark := state.p
  let extract state = String.sub data state.mark (state.p - state.mark)
  end

When p and pe are kept local, all functions referencing them are also required to be local and
that means quite a bit of copypaste code.
So I think that having uniform way to gather all user-defined variables under single prefix
is worthwhile (maybe some modifier to %access or another keyword).

-- 
 ygrek
 http://ygrek.org.ua/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From ragel-user at jgoettgens.de  Sat Apr  2 09:31:11 2011
From: ragel-user at jgoettgens.de (ragel-user at jgoettgens.de)
Date: Sat, 2 Apr 2011 11:31:11 +0200
Subject: [ragel-users] Path handling of the native Windows build
In-Reply-To: <4D94068C.9060308@complang.org>
References: <17B587A11A814C0499E07DCC05B3F2CD@localdomain>
	<4D94068C.9060308@complang.org>
Message-ID: <C3F77B20003F4DFBBDFDA1D06FDD93C2@localdomain>

I agree, the path "issue" is not really a problem and the patches seem to be 
effective, though not elegant.

If you don't mind, I'll mail some suggestions, but because touching 
prepareLitString() with some OS dependent code and possibly adding something 
like a "is_path" flag looks awful. I think that a bit of patching for the 
Windows build is acceptable. I'll also have a look at temporary files, when 
looking at the code again.

I'll update the regular Windows download package later this day with my 
patches.

jg


_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From gordeev.vladimir.v at gmail.com  Mon Apr  4 20:38:56 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Mon, 04 Apr 2011 23:38:56 +0300
Subject: [ragel-users] Debug
Message-ID: <4D9A2C60.4070008@gmail.com>

Hi everyone,

How you usually debug your ragel-based parser?

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From yipdw at member.fsf.org  Mon Apr  4 21:07:41 2011
From: yipdw at member.fsf.org (David Yip)
Date: Mon, 4 Apr 2011 16:07:41 -0500
Subject: [ragel-users] Debug
In-Reply-To: <4D9A2C60.4070008@gmail.com>
References: <4D9A2C60.4070008@gmail.com>
Message-ID: <BANLkTinHM_kh5LkThYzYdxX1XytdWW=fBg@mail.gmail.com>

Hi Vladimir,

I try to avoid debugging the generated state machine code, as I find
it too difficult to understand the machine at that level.

When writing a Ragel state machine, I write out sentences in the
language that I want it to recognize, turn those into executable test
cases, and then implement the state machine one test case at a time.
When I get stuck, I use Ragel's Graphviz output (-V), often targeting
a machine that I think is the culprit (-M) and use that to find subtle
errors.

That's worked out well for me, but admittedly the machines I've
written are quite simple: they don't step outside Ragel's basic model.

- David

On Mon, Apr 4, 2011 at 3:38 PM, Vladimir VG
<gordeev.vladimir.v at gmail.com> wrote:
> Hi everyone,
>
> How you usually debug your ragel-based parser?
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From alexander.me at gmail.com  Wed Apr  6 04:19:36 2011
From: alexander.me at gmail.com (Denis Naumov)
Date: Wed, 6 Apr 2011 08:19:36 +0400
Subject: [ragel-users] C# - bad code generation
Message-ID: <BANLkTi=nVmp6W9dOJvpxqB8GdH3mDvtApQ@mail.gmail.com>

Hi, Adrian.

Can you fix troubles from my posts:

http://www.complang.org/pipermail/ragel-users/2011-March/002560.html
http://www.complang.org/pipermail/ragel-users/2011-March/002559.html
http://www.complang.org/pipermail/ragel-users/2011-March/002565.html
http://www.complang.org/pipermail/ragel-users/2011-March/002566.html

or i do something wrong?


Best regards,
Denis Naumov.

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From nathan.sweet at gmail.com  Wed Apr  6 08:20:29 2011
From: nathan.sweet at gmail.com (Nate)
Date: Wed, 6 Apr 2011 01:20:29 -0700
Subject: [ragel-users] Java static field initializers
Message-ID: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>

Ragel currently outputs a method and static field for Java, eg:

private static byte[] init__tableLayout_trans_targs_0 () { return new byte[]
{...}; }
private static final byte _tableLayout_trans_targs[] =
init__tableLayout_trans_targs_0();

We could save a few bytes on class file size by just assigning the array,
without an method:

private static final byte _tableLayout_trans_targs[] = new byte[] {...};

The end result is the exactly the same, but less code needs to be output and
the class files will be a little bit smaller.

-Nate
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110406/4b112ca8/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From wbarroz at bol.com.br  Wed Apr  6 13:47:48 2011
From: wbarroz at bol.com.br (Wilson Barros)
Date: Wed, 6 Apr 2011 10:47:48 -0300
Subject: [ragel-users] Consuming input
Message-ID: <4d9c6f049b523_5566a77d83c5cf@a2-winter12.tmail>

An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110406/5dbde772/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Wed Apr  6 22:19:09 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 06 Apr 2011 15:19:09 -0700
Subject: [ragel-users] ragel didn't rename data variable for C# code.
In-Reply-To: <AANLkTim3mUijTzhRru1Crhwj6ooVkV6g1yxitVGS1bBb@mail.gmail.com>
References: <AANLkTim3mUijTzhRru1Crhwj6ooVkV6g1yxitVGS1bBb@mail.gmail.com>
Message-ID: <4D9CE6DD.1050704@complang.org>

Hi Denis,

Sorry for the delay ... been working like a crazy person on another 
project: a protocol for social networking called DSNP. There are a 
number of people trying to do this right now, so it's getting most of my 
attention. If I don't finish off my project, someone else will beat me 
to it.

So anyways, confirmed as a bug. Thank you for reporting it. It will be 
fixed ASAP.

http://www.complang.org/redmine/issues/250

-Adrian

On 03/24/2011 02:21 AM, Denis Naumov wrote:
> Hi Adrian,
>
> A week ago i start ragel and found that it is a very usefull tool.
>
> I use it for generate C and C# code (from Microsoft Visual Studio).
>
> it seems that ragel didn't rename data variable for C# code.
>
> use:
>              %% variable  data   _ctx.data;
>              %% variable  p        _ctx.current;
>              %% variable  pe      _ctx.end;
>
> code will:
>
>    ...  if ( data[(      _ctx.current)]<  _test_trans_keys[_mid] ) ...
>
>
> Also i have some feature request:
> 1.
> Sometime it would be very convenient to set options in rl file rathe
> than command line.
> something like:
>     %% option lang = C#                         (in addition to -C, -A ...)
>
>     %% option line  = on/off/1/0/yes/no   (-L)
>
>     %% option minimization = off/end/most/every   (-n/-m/-l/-e)
>
>     %% option mode = table/table1/flat/flat1/goto/goto1 ...  (-T0/-T1...)
>
>     %% option output = "<filename>"  (-o<filename>)
>
>     %% option error = gnu/msvc ...
>
>
> to change this from IDE more convenient than change project settings.
> This can be alternative way to set options and options from command
> line (if set) will have max priority.
>
> 2.
> Mode for option -o<filename>.
> -o -  (-o "-") - for output generated code into stdout.
> This usefull for VS custom tool (custom code generator extention for
> VisualStudio).
> Now i create temp file for output - read it to std-stream and delete
> temp file to work around this.
>
>
> Best regards,
> Denis Naumov.
>
>
> PS: sorry for my english :)
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Wed Apr  6 22:27:56 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 06 Apr 2011 15:27:56 -0700
Subject: [ragel-users] Bad code generation for C# ?
In-Reply-To: <AANLkTi=hgZTXpx+qsB6Mie_LBF8uRZMtuuNY31cW_9Cw@mail.gmail.com>
References: <mailman.23.1300981981.2543.ragel-users@complang.org>
	<AANLkTi=hgZTXpx+qsB6Mie_LBF8uRZMtuuNY31cW_9Cw@mail.gmail.com>
Message-ID: <4D9CE8EC.60608@complang.org>

Also a bug. Thanks again. The C# code generator was contributed by a 
user and I never really had the chance to go over it in detail, which is 
why it hasn't yet been listed on the homepage as a supported language.

http://www.complang.org/redmine/issues/251

-Adrian


On 03/24/2011 09:47 AM, Denis Naumov wrote:
> Hi Adrian,
>
> I found that Alphtype Statement probably not work for C#.
>
> By default type is 'char'
>
> and ragel generate
>      static readonly char[] _test_trans_keys =  new ushort [] { '\u0022' .... }
>
> for -T0 mode and
>
>     switch( data[(      _ctx.current)] )
>         {  case '\u0009': goto tr0;  ...  }
>
> for -G0 mode
>
> it's ok.
>
> but if i use "alphtype byte;" ragel generate
>
>      static readonly byte[] _test_trans_keys =  new ushort [] { '\u0022' .... }
>
> for -T0 mode and
>
>     switch( data[(      _ctx.current)] )
>         {  case '\u0009': goto tr0;  ...  }
>
> for -G0 mode
>
> it's wrong. It must be
>      static readonly byte[] _test_trans_keys =  new ushort [] { 22, .... }
> and
>     switch( data[(      _ctx.current)] )
>         {  case 9: goto tr0;  ...  }
>
> it seems to be that ragel generate '\u****' constants for all alphtypes.
>
>
> Best regards,
> Denis Naumov.
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Wed Apr  6 22:37:32 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 06 Apr 2011 15:37:32 -0700
Subject: [ragel-users] ragel didn't rename data variable for C# code.
In-Reply-To: <AANLkTin4V=LNZXj92+SeEMN=t1Kv8aK4aquX2tFgh563@mail.gmail.com>
References: <E5C0C4D7A4524E4DB84B7A8AE07E0465@localdomain>
	<AANLkTin4V=LNZXj92+SeEMN=t1Kv8aK4aquX2tFgh563@mail.gmail.com>
Message-ID: <4D9CEB2C.50209@complang.org>

Tracked as a feature request.

http://www.complang.org/redmine/issues/252

I'm not sure I will address this for 6.7, as it may require a 
pre-parsing pass and there are some sticky issues involved ... how to 
parse the host language to get to the ragel code where we specify the 
host language? Granted, only scanning is necessary, but it is still a 
problem.

-Adrian

On 03/24/2011 11:38 PM, Denis Naumov wrote:
> Thanks :)
>
> I know about .rules files.  but this is a little not what I need.
> It's not problem to setup project options after project creation.
> But...
>
> before ragel i used re2c compiler and there was in-file-options like
>     /*!re2c
>          re2c:yyfill:enable = 1;
>          re2c:yyfill:check  = 1;
>         ...
>
>     */
>
> and before re2c i used flex. Flex has in-file scanner options like
>       %option   8bit reentrant bison-bridge
>       %option   warn nodefault
>       %option   yylineno
>       %option   outfile="scanner.c" header-file="scanner.h"
>
>
> For my developing i use VisualStudio .NET/2008/2010 and C++/C#.
>
> build .rules file - used in VS.NET/2008, but VS 2010 - not work with
> this. 2010 have .target files for this.
> and this all - only for C/C++. In C# projects there is no .rules files at all.
> For C# projects VS use "Custom tool" - for code generators. I write
> custom tool extention for VS to call ragel, but command line options -
> it's problem.
> There is no simple way to pass command line options to ragel.
> Now my custom tool read comment like this:
>             // BUILD-COMMAND-LINE: -L -A
> from first string of rl file and pass it to ragel.
>
> In this all situations - simplest universal way to save options for
> various projects - save them in rl file (IMHO).
> like re2c or flex. Something like
>      %%option name = value;
> And - this options is simple to change from IDE while writing file.
> Just change text in file rather than clicks for menu and dialog boxes
> every time.
>
> If the same option set from rl file and from command line - option
> value from command line have max priority or vice versa.
>
> Ragel have %%alphtype ... %%variable ... and other commands. I think
> it's not so difficult to add %% option name=value; command for command
> line options.
>
> it's all my IMHO. :)
>
> Best regards,
> Denis Naumov.
>
> PS: Sprry for bad english. :)
>
> 2011/3/24<ragel-user at jgoettgens.de>:
>> Whoops---I probably deleted part of a sentence shortly before I hit the send
>> button...
>>
>> ...
>> The build chain is just a little bit longer. Due to the mapping betwen the
>> suffix .rl to the rules, Ragel now looks almost like a VisualStudio tool.
>>
>> jg
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From nathan.sweet at gmail.com  Thu Apr  7 03:43:20 2011
From: nathan.sweet at gmail.com (Nate)
Date: Wed, 6 Apr 2011 20:43:20 -0700
Subject: [ragel-users] setting the initial state
Message-ID: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>

Hi Adrian and friends,

I need to re-parse some input, starting at an offset and an initial state. I
know I can just set "p" to the offset and "cs" to the state, however, my
states are meaningful outside of the parser. My program is a language parser
for syntax highlighting, so I need int constants that represent the type of
tokens founds. I need some way of saying, "parse this char[] at offset X
using initial token type LITERAL_CHAR". I don't care if the LITERAL_CHAR
constant is the same as the parser state, but I need some way of setting
"cs" to a specific machine name or label.

I came across a post on the mailing list from 2007 saying, "For a really
long time now I've been meaning to implement a new feature which should help
you out. %% write entry <machine_or_label>;". This would work nicely I
think. I guess it has been a *really* really long time now, eh? :D Is there
any chance that this feature could be implemented soonly?

Thanks!
-Nate

PS
Ragel is so awesome! :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110406/6bd9c4fb/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Thu Apr  7 20:16:53 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:16:53 -0700
Subject: [ragel-users] Bug? Backslash-escapes not escaped
	enough	in	.dotfiles?
In-Reply-To: <4D8F2816.6090106@yahoo.com>
References: <4D8F0BA5.7060002@yahoo.com>	<1D137513DEA84D33AF06BEC20A138A26@localdomain>	<4D8F2257.4080101@yahoo.com>
	<4D8F2816.6090106@yahoo.com>
Message-ID: <4D9E1BB5.3060002@complang.org>

Thanks Austin, I will consider the closed WRT ragel.

-Adrian

On 03/27/2011 05:05 AM, Austin Hastings wrote:
> On 3/27/2011 7:41 AM, Austin Hastings wrote:
>> Sure. I think this is a "dotty" bug, though.
>>
>
> I have submitted this as a bug against graphviz.
>
> =Austin
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ra

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 20:22:31 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:22:31 -0700
Subject: [ragel-users] One question.
In-Reply-To: <AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>
	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
Message-ID: <4D9E1D07.5050004@complang.org>

To expand on this a bit ... it is entirely up to the user to manage the 
stack allocation. Ragel's support for recursive structures (fcall/fret) 
is an extension to the basic model, which is pure state machine (not a 
PDA). If you find you have a lot recursion in what you need to parse, 
you should consider that ragel might not be the right tool for the job.

Regards

On 03/29/2011 09:59 PM, Nate wrote:
> Yes, see the int[] stack in the link. :) Also note the code under "prepush".
>
> -Nate
>
>
> On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
> <gordeev.vladimir.v at gmail.com <mailto:gordeev.vladimir.v at gmail.com>> wrote:
>
>     Hm, this looks like solution. I will try it. Thanks.
>
>     Related question: Does Ragel have some inner stack to handle nested
>     fcall/fret?
>
>
>     On 30.03.2011 00:59, Nate wrote:
>>     You can use fcall to jump to a machine, then fret to resume where
>>     you were. It's a bit tricky, but once you understand it you can
>>     parse recursively. See the startTable action here (though this is
>>     a pretty hairy parser):
>>     http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>>
>>     -Nate
>>
>>
>>     On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>>     <twisolar at gmail.com <mailto:twisolar at gmail.com>> wrote:
>>
>>         On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>>         <gordeev.vladimir.v at gmail.com
>>         <mailto:gordeev.vladimir.v at gmail.com>> wrote:
>>         > So I got following error:
>>         >
>>         >     test.rl:7:32: graph lookup of "list" failed
>>
>>         The reason you get that error is because a rule can only reference
>>         definitions that came before it. "list" doesn't exist until the
>>         definition is finished, so it can't reference itself. (That would
>>         create a recursive structure anyways, which Ragel isn't
>>         equipped to
>>         handle natively.)
>>
>>         ~Jonathan
>>
>>         _______________________________________________
>>         ragel-users mailing list
>>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>>         http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>     _______________________________________________
>>     ragel-users mailing list
>>     ragel-users at complang.org  <mailto:ragel-users at complang.org>
>>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>     _______________________________________________
>     ragel-users mailing list
>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
> --===============092103

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 20:30:42 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:30:42 -0700
Subject: [ragel-users] Debug
In-Reply-To: <4D9A2C60.4070008@gmail.com>
References: <4D9A2C60.4070008@gmail.com>
Message-ID: <4D9E1EF2.6000203@complang.org>

Combination graphviz and debug statements. If really strange things are 
happening the most likely culprit is unintended nondeterminism. Often I 
will shrink the machine (and cut back the input) to narrow down 
problems. If you bring it down to something really small and 
incrementally enable components, all the while testing your assumptions, 
you can often find the source of the problem quite quickly.

On 04/04/2011 01:38 PM, Vladimir VG wrote:
> Hi everyone,
>
> How you usually debug your ragel-based parser?
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/rag

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 20:34:04 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 13:34:04 -0700
Subject: [ragel-users] Java static field initializers
In-Reply-To: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>
References: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>
Message-ID: <4D9E1FBC.2040701@complang.org>

If I recall correctly, the functions are there because the initializers 
become code in the calling function. Since java has a limit on the 
amount of (compiled) code per function, we always use separate functions 
so we can test for a reasonable approximation of the limit on a 
per-array basis. I think that was it.

On 04/06/2011 01:20 AM, Nate wrote:
> Ragel currently outputs a method and static field for Java, eg:
>
> private static byte[] init__tableLayout_trans_targs_0 () { return new
> byte[] {...}; }
> private static final byte _tableLayout_trans_targs[] =
> init__tableLayout_trans_targs_0();
>
> We could save a few bytes on class file size by just assigning the
> array, without an method:
>
> private static final byte _tableLayout_trans_targs[] = new byte[] {...};
>
> The end result is the exactly the same, but less code needs to be output
> and the class files will be a little bit smaller.
>
> -Nate
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
> --===============1102049

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 21:11:26 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 14:11:26 -0700
Subject: [ragel-users] Consuming input
In-Reply-To: <4d9c6f049b523_5566a77d83c5cf@a2-winter12.tmail>
References: <4d9c6f049b523_5566a77d83c5cf@a2-winter12.tmail>
Message-ID: <4D9E287E.6000306@complang.org>

See the attached code. Note the "| any*". This is a trick to make ragel 
accept any prefix of the machine. But it only works in this case because 
you want the machine to accept any string at all. What is really needed 
is an any-prefix operator (in the TODO for years).

If this is too cryptic, you may want to consider using state charts.

-Adrian

On 04/06/2011 06:47 AM, Wilson Barros wrote:
> main:='O'@init ((any-[CTRDH])*
> ('C'$ccaOn(any-'c')*'c'$ccaOff
> |'T'$txOn(any-'t')*'t'$txOff
> |'R'$rxOn(any-'r')*'r'$rxOff
> |'D'$dozeOn(any-'A')*'A'$dozeOff
> |'H'$hibOn(any-'A')*'A'$hibOff #)
> )*;

-- 
Adrian D. Thurston
http://www.complang.org/thurston/
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: modem.rl
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110407/81c2e0c9/attachment-0001.ksh>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From gordeev.vladimir.v at gmail.com  Thu Apr  7 21:19:53 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Fri, 08 Apr 2011 00:19:53 +0300
Subject: [ragel-users] One question.
In-Reply-To: <4D9E1D07.5050004@complang.org>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
	<4D9E1D07.5050004@complang.org>
Message-ID: <4D9E2A79.30705@gmail.com>

On 04/07/2011 11:22 PM, Adrian Thurston wrote:

Yes, I understand. I do it exactly with fret/fcall. Here some working 
sample:
https://github.com/vladimir-vg/alonzo_prototype/blob/master/parser/parser.rl

 > ragel might not be the right tool for the job.

Can you list some right tools for programming languages parsing?

> To expand on this a bit ... it is entirely up to the user to manage 
> the stack allocation. Ragel's support for recursive structures 
> (fcall/fret) is an extension to the basic model, which is pure state 
> machine (not a PDA). If you find you have a lot recursion in what you 
> need to parse, you should consider that ragel might not be the right 
> tool for the job.
>
> Regards
>


_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 21:20:30 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 14:20:30 -0700
Subject: [ragel-users] setting the initial state
In-Reply-To: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>
References: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>
Message-ID: <4D9E2A9E.5030508@complang.org>

I can't say when it will be done, but I can give you an issue number :)

http://www.complang.org/redmine/issues/256

-Adrian

On 04/06/2011 08:43 PM, Nate wrote:
> Hi Adrian and friends,
>
> I need to re-parse some input, starting at an offset and an initial
> state. I know I can just set "p" to the offset and "cs" to the state,
> however, my states are meaningful outside of the parser. My program is a
> language parser for syntax highlighting, so I need int constants that
> represent the type of tokens founds. I need some way of saying, "parse
> this char[] at offset X using initial token type LITERAL_CHAR". I don't
> care if the LITERAL_CHAR constant is the same as the parser state, but I
> need some way of setting "cs" to a specific machine name or label.
>
> I came across a post on the mailing list from 2007 saying, "For a really
> long time now I've been meaning to implement a new feature which should
> help you out. %% write entry <machine_or_label>;". This would work
> nicely I think. I guess it has been a *really* really long time now, eh?
> :D Is there any chance that this feature could be implemented soonly?
>
> Thanks!
> -Nate
>
> PS
> Ragel is so awesome! :)
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Thu Apr  7 21:39:10 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 14:39:10 -0700
Subject: [ragel-users] One question.
In-Reply-To: <4D9E2A79.30705@gmail.com>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>	<4D9E1D07.5050004@complang.org>
	<4D9E2A79.30705@gmail.com>
Message-ID: <4D9E2EFE.7080402@complang.org>

I will normally go for my own, Kelbt :) But if I need something that is 
typically installed almost everywhere and known to other devs, I will 
use bison.

On 04/07/2011 02:19 PM, Vladimir VG wrote:
> On 04/07/2011 11:22 PM, Adrian Thurston wrote:
>
> Yes, I understand. I do it exactly with fret/fcall. Here some working
> sample:
> https://github.com/vladimir-vg/alonzo_prototype/blob/master/parser/parser.rl
>
>
>  > ragel might not be the right tool for the job.
>
> Can you list some right tools for programming languages parsing?
>
>> To expand on this a bit ... it is entirely up to the user to manage
>> the stack allocation. Ragel's support for recursive structures
>> (fcall/fret) is an extension to the basic model, which is pure state
>> machine (not a PDA). If you find you have a lot recursion in what you
>> need to parse, you should consider that ragel might not be the right
>> tool for the job.
>>
>> Regards
>>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From ygrek at autistici.org  Thu Apr  7 21:46:00 2011
From: ygrek at autistici.org (ygrek)
Date: Fri, 8 Apr 2011 00:46:00 +0300
Subject: [ragel-users] ocaml codegen
Message-ID: <20110408004600.7e1f8148.ygrek@autistici.org>

Hello,

 Attached patch adds ragel ocaml code generation.
 Implemented code styles are : -T0 -T1 -F0 -F1 and -G0 (partial).
 The only input data type is string (elements are bytes).
 Several simple tests are included in examples/ocaml/.
 Here are speed benchmark results for different codegen styles
 (examples/go/url.rl converted to ocaml host language) :

ocaml -T0 : 4.02 sec
ocaml -T1 : 3.85 sec
ocaml -F0 : 1.72 sec
ocaml -F1 : 1.52 sec
ocaml -G0 : 1.70 sec
go -G2    : 2.18 sec

rounds : 100_000
go : 8g version release.2011-02-01.1 7463
ocaml : 3.11.2

-- 
 ygrek
 http://ygrek.org.ua/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ocaml-codegen.diff.gz
Type: application/octet-stream
Size: 30687 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110408/3bdbb6ad/attachment-0001.obj>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From zabivator at gmail.com  Thu Apr  7 22:39:11 2011
From: zabivator at gmail.com (Oleg Tsarev)
Date: Fri, 8 Apr 2011 01:39:11 +0300
Subject: [ragel-users] ocaml codegen
In-Reply-To: <20110408004600.7e1f8148.ygrek@autistici.org>
References: <20110408004600.7e1f8148.ygrek@autistici.org>
Message-ID: <BANLkTimVBy52NqVUL0fkRxSeNNTK0-c3oQ@mail.gmail.com>

Thank you, nice!

2011/4/8 ygrek <ygrek at autistici.org>:
> Hello,
>
>  Attached patch adds ragel ocaml code generation.
>  Implemented code styles are : -T0 -T1 -F0 -F1 and -G0 (partial).
>  The only input data type is string (elements are bytes).
>  Several simple tests are included in examples/ocaml/.
>  Here are speed benchmark results for different codegen styles
>  (examples/go/url.rl converted to ocaml host language) :
>
> ocaml -T0 : 4.02 sec
> ocaml -T1 : 3.85 sec
> ocaml -F0 : 1.72 sec
> ocaml -F1 : 1.52 sec
> ocaml -G0 : 1.70 sec
> go -G2    : 2.18 sec
>
> rounds : 100_000
> go : 8g version release.2011-02-01.1 7463
> ocaml : 3.11.2
>
> --
>  ygrek
>  http://ygrek.org.ua/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From nathan.sweet at gmail.com  Thu Apr  7 22:50:06 2011
From: nathan.sweet at gmail.com (Nate)
Date: Thu, 7 Apr 2011 15:50:06 -0700
Subject: [ragel-users] One question.
In-Reply-To: <4D9E1D07.5050004@complang.org>
References: <4D923DDF.3030805@gmail.com>
	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>
	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>
	<4D92B3B1.3070509@gmail.com>
	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>
	<4D9E1D07.5050004@complang.org>
Message-ID: <BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>

I've now done a couple projects with recursion using fcall. It isn't too
bad. Is there something I lose by doing this, beyond the ability to express
the recursion in Ragel? What would really make switch tools for a project?

-Nate


On Thu, Apr 7, 2011 at 1:22 PM, Adrian Thurston <thurston at complang.org>wrote:

> To expand on this a bit ... it is entirely up to the user to manage the
> stack allocation. Ragel's support for recursive structures (fcall/fret) is
> an extension to the basic model, which is pure state machine (not a PDA). If
> you find you have a lot recursion in what you need to parse, you should
> consider that ragel might not be the right tool for the job.
>
> Regards
>
>
> On 03/29/2011 09:59 PM, Nate wrote:
>
>> Yes, see the int[] stack in the link. :) Also note the code under
>> "prepush".
>>
>> -Nate
>>
>>
>> On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
>> <gordeev.vladimir.v at gmail.com <mailto:gordeev.vladimir.v at gmail.com>>
>> wrote:
>>
>>    Hm, this looks like solution. I will try it. Thanks.
>>
>>    Related question: Does Ragel have some inner stack to handle nested
>>    fcall/fret?
>>
>>
>>    On 30.03.2011 00:59, Nate wrote:
>>
>>>    You can use fcall to jump to a machine, then fret to resume where
>>>    you were. It's a bit tricky, but once you understand it you can
>>>    parse recursively. See the startTable action here (though this is
>>>    a pretty hairy parser):
>>>
>>> http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>>>
>>>    -Nate
>>>
>>>
>>>    On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>>>    <twisolar at gmail.com <mailto:twisolar at gmail.com>> wrote:
>>>
>>>        On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>>>        <gordeev.vladimir.v at gmail.com
>>>        <mailto:gordeev.vladimir.v at gmail.com>> wrote:
>>>        > So I got following error:
>>>        >
>>>        >     test.rl:7:32: graph lookup of "list" failed
>>>
>>>        The reason you get that error is because a rule can only reference
>>>        definitions that came before it. "list" doesn't exist until the
>>>        definition is finished, so it can't reference itself. (That would
>>>        create a recursive structure anyways, which Ragel isn't
>>>        equipped to
>>>        handle natively.)
>>>
>>>        ~Jonathan
>>>
>>>        _______________________________________________
>>>        ragel-users mailing list
>>>        ragel-users at complang.org <mailto:ragel-users at complang.org>
>>>
>>>        http://www.complang.org/mailman/listinfo/ragel-users
>>>
>>>
>>>
>>>    _______________________________________________
>>>    ragel-users mailing list
>>>    ragel-users at complang.org  <mailto:ragel-users at complang.org>
>>>
>>>    http://www.complang.org/mailman/listinfo/ragel-users
>>>
>>
>>
>>    _______________________________________________
>>    ragel-users mailing list
>>    ragel-users at complang.org <mailto:ragel-users at complang.org>
>>
>>    http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>> --===============092103
>>
>
> --
> Adrian D. Thurston
> http://www.complang.org/thurston/
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110407/933dc7e0/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From nathan.sweet at gmail.com  Thu Apr  7 22:59:28 2011
From: nathan.sweet at gmail.com (Nate)
Date: Thu, 7 Apr 2011 15:59:28 -0700
Subject: [ragel-users] setting the initial state
In-Reply-To: <4D9E2A9E.5030508@complang.org>
References: <BANLkTinXra2itN_5snsFJ2fB0deuLHyBhw@mail.gmail.com>
	<4D9E2A9E.5030508@complang.org>
Message-ID: <BANLkTimFHB+Viy9yAX61YGCt34k5qSKvpQ@mail.gmail.com>

Fair enough. Thanks! :)

-Nate


On Thu, Apr 7, 2011 at 2:20 PM, Adrian Thurston <thurston at complang.org>wrote:

> I can't say when it will be done, but I can give you an issue number :)
>
> http://www.complang.org/redmine/issues/256
>
> -Adrian
>
>
> On 04/06/2011 08:43 PM, Nate wrote:
>
>> Hi Adrian and friends,
>>
>> I need to re-parse some input, starting at an offset and an initial
>> state. I know I can just set "p" to the offset and "cs" to the state,
>> however, my states are meaningful outside of the parser. My program is a
>> language parser for syntax highlighting, so I need int constants that
>> represent the type of tokens founds. I need some way of saying, "parse
>> this char[] at offset X using initial token type LITERAL_CHAR". I don't
>> care if the LITERAL_CHAR constant is the same as the parser state, but I
>> need some way of setting "cs" to a specific machine name or label.
>>
>> I came across a post on the mailing list from 2007 saying, "For a really
>> long time now I've been meaning to implement a new feature which should
>> help you out. %% write entry <machine_or_label>;". This would work
>> nicely I think. I guess it has been a *really* really long time now, eh?
>> :D Is there any chance that this feature could be implemented soonly?
>>
>> Thanks!
>> -Nate
>>
>> PS
>> Ragel is so awesome! :)
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
> --
> Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110407/edb2a091/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From nathan.sweet at gmail.com  Thu Apr  7 23:08:59 2011
From: nathan.sweet at gmail.com (Nate)
Date: Thu, 7 Apr 2011 16:08:59 -0700
Subject: [ragel-users] Java static field initializers
In-Reply-To: <4D9E1FBC.2040701@complang.org>
References: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>
	<4D9E1FBC.2040701@complang.org>
Message-ID: <BANLkTimxsnyHr1ww3Akd6f9ZJiJssYWCSg@mail.gmail.com>

Ah, interesting. Does Ragel actually approximate the bytecode size of the
separate functions and break them into multiple init functions if near the
64kb limit? If it does, maybe an approximation could be done to avoid init
functions entirely. Or alternatively, how about a "write init" option to not
use functions at all?

-Nate


On Thu, Apr 7, 2011 at 1:34 PM, Adrian Thurston <thurston at complang.org>wrote:

> If I recall correctly, the functions are there because the initializers
> become code in the calling function. Since java has a limit on the amount of
> (compiled) code per function, we always use separate functions so we can
> test for a reasonable approximation of the limit on a per-array basis. I
> think that was it.
>
>
> On 04/06/2011 01:20 AM, Nate wrote:
>
>> Ragel currently outputs a method and static field for Java, eg:
>>
>> private static byte[] init__tableLayout_trans_targs_0 () { return new
>> byte[] {...}; }
>> private static final byte _tableLayout_trans_targs[] =
>> init__tableLayout_trans_targs_0();
>>
>> We could save a few bytes on class file size by just assigning the
>> array, without an method:
>>
>> private static final byte _tableLayout_trans_targs[] = new byte[] {...};
>>
>> The end result is the exactly the same, but less code needs to be output
>> and the class files will be a little bit smaller.
>>
>> -Nate
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>> --===============1102049
>>
>
> --
> Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110407/2f9fe44d/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Fri Apr  8 06:00:29 2011
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 07 Apr 2011 23:00:29 -0700
Subject: [ragel-users] ocaml codegen
In-Reply-To: <20110408004600.7e1f8148.ygrek@autistici.org>
References: <20110408004600.7e1f8148.ygrek@autistici.org>
Message-ID: <4D9EA47D.7090608@complang.org>

That is great, thank you!

On 11-04-07 02:46 PM, ygrek wrote:
> Hello,
>
>   Attached patch adds ragel ocaml code generation.
>   Implemented code styles are : -T0 -T1 -F0 -F1 and -G0 (partial).
>   The only input data type is string (elements are bytes).
>   Several simple tests are included in examples/ocaml/.
>   Here are speed benchmark results for different codegen styles
>   (examples/go/url.rl converted to ocaml host language) :
>
> ocaml -T0 : 4.02 sec
> ocaml -T1 : 3.85 sec
> ocaml -F0 : 1.72 sec
> ocaml -F1 : 1.52 sec
> ocaml -G0 : 1.70 sec
> go -G2    : 2.18 sec
>
> rounds : 100_000
> go : 8g version release.2011-02-01.1 7463
> ocaml : 3.11.2
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From gordeev.vladimir.v at gmail.com  Fri Apr  8 16:09:49 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Fri, 08 Apr 2011 19:09:49 +0300
Subject: [ragel-users] Regex end and begin of data.
In-Reply-To: <4D9EA47D.7090608@complang.org>
References: <20110408004600.7e1f8148.ygrek@autistici.org>
	<4D9EA47D.7090608@complang.org>
Message-ID: <4D9F334D.2000102@gmail.com>

Is there in Ragel equivalent regexp's $ ^ patterns?

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From andrey.vityuk at gmail.com  Sat Apr  9 05:48:40 2011
From: andrey.vityuk at gmail.com (Andrey Vityuk)
Date: Sat, 9 Apr 2011 08:48:40 +0300
Subject: [ragel-users] Unexpected final state action call
Message-ID: <BANLkTinSYj8q_zDAyQjDqa54iu+84_t-QA@mail.gmail.com>

Hi,

I write some sample rules:

content = any+ -- '||';
main := content %{ System.out.println("Matched content. fpc = "  + fpc); } .
'||' . '\n'?;

For input: "abc||" action called 2 times: for each pipe char:
Matched content. fpc = 3
Matched content. fpc = 4

Is it correct behaviour? How to workaround it?

Thanks,
Andrey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110409/9c8866ce/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From andrey.vityuk at gmail.com  Sat Apr  9 09:40:10 2011
From: andrey.vityuk at gmail.com (Andrey Vityuk)
Date: Sat, 9 Apr 2011 12:40:10 +0300
Subject: [ragel-users] Unexpected final state action call
Message-ID: <BANLkTim5a6OWOycN0fyD=UhrhZ1i+ZCHjw@mail.gmail.com>

Actually I found solution:
action start { System.out.println("start. fpc = " + fpc); }
action end  { System.out.println("end. fpc = " + fpc); }

content = (any+ -- '||') >start ;
main := content . '||' @end . '\n'?;

But the problem is my original rules are more complex:
content = '||' . (any+ -- '||') >start ;
main := content+ . '||' @end . '\n'?;

For input: "||abc||efg||" they work fine:
start. fpc = 2
end. fpc = 6
start. fpc = 7
end. fpc = 11
start. fpc = 12
Consumed all: true

But for input: "||abc|||" I am getting unxpected calls:
start. fpc = 2
end. fpc = 6
start. fpc = 7
end. fpc = 7
start. fpc = 8
Consumed all: true
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110409/0e43ae92/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Sat Apr  9 17:06:58 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:06:58 -0700
Subject: [ragel-users] One question.
In-Reply-To: <BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>	<4D9E1D07.5050004@complang.org>
	<BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>
Message-ID: <4DA09232.1090009@complang.org>

It depends on the language being parsed. If it's easy to know when push 
and pop (because of the appearance of certain tokens) then you probably 
won't run into problems and it's just a matter of personal preference. 
If the language is more complicated than that (say like a programming 
language) then you are certainly going to get a headache trying to parse 
in ragel and you'll have to switch.

On 11-04-07 03:50 PM, Nate wrote:
> I've now done a couple projects with recursion using fcall. It isn't too
> bad. Is there something I lose by doing this, beyond the ability to
> express the recursion in Ragel? What would really make switch tools for
> a project?
>
> -Nate
>
>
> On Thu, Apr 7, 2011 at 1:22 PM, Adrian Thurston <thurston at complang.org
> <mailto:thurston at complang.org>> wrote:
>
>     To expand on this a bit ... it is entirely up to the user to manage
>     the stack allocation. Ragel's support for recursive structures
>     (fcall/fret) is an extension to the basic model, which is pure state
>     machine (not a PDA). If you find you have a lot recursion in what
>     you need to parse, you should consider that ragel might not be the
>     right tool for the job.
>
>     Regards
>
>
>     On 03/29/2011 09:59 PM, Nate wrote:
>
>         Yes, see the int[] stack in the link. :) Also note the code
>         under "prepush".
>
>         -Nate
>
>
>         On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
>         <gordeev.vladimir.v at gmail.com
>         <mailto:gordeev.vladimir.v at gmail.com>
>         <mailto:gordeev.vladimir.v at gmail.com
>         <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>
>             Hm, this looks like solution. I will try it. Thanks.
>
>             Related question: Does Ragel have some inner stack to handle
>         nested
>             fcall/fret?
>
>
>             On 30.03.2011 00:59, Nate wrote:
>
>                 You can use fcall to jump to a machine, then fret to
>             resume where
>                 you were. It's a bit tricky, but once you understand it
>             you can
>                 parse recursively. See the startTable action here
>             (though this is
>                 a pretty hairy parser):
>             http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>
>                 -Nate
>
>
>                 On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>             <twisolar at gmail.com <mailto:twisolar at gmail.com>
>             <mailto:twisolar at gmail.com <mailto:twisolar at gmail.com>>> wrote:
>
>                     On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>             <gordeev.vladimir.v at gmail.com
>             <mailto:gordeev.vladimir.v at gmail.com>
>             <mailto:gordeev.vladimir.v at gmail.com
>             <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>              > So I got following error:
>              >
>              >     test.rl:7:32: graph lookup of "list" failed
>
>                     The reason you get that error is because a rule can
>             only reference
>                     definitions that came before it. "list" doesn't
>             exist until the
>                     definition is finished, so it can't reference
>             itself. (That would
>                     create a recursive structure anyways, which Ragel isn't
>                     equipped to
>                     handle natively.)
>
>                     ~Jonathan
>
>                     _______________________________________________
>                     ragel-users mailing list
>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>             <mailto:ragel-users at complang.org
>             <mailto:ragel-users at complang.org>>
>
>             http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>                 _______________________________________________
>                 ragel-users mailing list
>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>             <mailto:ragel-users at complang.org
>             <mailto:ragel-users at complang.org>>
>
>             http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>             _______________________________________________
>             ragel-users mailing list
>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>         <mailto:ragel-users at complang.org <mailto:ragel-users at complang.org>>
>
>         http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
>         _______________________________________________
>         ragel-users mailing list
>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>         http://www.complang.org/mailman/listinfo/ragel-users
>         --===============092103
>
>
>     --
>     Adrian D. Thurston
>     http://www.complang.org/thurston/
>
>
>     _______________________________________________
>     ragel-users mailing list
>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Sat Apr  9 17:17:30 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:17:30 -0700
Subject: [ragel-users] Java static field initializers
In-Reply-To: <BANLkTimxsnyHr1ww3Akd6f9ZJiJssYWCSg@mail.gmail.com>
References: <BANLkTikTOkmps=ghi3hhokP7VDZXq6EXjQ@mail.gmail.com>	<4D9E1FBC.2040701@complang.org>
	<BANLkTimxsnyHr1ww3Akd6f9ZJiJssYWCSg@mail.gmail.com>
Message-ID: <4DA094AA.3020505@complang.org>

There is a hardcoded array limit based on one-time measurements.

I think that would be possible, but would the gain in startup speed be 
worth the coding effort?

On 11-04-07 04:08 PM, Nate wrote:
> Ah, interesting. Does Ragel actually approximate the bytecode size of
> the separate functions and break them into multiple init functions if
> near the 64kb limit? If it does, maybe an approximation could be done to
> avoid init functions entirely. Or alternatively, how about a "write
> init" option to not use functions at all?
>
> -Nate
>
>
> On Thu, Apr 7, 2011 at 1:34 PM, Adrian Thurston <thurston at complang.org
> <mailto:thurston at complang.org>> wrote:
>
>     If I recall correctly, the functions are there because the
>     initializers become code in the calling function. Since java has a
>     limit on the amount of (compiled) code per function, we always use
>     separate functions so we can test for a reasonable approximation of
>     the limit on a per-array basis. I think that was it.
>
>
>     On 04/06/2011 01:20 AM, Nate wrote:
>
>         Ragel currently outputs a method and static field for Java, eg:
>
>         private static byte[] init__tableLayout_trans_targs_0 () {
>         return new
>         byte[] {...}; }
>         private static final byte _tableLayout_trans_targs[] =
>         init__tableLayout_trans_targs_0();
>
>         We could save a few bytes on class file size by just assigning the
>         array, without an method:
>
>         private static final byte _tableLayout_trans_targs[] = new
>         byte[] {...};
>
>         The end result is the exactly the same, but less code needs to
>         be output
>         and the class files will be a little bit smaller.
>
>         -Nate
>
>
>
>         _______________________________________________
>         ragel-users mailing list
>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>         http://www.complang.org/mailman/listinfo/ragel-users
>         --===============1102049
>
>
>     --
>     Adrian D. Thurston
>     http://www.complang.org/thurston/
>
>     _______________________________________________
>     ragel-users mailing list
>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>     http://www.complang.org/mailman/listinfo/ragel-users
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Sat Apr  9 17:20:14 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:20:14 -0700
Subject: [ragel-users] Regex end and begin of data.
In-Reply-To: <4D9F334D.2000102@gmail.com>
References: <20110408004600.7e1f8148.ygrek@autistici.org>	<4D9EA47D.7090608@complang.org>
	<4D9F334D.2000102@gmail.com>
Message-ID: <4DA0954E.7010505@complang.org>

No, because ragel does not ever skip any bytes before trying to match. 
Similarly, if you supply additional data to a state machine that is in 
the final state, it will move to the error state.

On 11-04-08 09:09 AM, Vladimir VG wrote:
> Is there in Ragel equivalent regexp's $ ^ patterns?
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Sat Apr  9 17:29:55 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sat, 09 Apr 2011 10:29:55 -0700
Subject: [ragel-users] Unexpected final state action call
In-Reply-To: <BANLkTim5a6OWOycN0fyD=UhrhZ1i+ZCHjw@mail.gmail.com>
References: <BANLkTim5a6OWOycN0fyD=UhrhZ1i+ZCHjw@mail.gmail.com>
Message-ID: <4DA09793.6000202@complang.org>

You could do one of the following, depending on your parsing requirements.

1. exclude ( '||' '|'* ) from content.
2. specify %end

If things get too complicated, you may want to switch to a scanner.


On 11-04-09 02:40 AM, Andrey Vityuk wrote:
> Actually I found solution:
> action start { System.out.println("start. fpc = " + fpc); }
> action end  { System.out.println("end. fpc = " + fpc); }
>
> content = (any+ -- '||') >start ;
> main := content . '||' @end . '\n'?;
>
> But the problem is my original rules are more complex:
> content = '||' . (any+ -- '||') >start ;
> main := content+ . '||' @end . '\n'?;
>
> For input: "||abc||efg||" they work fine:
> start. fpc = 2
> end. fpc = 6
> start. fpc = 7
> end. fpc = 11
> start. fpc = 12
> Consumed all: true
>
> But for input: "||abc|||" I am getting unxpected calls:
> start. fpc = 2
> end. fpc = 6
> start. fpc = 7
> end. fpc = 7
> start. fpc = 8
> Consumed all: true
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From gordeev.vladimir.v at gmail.com  Sat Apr  9 18:01:28 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Sat, 09 Apr 2011 21:01:28 +0300
Subject: [ragel-users] One question.
In-Reply-To: <4DA09232.1090009@complang.org>
References: <4D923DDF.3030805@gmail.com>	<AANLkTimY-6S91R5Q+cgmEOy3JSGtUpjzKHoXmM_nBb7Y@mail.gmail.com>	<AANLkTik-fdHdO=WCZmytbVnvtxv+ZPx=PAAv8Sauh6Zo@mail.gmail.com>	<4D92B3B1.3070509@gmail.com>	<AANLkTi=_k5ph=Cd+9a21vJOXDahdY_C+YPjov62e=Wia@mail.gmail.com>	<4D9E1D07.5050004@complang.org>	<BANLkTin5DWFkRhK2JgtLLr_0eGc3-QQOMg@mail.gmail.com>
	<4DA09232.1090009@complang.org>
Message-ID: <4DA09EF8.50605@gmail.com>

I already understand that =). I switched to ANTLR.

On 04/09/2011 08:06 PM, Adrian Thurston wrote:
> It depends on the language being parsed. If it's easy to know when 
> push and pop (because of the appearance of certain tokens) then you 
> probably won't run into problems and it's just a matter of personal 
> preference. If the language is more complicated than that (say like a 
> programming language) then you are certainly going to get a headache 
> trying to parse in ragel and you'll have to switch.
>
> On 11-04-07 03:50 PM, Nate wrote:
>> I've now done a couple projects with recursion using fcall. It isn't too
>> bad. Is there something I lose by doing this, beyond the ability to
>> express the recursion in Ragel? What would really make switch tools for
>> a project?
>>
>> -Nate
>>
>>
>> On Thu, Apr 7, 2011 at 1:22 PM, Adrian Thurston <thurston at complang.org
>> <mailto:thurston at complang.org>> wrote:
>>
>>     To expand on this a bit ... it is entirely up to the user to manage
>>     the stack allocation. Ragel's support for recursive structures
>>     (fcall/fret) is an extension to the basic model, which is pure state
>>     machine (not a PDA). If you find you have a lot recursion in what
>>     you need to parse, you should consider that ragel might not be the
>>     right tool for the job.
>>
>>     Regards
>>
>>
>>     On 03/29/2011 09:59 PM, Nate wrote:
>>
>>         Yes, see the int[] stack in the link. :) Also note the code
>>         under "prepush".
>>
>>         -Nate
>>
>>
>>         On Tue, Mar 29, 2011 at 9:38 PM, Gordeev Vladimir
>> <gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>
>> <mailto:gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>>
>>             Hm, this looks like solution. I will try it. Thanks.
>>
>>             Related question: Does Ragel have some inner stack to handle
>>         nested
>>             fcall/fret?
>>
>>
>>             On 30.03.2011 00:59, Nate wrote:
>>
>>                 You can use fcall to jump to a machine, then fret to
>>             resume where
>>                 you were. It's a bit tricky, but once you understand it
>>             you can
>>                 parse recursively. See the startTable action here
>>             (though this is
>>                 a pretty hairy parser):
>>             
>> http://code.google.com/p/table-layout/source/browse/trunk/build/TableLayoutParser.rl
>>
>>                 -Nate
>>
>>
>>                 On Tue, Mar 29, 2011 at 2:55 PM, Jonathan Castello
>> <twisolar at gmail.com <mailto:twisolar at gmail.com>
>> <mailto:twisolar at gmail.com <mailto:twisolar at gmail.com>>> wrote:
>>
>>                     On Tue, Mar 29, 2011 at 1:15 PM, Gordeev Vladimir
>> <gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>
>> <mailto:gordeev.vladimir.v at gmail.com
>> <mailto:gordeev.vladimir.v at gmail.com>>> wrote:
>> > So I got following error:
>> >
>> >     test.rl:7:32: graph lookup of "list" failed
>>
>>                     The reason you get that error is because a rule can
>>             only reference
>>                     definitions that came before it. "list" doesn't
>>             exist until the
>>                     definition is finished, so it can't reference
>>             itself. (That would
>>                     create a recursive structure anyways, which Ragel 
>> isn't
>>                     equipped to
>>                     handle natively.)
>>
>>                     ~Jonathan
>>
>>                     _______________________________________________
>>                     ragel-users mailing list
>>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>> <mailto:ragel-users at complang.org
>> <mailto:ragel-users at complang.org>>
>>
>>             http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>                 _______________________________________________
>>                 ragel-users mailing list
>>             ragel-users at complang.org <mailto:ragel-users at complang.org>
>> <mailto:ragel-users at complang.org
>> <mailto:ragel-users at complang.org>>
>>
>>             http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>             _______________________________________________
>>             ragel-users mailing list
>>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>> <mailto:ragel-users at complang.org <mailto:ragel-users at complang.org>>
>>
>>         http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>
>>         _______________________________________________
>>         ragel-users mailing list
>>         ragel-users at complang.org <mailto:ragel-users at complang.org>
>>         http://www.complang.org/mailman/listinfo/ragel-users
>>         --===============092103
>>
>>
>>     --
>>     Adrian D. Thurston
>>     http://www.complang.org/thurston/
>>
>>
>>     _______________________________________________
>>     ragel-users mailing list
>>     ragel-users at complang.org <mailto:ragel-users at complang.org>
>>     http://www.complang.org/mailman/listinfo/ragel-users
>>
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>


_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From 8181919 at gmail.com  Sat Apr 16 16:07:19 2011
From: 8181919 at gmail.com (Midas)
Date: Sun, 17 Apr 2011 00:07:19 +0800
Subject: [ragel-users] How to generate Objective-C?
Message-ID: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>

I'm to ragle, and when I use ragel source.rl, it only generate C file.
thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110417/1141db89/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Sun Apr 17 15:36:03 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sun, 17 Apr 2011 08:36:03 -0700
Subject: [ragel-users] How to generate Objective-C?
In-Reply-To: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>
References: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>
Message-ID: <4DAB08E3.6020006@complang.org>

The C code generator generates valid Objective-C as well.

On 11-04-16 09:07 AM, Midas wrote:
> I'm to ragle, and when I use ragel source.rl, it only generate C file.
> thanks
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From 8181919 at gmail.com  Tue Apr 19 10:09:37 2011
From: 8181919 at gmail.com (Midas)
Date: Tue, 19 Apr 2011 18:09:37 +0800
Subject: [ragel-users] How to generate Objective-C?
In-Reply-To: <4DAB08E3.6020006@complang.org>
References: <BANLkTi=fNPHSyuZVJQrSC7Y9pOWA6AeAWg@mail.gmail.com>
	<4DAB08E3.6020006@complang.org>
Message-ID: <BANLkTinpCXR0jJRc9rHMtg529zJZ7yMNGA@mail.gmail.com>

I see, thanks

2011/4/17 Adrian Thurston <thurston at complang.org>

> The C code generator generates valid Objective-C as well.
>
>
> On 11-04-16 09:07 AM, Midas wrote:
>
>> I'm to ragle, and when I use ragel source.rl, it only generate C file.
>> thanks
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
> --
> Dr. Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20110419/067f5006/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From ygrek at autistici.org  Mon Apr 25 07:37:23 2011
From: ygrek at autistici.org (ygrek)
Date: Mon, 25 Apr 2011 10:37:23 +0300
Subject: [ragel-users] access prefix
Message-ID: <20110425103723.9b2088b3.ygrek@autistici.org>

Hello,

 Is there any reason why %access defines prefix for all state variables except some (p,pe,cs,eof)?
 I think it would be useful to specify prefix for all state variables (and then override some variables if
 needed with individual %variable declarations).

-- 
 ygrek
 http://ygrek.org.ua/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From thurston at complang.org  Mon Apr 25 16:06:50 2011
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 25 Apr 2011 09:06:50 -0700
Subject: [ragel-users] access prefix
In-Reply-To: <20110425103723.9b2088b3.ygrek@autistici.org>
References: <20110425103723.9b2088b3.ygrek@autistici.org>
Message-ID: <4DB59C1A.3040605@complang.org>

Hi,

The p, pe, and eof variables are not modified because they do not need 
to be maintained across partial executions of state machines. They are 
normally declared as local variables in the function that contains the 
write exec.

The cs variable should be modified. If you are finding it isn't for some 
language, then that would definitely be a bug.

-Adrian

On 11-04-25 12:37 AM, ygrek wrote:
> Hello,
>
>   Is there any reason why %access defines prefix for all state variables except some (p,pe,cs,eof)?
>   I think it would be useful to specify prefix for all state variables (and then override some variables if
>   needed with individual %variable declarations).
>

-- 
Dr. Adrian D. Thurston
http://www.complang.org/thurston/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From brian at brimworks.com  Tue Apr 26 04:02:24 2011
From: brian at brimworks.com (Brian Maher)
Date: Mon, 25 Apr 2011 21:02:24 -0700
Subject: [ragel-users] access prefix
In-Reply-To: <4DB59C1A.3040605@complang.org>
References: <20110425103723.9b2088b3.ygrek@autistici.org>
	<4DB59C1A.3040605@complang.org>
Message-ID: <BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>

If it makes a difference, I actually keep p, pe, and eof in my
"struct" for managing ragel state, so if %access defined a prefix for
*all* state variables, then it would be a welcome change from my
perspective.

Although Adrian is right about p, pe, and eof being rather
"transient", I find it easier to write functions that take a single
"struct" argument that manages the ragel state.  This way I can write
a function called state_machine that encapsulates all my actions for
the state machine, but ends up delegating each action to a function
that takes the "struct" as an argument.  I just find this way of
writing code is easier for me and my editor to digest.

Cheers,
-Brian

On Mon, Apr 25, 2011 at 9:06 AM, Adrian Thurston <thurston at complang.org> wrote:
> Hi,
>
> The p, pe, and eof variables are not modified because they do not need to be
> maintained across partial executions of state machines. They are normally
> declared as local variables in the function that contains the write exec.
>
> The cs variable should be modified. If you are finding it isn't for some
> language, then that would definitely be a bug.
>
> -Adrian
>
> On 11-04-25 12:37 AM, ygrek wrote:
>>
>> Hello,
>>
>>  Is there any reason why %access defines prefix for all state variables
>> except some (p,pe,cs,eof)?
>>  I think it would be useful to specify prefix for all state variables (and
>> then override some variables if
>>  needed with individual %variable declarations).
>>
>
> --
> Dr. Adrian D. Thurston
> http://www.complang.org/thurston/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>



-- 
Brian Maher >> Glory to God <<

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From adrian.thurston at esentire.com  Tue Apr 26 15:05:40 2011
From: adrian.thurston at esentire.com (Adrian Thurston)
Date: Tue, 26 Apr 2011 08:05:40 -0700
Subject: [ragel-users] access prefix
In-Reply-To: <BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>
References: <20110425103723.9b2088b3.ygrek@autistici.org>	<4DB59C1A.3040605@complang.org>
	<BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>
Message-ID: <4DB6DF44.8040600@esentire.com>

Ya that's a perfectly reasonable way to do it. I'd like to design ragel 
for the most common case. I *think* making pe, pe and eof local is more 
common, but I could be wrong.

-Adrian

On 11-04-25 09:02 PM, Brian Maher wrote:
> If it makes a difference, I actually keep p, pe, and eof in my
> "struct" for managing ragel state, so if %access defined a prefix for
> *all* state variables, then it would be a welcome change from my
> perspective.
>
> Although Adrian is right about p, pe, and eof being rather
> "transient", I find it easier to write functions that take a single
> "struct" argument that manages the ragel state.  This way I can write
> a function called state_machine that encapsulates all my actions for
> the state machine, but ends up delegating each action to a function
> that takes the "struct" as an argument.  I just find this way of
> writing code is easier for me and my editor to digest.
>
> Cheers,
> -Brian
>
> On Mon, Apr 25, 2011 at 9:06 AM, Adrian Thurston<thurston at complang.org>  wrote:
>> Hi,
>>
>> The p, pe, and eof variables are not modified because they do not need to be
>> maintained across partial executions of state machines. They are normally
>> declared as local variables in the function that contains the write exec.
>>
>> The cs variable should be modified. If you are finding it isn't for some
>> language, then that would definitely be a bug.
>>
>> -Adrian
>>
>> On 11-04-25 12:37 AM, ygrek wrote:
>>>
>>> Hello,
>>>
>>>   Is there any reason why %access defines prefix for all state variables
>>> except some (p,pe,cs,eof)?
>>>   I think it would be useful to specify prefix for all state variables (and
>>> then override some variables if
>>>   needed with individual %variable declarations).
>>>
>>
>> --
>> Dr. Adrian D. Thurston
>> http://www.complang.org/thurston/
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>
>
>

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From ygrek at autistici.org  Tue Apr 26 20:41:18 2011
From: ygrek at autistici.org (ygrek)
Date: Tue, 26 Apr 2011 23:41:18 +0300
Subject: [ragel-users] access prefix
In-Reply-To: <4DB6DF44.8040600@esentire.com>
References: <20110425103723.9b2088b3.ygrek@autistici.org>
	<4DB59C1A.3040605@complang.org>
	<BANLkTi=u5H-Os569S2-dXBBuLGuyjOk+hw@mail.gmail.com>
	<4DB6DF44.8040600@esentire.com>
Message-ID: <20110426234118.8266b370.ygrek@autistici.org>

On Tue, 26 Apr 2011 08:05:40 -0700
Adrian Thurston <adrian.thurston at esentire.com> wrote:

> Ya that's a perfectly reasonable way to do it. I'd like to design ragel 
> for the most common case. I *think* making pe, pe and eof local is more 
> common, but I could be wrong.
> 
> -Adrian
> 
> On 11-04-25 09:02 PM, Brian Maher wrote:
> > [...]
> > Although Adrian is right about p, pe, and eof being rather
> > "transient", I find it easier to write functions that take a single
> > "struct" argument that manages the ragel state.  This way I can write
> > a function called state_machine that encapsulates all my actions for
> > the state machine, but ends up delegating each action to a function
> > that takes the "struct" as an argument.  I just find this way of
> > writing code is easier for me and my editor to digest.

Yes, this is exactly the reason for this question - I wanted to abstract over
ragel machine invocation so that it is more lightweight to use. Flexibility
is good and valuable, but the most popular case should be covered with least code.
My goal is somthing like this :

%%{
machive smth;
access state.;
...
}%%

module ParseSomething = struct
let init () =
  let state = Ragel.init () in
  %%write init;
  state
let parse state data =
  %%write exec noprefix;
  Ragel.is_finished state
end

With the module Ragel being reusable (in different projects).
If p and pe variables are put in state then more common idioms can be reused, like

  >{Ragel.mark state} @{Ragel.extract state}

and

  module Ragel = struct
  ...
  let mark state = state.mark := state.p
  let extract state = String.sub data state.mark (state.p - state.mark)
  end

When p and pe are kept local, all functions referencing them are also required to be local and
that means quite a bit of copypaste code.
So I think that having uniform way to gather all user-defined variables under single prefix
is worthwhile (maybe some modifier to %access or another keyword).

-- 
 ygrek
 http://ygrek.org.ua/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


