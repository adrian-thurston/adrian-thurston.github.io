From flameeyes at gmail.com  Thu May  7 12:04:37 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Thu, 07 May 2009 14:04:37 +0200
Subject: [ragel-users] Catch-rest machines
Message-ID: <1241697877.8305.176.camel@yamato>

Hi everybody,

I'm having some little trouble trying to wire up some tokenizing state
machines I wrote for feng ( http://www.lscube.org/ ) from one side
branch to the master one, and I start to wonder if it only worke dout of
luck before.

Basically this is used during RTSP requests parsing (RFC822-compatible),
it's autogenerated (yes, autogenerating ragel code that generates C
code, I know it sounds silly at first), so that it only identifies the
headers that we _actually_ use and skip all the rest.

The autogenerated machine can be reduced to

  Header_Name = (
    'Transport'i % { hdr_code = RTSP_Header_Transport; } |
    'Unsupported'i % { hdr_code = RTSP_Header_Unsupported; } |
    'User-Agent'i % { hdr_code = RTSP_Header_User_Agent; } |
    ( unreserved+ ) % { hdr_code = RTSP_Header_Unknown; }
  );

and then I wire it up in 

  Header = Header_Name :>
      ':' . SP . print+ > hdr_val_start;

  main := ( (Header % save_header) :> CRLF )** :> CRLF . 0;

By the time it calls save_header, though, hdr_code is always
RTSP_Header_Unknown if not for the last User-Agent one.

I'm sincerely at a bit of a loss.. or maybe I tried to bang my head on
this too much for now...

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
URL: <http://www.colm.net/pipermail/ragel/attachments/20090507/820fdd17/attachment.sig>

From torben.lehoff at googlemail.com  Thu May 14 09:11:46 2009
From: torben.lehoff at googlemail.com (Torben Hoffmann)
Date: Thu, 14 May 2009 11:11:46 +0200
Subject: [ragel-users] How easy is it to extend Ragel's code generation to
	other languages?
Message-ID: <ecfbfea90905140211oa7cc8aai831a804120e509a3@mail.gmail.com>

Ragel seems pretty powerful, but it does not target Erlang which I use a
lot.

How easy would it be to add support for Erlang?

And in particular: would it be possible to generate both protocol analysers
as well as Erlang/OTP state machines (
http://www.erlang.org/doc/man/gen_fsm.html)?
The reason for this is that the gen_fsm module in Erlang/OTP is so powerful
that you really want to write you code using that.

Thanks in advance,
Torben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20090514/d675ea1f/attachment.html>

From torben.lehoff at googlemail.com  Thu May 14 18:48:28 2009
From: torben.lehoff at googlemail.com (Torben Hoffmann)
Date: Thu, 14 May 2009 20:48:28 +0200
Subject: [ragel-users] How easy is it to extend Ragel's code generation to
	other targets?
Message-ID: <ecfbfea90905141148n46f401cah7566932b9caa2fe8@mail.gmail.com>

Ragel seems pretty powerful, but it does not target Erlang which I use a
lot.

How easy would it be to add support for Erlang?

And in particular: would it be possible to generate both protocol analysers
as well as Erlang/OTP state machines (
http://www.erlang.org/doc/man/gen_fsm.html)?
The reason for this is that the gen_fsm module in Erlang/OTP is so powerful
that you really want to write you code using that.

Thanks in advance,
Torben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20090514/d236bd1c/attachment.html>

From thurston at complang.org  Fri May 15 02:37:31 2009
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 14 May 2009 22:37:31 -0400
Subject: [ragel-users] Best practice: using ragel for bit-based state
 machines on	microcontroller?
In-Reply-To: <1240948143.28562.12.camel@my.sporbeck-family.de>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
Message-ID: <4A0CD56B.4090807@complang.org>

I wish I had some tips for you. I have no experience using Ragel for 
bit-based parsers. I know it's pretty easy to mask out high bits using 
ranges

alphtype unsigned char;
foo = 0xfc .. 0xff;

But masking out low bit patterns is not pleasant because the values are 
not contiguous.

Also, once you mask out some bits, you just move over the others in the 
byte. I suppose you could use fhold strategically. Seems painful to me 
though.

-Adrian

Jan Sporbeck wrote:
> Hello there!
> 
> I'd like to use ragel to design the state machine for a microcontroller
> project (avr atmega8535) written in C.
> 
> I think I understand how to use it for streams of char, int, etc. But
> what's the best practice to use for bit based decisions?
> 
> I could use union..struct to pack all bits in one datatype and process
> that. But I doubt that'll yield a performant implementation.
> 
> I read messages on this list that ragel is used for uC projects, but no
> details how.
> 
> So any hints or example code to get me started is appreciated.
> 
> Thanks in advance,
> /Jan.
> 
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Fri May 15 03:10:23 2009
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 14 May 2009 23:10:23 -0400
Subject: [ragel-users] Best practice: using ragel for bit-based state
 machines on	microcontroller?
In-Reply-To: <1240948143.28562.12.camel@my.sporbeck-family.de>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
Message-ID: <4A0CDD1F.6050505@complang.org>

Ah, you can process at the bit level. See attached code. You'll probably 
want to scrutinize the generated and compiled code to see if it's good 
enough for your needs. One thing to note about using the getchar 
directive is that the expression can be evaluated more than once per 
value of p and if the compiler doesn't optimize that duplicate work away 
then your code won't be optimal.

By the way, I'm not sure if I just figured this out now, or if somebody 
told me about this technique a while back and I forgot. (Bob maybe?)

-Adrian

Jan Sporbeck wrote:
> Hello there!
> 
> I'd like to use ragel to design the state machine for a microcontroller
> project (avr atmega8535) written in C.
> 
> I think I understand how to use it for streams of char, int, etc. But
> what's the best practice to use for bit based decisions?
> 
> I could use union..struct to pack all bits in one datatype and process
> that. But I doubt that'll yield a performant implementation.
> 
> I read messages on this list that ragel is used for uC projects, but no
> details how.
> 
> So any hints or example code to get me started is appreciated.
> 
> Thanks in advance,
> /Jan.
> 
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tmp.rl
URL: <http://www.colm.net/pipermail/ragel/attachments/20090514/9f53a039/attachment.ksh>

From thurston at complang.org  Fri May 15 03:18:59 2009
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 14 May 2009 23:18:59 -0400
Subject: [ragel-users] Best practice: using ragel for bit-based state
 machines on	microcontroller?
In-Reply-To: <4A0CDD1F.6050505@complang.org>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
	<4A0CDD1F.6050505@complang.org>
Message-ID: <4A0CDF23.5030706@complang.org>

Sorry, I meant *getkey* directive. Uh oh, I'm getting the keywords of my 
own language wrong. That's embarrassing!

-Adrian

Adrian Thurston wrote:
> Ah, you can process at the bit level. See attached code. You'll probably 
> want to scrutinize the generated and compiled code to see if it's good 
> enough for your needs. One thing to note about using the getchar 
> directive is that the expression can be evaluated more than once per 
> value of p and if the compiler doesn't optimize that duplicate work away 
> then your code won't be optimal.
> 
> By the way, I'm not sure if I just figured this out now, or if somebody 
> told me about this technique a while back and I forgot. (Bob maybe?)
> 
> -Adrian
> 
> Jan Sporbeck wrote:
>> Hello there!
>>
>> I'd like to use ragel to design the state machine for a microcontroller
>> project (avr atmega8535) written in C.
>>
>> I think I understand how to use it for streams of char, int, etc. But
>> what's the best practice to use for bit based decisions?
>>
>> I could use union..struct to pack all bits in one datatype and process
>> that. But I doubt that'll yield a performant implementation.
>>
>> I read messages on this list that ragel is used for uC projects, but no
>> details how.
>>
>> So any hints or example code to get me started is appreciated.
>>
>> Thanks in advance,
>> /Jan.
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Fri May 15 13:42:10 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 15 May 2009 09:42:10 -0400
Subject: [ragel-users] Catch-rest machines
In-Reply-To: <1241697877.8305.176.camel@yamato>
References: <1241697877.8305.176.camel@yamato>
Message-ID: <20090515134210.GA1414@xform.complang.org>

Hi Diego,

The reason here is that the specific headers are a subset of the default
headers and two actions will be executed. A quick fix is to put the default
header at the top of the union to reverse the order. To see this, use -V and
graphviz. It should make things clear.

To avoid the double action execution you can either exclude the known headers
from the catch all with the - operator, or you can use priorities.

Adrian

On Thu, May 07, 2009 at 02:04:37PM +0200, Diego E. “Flameeyes” Pettenò wrote:
> Hi everybody,
> 
> I'm having some little trouble trying to wire up some tokenizing state
> machines I wrote for feng ( http://www.lscube.org/ ) from one side
> branch to the master one, and I start to wonder if it only worke dout of
> luck before.
> 
> Basically this is used during RTSP requests parsing (RFC822-compatible),
> it's autogenerated (yes, autogenerating ragel code that generates C
> code, I know it sounds silly at first), so that it only identifies the
> headers that we _actually_ use and skip all the rest.
> 
> The autogenerated machine can be reduced to
> 
>   Header_Name = (
>     'Transport'i % { hdr_code = RTSP_Header_Transport; } |
>     'Unsupported'i % { hdr_code = RTSP_Header_Unsupported; } |
>     'User-Agent'i % { hdr_code = RTSP_Header_User_Agent; } |
>     ( unreserved+ ) % { hdr_code = RTSP_Header_Unknown; }
>   );
> 
> and then I wire it up in 
> 
>   Header = Header_Name :>
>       ':' . SP . print+ > hdr_val_start;
> 
>   main := ( (Header % save_header) :> CRLF )** :> CRLF . 0;
> 
> By the time it calls save_header, though, hdr_code is always
> RTSP_Header_Unknown if not for the last User-Agent one.
> 
> I'm sincerely at a bit of a loss.. or maybe I tried to bang my head on
> this too much for now...
> 
> -- 
> Diego Elio Pettenò — “Flameeyes”
> http://blog.flameeyes.eu/
> 
> If you found a .asc file in this mail and know not what it is,
> it's a GnuPG digital signature: http://www.gnupg.org/
> 



> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users




From thurston at complang.org  Sat May 16 00:53:19 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 15 May 2009 20:53:19 -0400
Subject: [ragel-users] How easy is it to extend Ragel's code generation
 to	other languages?
In-Reply-To: <ecfbfea90905140211oa7cc8aai831a804120e509a3@mail.gmail.com>
References: <ecfbfea90905140211oa7cc8aai831a804120e509a3@mail.gmail.com>
Message-ID: <4A0E0E7F.5020403@complang.org>

It's generally pretty easy to get a basic model working in an imperative 
language. The approach to take depends on the facilities of the target 
language. For example if goto is available then you can copy the C code 
directly. If not, then maybe base it on Java or Ruby.

But since Erlang is functional, it's probably harder (but not 
impossible) to implement the Ragel runtime semantics exactly as it 
exists for the other target languages.

I can't really say since I don't know Erlang. What we need is to find 
the intersection of all Ragel experts with all Erlang experts.

-Adrian

Torben Hoffmann wrote:
> Ragel seems pretty powerful, but it does not target Erlang which I use a 
> lot.
> 
> How easy would it be to add support for Erlang?
> 
> And in particular: would it be possible to generate both protocol 
> analysers as well as Erlang/OTP state machines 
> (http://www.erlang.org/doc/man/gen_fsm.html)?
> The reason for this is that the gen_fsm module in Erlang/OTP is so 
> powerful that you really want to write you code using that.
> 
> Thanks in advance,
> Torben
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From ich+lists at slashhome.de  Sat May 16 12:40:21 2009
From: ich+lists at slashhome.de (Jan Sporbeck)
Date: Sat, 16 May 2009 14:40:21 +0200
Subject: [ragel-users] Best practice: using ragel for bit-based
	state	machines on microcontroller?
In-Reply-To: <4A0CDD1F.6050505@complang.org>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
	<4A0CDD1F.6050505@complang.org>
Message-ID: <1242477621.5144.8.camel@my.sporbeck-family.de>

Adrian, thanks for pointing me to that and providing an example.
I'll look into that and use it to at last verify the code I have been
making up manually. (I ended up with 40 states superpositioning four
state machines..)

Just to make clear what I meant by packing the bits into a bigger
structure. (Yes, I know it doesn't provide the most compact code)

union {
  struct {
    unsigned char  s1:1;
    unsigned char  s2:1;
    unsigned char  s3:1;
    unsigned char  s4:1;
  } bits;
  unsigned char byte;
} bit_byte;

bit_byte.bits.s1 = 1;

PORTD = bit_byte.byte;


/Jan.

Am Donnerstag, den 14.05.2009, 23:10 -0400 schrieb Adrian Thurston:
> Ah, you can process at the bit level. See attached code. You'll probably 
> want to scrutinize the generated and compiled code to see if it's good 
> enough for your needs. One thing to note about using the getchar 
> directive is that the expression can be evaluated more than once per 
> value of p and if the compiler doesn't optimize that duplicate work away 
> then your code won't be optimal.
> 
> By the way, I'm not sure if I just figured this out now, or if somebody 
> told me about this technique a while back and I forgot. (Bob maybe?)
> 
> -Adrian
> 
> Jan Sporbeck wrote:
> > Hello there!
> > 
> > I'd like to use ragel to design the state machine for a microcontroller
> > project (avr atmega8535) written in C.
> > 
> > I think I understand how to use it for streams of char, int, etc. But
> > what's the best practice to use for bit based decisions?
> > 
> > I could use union..struct to pack all bits in one datatype and process
> > that. But I doubt that'll yield a performant implementation.
> > 
> > I read messages on this list that ragel is used for uC projects, but no
> > details how.
> > 
> > So any hints or example code to get me started is appreciated.
> > 
> > Thanks in advance,
> > /Jan.





From thurston at complang.org  Mon May 18 17:41:21 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 18 May 2009 13:41:21 -0400
Subject: [ragel-users] ragel 6.5 released
Message-ID: <4A119DC1.9040307@complang.org>

Hi,

I just released 6.5. This includes a couple bug fixes and a move to 
automake.

Cheers,
  Adrian



From flameeyes at gmail.com  Mon May 18 18:07:33 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Mon, 18 May 2009 20:07:33 +0200
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <4A119DC1.9040307@complang.org>
References: <4A119DC1.9040307@complang.org>
Message-ID: <1242670053.18705.19.camel@yamato>

Il giorno Mon, 18/05/2009 alle 13.41 -0400, Adrian Thurston ha scritto:
> 
> I just released 6.5. This includes a couple bug fixes and a move to 
> automake.

Is it wanted or a mistake that the vim syntax file is not in the
tarball? The CREDITS file too.

You should probably add ragel.vim to EXTRA_DATA for it to be
distributed, and CREDITS to doc_DATA (dist_ shouldn't be needed given
that both that and ChangeLog don't have generation rules).

And you can avoid having an empty NEWS file around by setting automake
into foreign mode.

Other than these notes, it seems okay on Gentoo Linux, testing
Gentoo/FreeBSD and then pushing the package down to the users.

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel/attachments/20090518/f7197827/attachment.sig>

From flameeyes at gmail.com  Mon May 18 18:11:46 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Mon, 18 May 2009 20:11:46 +0200
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <4A119DC1.9040307@complang.org>
References: <4A119DC1.9040307@complang.org>
Message-ID: <1242670311.18705.20.camel@yamato>

Il giorno Mon, 18/05/2009 alle 13.41 -0400, Adrian Thurston ha scritto:
> 
> I just released 6.5. This includes a couple bug fixes and a move to 
> automake.

Actually just noticed the automated tests log on g/fbsd (and Linux too)
fails because test/cppscan1.h is also missing in conversion.

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel/attachments/20090518/9276ba14/attachment.sig>

From thurston at complang.org  Mon May 18 18:21:41 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 18 May 2009 14:21:41 -0400
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <1242670053.18705.19.camel@yamato>
References: <4A119DC1.9040307@complang.org> <1242670053.18705.19.camel@yamato>
Message-ID: <4A11A735.5000703@complang.org>

Thanks, I just checked in some fixes for these issues. Seems I need to 
use dist_ to get CREDITS into the tarball. I'm not sure why.

Diego E. “Flameeyes” Pettenò wrote:
> Il giorno Mon, 18/05/2009 alle 13.41 -0400, Adrian Thurston ha scritto:
>> I just released 6.5. This includes a couple bug fixes and a move to 
>> automake.
> 
> Is it wanted or a mistake that the vim syntax file is not in the
> tarball? The CREDITS file too.
> 
> You should probably add ragel.vim to EXTRA_DATA for it to be
> distributed, and CREDITS to doc_DATA (dist_ shouldn't be needed given
> that both that and ChangeLog don't have generation rules).
> 
> And you can avoid having an empty NEWS file around by setting automake
> into foreign mode.
> 
> Other than these notes, it seems okay on Gentoo Linux, testing
> Gentoo/FreeBSD and then pushing the package down to the users.
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From walter.php at gmail.com  Mon May 18 18:47:50 2009
From: walter.php at gmail.com (Walter Cruz)
Date: Mon, 18 May 2009 15:47:50 -0300
Subject: [ragel-users] Article to be included in the links section of ragel
	page
Message-ID: <32cabba0905181147h87bba44q769d2b7458ecee52@mail.gmail.com>

http://artigos.waltercruz.com/a-hello-world-for-ruby-on-ragel

It's a translation from devchix article to pt_BR

Cheers.
-- 
[]'
- Walter
waltercruz.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20090518/b28f965c/attachment.html>

From flameeyes at gmail.com  Mon May 18 20:33:45 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Mon, 18 May 2009 22:33:45 +0200
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <4A11A735.5000703@complang.org>
References: <4A119DC1.9040307@complang.org>
	<1242670053.18705.19.camel@yamato>  <4A11A735.5000703@complang.org>
Message-ID: <1242678825.18705.35.camel@yamato>

Il giorno Mon, 18/05/2009 alle 14.21 -0400, Adrian Thurston ha scritto:
> Thanks, I just checked in some fixes for these issues. Seems I need
> to 
> use dist_ to get CREDITS into the tarball. I'm not sure why.

Baffles me too; by the way for these things, "make distcheck" would be a
huge help, if it wasn't that it cannot be used until kelbt implements
the -I switch.

By the way, since it's much easier to note last minute fixes needed from
the distribution point of view, I'd also suggest you sent a "heads up"
message the day before you intend to release, this way I (and other
maintainers, assuming they are in the list) can check the status of the
in-svn code (I usually can do Linux, (G/)FreeBSD and OpenSolaris).

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel/attachments/20090518/b04c6839/attachment.sig>

From adrian.thurston at esentire.com  Tue May 19 13:17:43 2009
From: adrian.thurston at esentire.com (Adrian Thurston)
Date: Tue, 19 May 2009 09:17:43 -0400
Subject: [ragel-users] Article to be included in the links section of
 ragel page
In-Reply-To: <32cabba0905181147h87bba44q769d2b7458ecee52@mail.gmail.com>
References: <32cabba0905181147h87bba44q769d2b7458ecee52@mail.gmail.com>
Message-ID: <4A12B177.7050809@esentire.com>

Thanks, added.

-Adrian

Walter Cruz wrote:
> http://artigos.waltercruz.com/a-hello-world-for-ruby-on-ragel
> 
> It's a translation from devchix article to pt_BR
> 
> Cheers.
> -- 
> []'
> - Walter
> waltercruz.com <http://waltercruz.com>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From flameeyes at gmail.com  Tue May 19 18:44:47 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Tue, 19 May 2009 20:44:47 +0200
Subject: [ragel-users] Build failures with GCC 4.4
Message-ID: <1242758687.18705.77.camel@yamato>

Seems like yesterday I tried with the “wrong” compiler (that is, the
compiler that is actually used rather than the one I should test with).

While GCC 4.3 compiles Ragel 6.5 fine, GCC 4.4 errors out, because the
string functions are now declared in such a way that they return “const
char *” when given “const char *” and “char *” when given “char *”.

I'm attaching the half good part of the patch I've applied to the Gentoo
ebuild, the other half is actually just a const_cast which is _nasty_;
the problem is at main.c:339; the eq variable is a pointer to
non-constant, and is indeed modified on line 342.

The solution would be, I guess, to use strncmp instead of setting eq to
\0. This way you never modify the string and you can use constant
strings.

HTH,

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gcc-4.4-part1.patch
Type: text/x-patch
Size: 392 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel/attachments/20090519/a5df0d75/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel/attachments/20090519/a5df0d75/attachment.sig>

From flameeyes at gmail.com  Tue May 19 19:07:39 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Tue, 19 May 2009 21:07:39 +0200
Subject: [ragel-users] [PATCH] Fix tests under FreeBSD
Message-ID: <1242760059.18705.78.camel@yamato>

The attached patch fixes the tests under FreeBSD: malloc.h cannot be
used there, so it uses the correct include (also migrates them to the C
++ includes rather than the C ones).

HTH,

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-Fix-tests-on-FreeBSD-malloc.h-should-not-be-used-std.patch
Type: text/x-patch
Size: 755 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel/attachments/20090519/9eab7fa2/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel/attachments/20090519/9eab7fa2/attachment.sig>

From robertle at semistable.com  Thu May 21 10:48:02 2009
From: robertle at semistable.com (Robert Lemmen)
Date: Thu, 21 May 2009 11:48:02 +0100
Subject: [ragel-users] ragel and encodings
Message-ID: <20090521104802.GA9072@semistable.com>

hi folks,

i am writing a machine for a text-based format, but it happens to come
in different encodings (e.g. iso-8859-1 or utf-8). so the question is
whether anyone has done somethign like that before and has a good idea
on how to do the encoding handling in a transparetn way and without
messing up the error locations?

thanks  robert

-- 
Robert Lemmen                               http://www.semistable.com 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: <http://www.colm.net/pipermail/ragel/attachments/20090521/5a2d3751/attachment.sig>

From wil.macaulay at gmail.com  Thu May 21 15:34:35 2009
From: wil.macaulay at gmail.com (Wil Macaulay)
Date: Thu, 21 May 2009 11:34:35 -0400
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521104802.GA9072@semistable.com>
References: <20090521104802.GA9072@semistable.com>
Message-ID: <c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>

Depends on your platform, but my approach to this problem (on the Mac)
was to detect
the encoding, and convert to UTF-8 before parsing. I also converted
line-endings (\r\n -> \n)
and ensured a newline at the end of the data at the same time.

wil

On Thu, May 21, 2009 at 6:48 AM, Robert Lemmen <robertle at semistable.com> wrote:
> hi folks,
>
> i am writing a machine for a text-based format, but it happens to come
> in different encodings (e.g. iso-8859-1 or utf-8). so the question is
> whether anyone has done somethign like that before and has a good idea
> on how to do the encoding handling in a transparetn way and without
> messing up the error locations?
>
> thanks  robert
>
> --
> Robert Lemmen                               http://www.semistable.com
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.9 (GNU/Linux)
>
> iD8DBQFKFTFiS6AOchRbaWYRArCrAKC5sXnTDqdUbgziK0hyOu2I5ef6WACdG0MR
> SSQ7nRuzJJFrXGkbQD+M5as=
> =1Zbb
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
>



From robertle at semistable.com  Thu May 21 17:48:20 2009
From: robertle at semistable.com (Robert Lemmen)
Date: Thu, 21 May 2009 18:48:20 +0100
Subject: [ragel-users] ragel and encodings
In-Reply-To: <c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
Message-ID: <20090521174820.GA18603@semistable.com>

On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
> Depends on your platform, but my approach to this problem (on the Mac)
> was to detect
> the encoding, and convert to UTF-8 before parsing. I also converted
> line-endings (\r\n -> \n)
> and ensured a newline at the end of the data at the same time.

how do you handle utf-8 in your ragel code? do you use a single-byte
alphtype and then handle the utf-8 sequences manually?

cu  robert

-- 
Robert Lemmen                               http://www.semistable.com 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: <http://www.colm.net/pipermail/ragel/attachments/20090521/c42b48d3/attachment.sig>

From wil.macaulay at gmail.com  Thu May 21 18:51:31 2009
From: wil.macaulay at gmail.com (Wil Macaulay)
Date: Thu, 21 May 2009 14:51:31 -0400
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521174820.GA18603@semistable.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
Message-ID: <c713a0460905211151w637193e8u3b71c5c112753271@mail.gmail.com>

Sorry - I was inaccurate in my previous reply (should have refreshed
my memory first by looking at
the code).  On the Mac, the native encoding is Unicode  - that's the
conceptual basis for the NSString class. There are convenience
functions for accessing the underlying
character buffer as unichar - 16 bits unsigned.   So my first step is
to convert the raw file to an NSString
as Unicode, then access the character buffer and sent that to my
parser.  This requires my ragel file to use:

#UniChar type is 16 bits unsigned
	
	alphtype unsigned short;

Keywords all fall into the standard ASCII charset - anything that is
outside the ascii character set,
for me, is only interesting in the context of literals (quoted strings
and the like).  This means that I can
write my FSM in the normal fashion.

Hope this helps

wil



On Thu, May 21, 2009 at 1:48 PM, Robert Lemmen <robertle at semistable.com> wrote:
> On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
>> Depends on your platform, but my approach to this problem (on the Mac)
>> was to detect
>> the encoding, and convert to UTF-8 before parsing. I also converted
>> line-endings (\r\n -> \n)
>> and ensured a newline at the end of the data at the same time.
>
> how do you handle utf-8 in your ragel code? do you use a single-byte
> alphtype and then handle the utf-8 sequences manually?
>
> cu  robert
>
> --
> Robert Lemmen                               http://www.semistable.com
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.9 (GNU/Linux)
>
> iD8DBQFKFZPkS6AOchRbaWYRAjClAKCy0w4KQNUOxyeA/0l1RUWQyZQKmwCeM3o7
> /CvWvDgAdAJYGDy2VEUBkuo=
> =xX1k
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
>



From win at wincent.com  Thu May 21 18:59:02 2009
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 21 May 2009 20:59:02 +0200
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521174820.GA18603@semistable.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
Message-ID: <DE942C33-28D4-40A8-BAC6-BD1CE7B6C5E3@wincent.com>

El 21/5/2009, a las 19:48, Robert Lemmen escribió:

> On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
>> Depends on your platform, but my approach to this problem (on the  
>> Mac)
>> was to detect
>> the encoding, and convert to UTF-8 before parsing. I also converted
>> line-endings (\r\n -> \n)
>> and ensured a newline at the end of the data at the same time.
>
> how do you handle utf-8 in your ragel code? do you use a single-byte
> alphtype and then handle the utf-8 sequences manually?

I work with UTF-8 sequences manually in my Wikitext module. You can  
see the Ragel file here:

http://git.wincent.com/wikitext.git?a=blob;f=ext/wikitext_ragel.rl

Wincent




From win at wincent.com  Thu May 21 19:04:00 2009
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 21 May 2009 21:04:00 +0200
Subject: [ragel-users] ragel and encodings
In-Reply-To: <c713a0460905211151w637193e8u3b71c5c112753271@mail.gmail.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
	<c713a0460905211151w637193e8u3b71c5c112753271@mail.gmail.com>
Message-ID: <5069AA2B-7792-4CC8-B9DB-0D0DB2567B2A@wincent.com>

El 21/5/2009, a las 20:51, Wil Macaulay escribió:

> Sorry - I was inaccurate in my previous reply (should have refreshed
> my memory first by looking at
> the code).  On the Mac, the native encoding is Unicode  - that's the
> conceptual basis for the NSString class. There are convenience
> functions for accessing the underlying
> character buffer as unichar - 16 bits unsigned.   So my first step is
> to convert the raw file to an NSString
> as Unicode, then access the character buffer and sent that to my
> parser.  This requires my ragel file to use:
>
> #UniChar type is 16 bits unsigned
> 	
> 	alphtype unsigned short;
>
> Keywords all fall into the standard ASCII charset - anything that is
> outside the ascii character set,
> for me, is only interesting in the context of literals (quoted strings
> and the like).  This means that I can
> write my FSM in the normal fashion.

As far as I know, the native encoding for NSString on Mac OS X is  
UTF-16, which means that the approach you describe will work for most  
input, but fall down for any code points which require surrogates (not  
all code points can be represented in 16 bits, so some of them require  
an additional 16 bits, forming a surrogate pair).

The approach would work fine if the input was in UCS-2 (which always  
fits in 16 bits, but which can't represent all Unicode code points).

So I guess it all depends on the kind of input the original poster is  
expecting. If it's user-supplied (untrusted input) and he wants to  
work with UTF-16 then he should probably gracefully handle surrogates,  
even if he isn't expecting them.

This Wikipedia article explains all this in a lot more detail:

http://en.wikipedia.org/wiki/UTF-16

Wincent




From thurston at complang.org  Sat May 23 02:45:12 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 22 May 2009 22:45:12 -0400
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <1242678825.18705.35.camel@yamato>
References: <4A119DC1.9040307@complang.org>	<1242670053.18705.19.camel@yamato>
	<4A11A735.5000703@complang.org> <1242678825.18705.35.camel@yamato>
Message-ID: <4A176338.2020102@complang.org>

Ah-ha, I didn't know about make distcheck. Thanks.

-Adrian

Diego E. “Flameeyes” Pettenò wrote:
> Il giorno Mon, 18/05/2009 alle 14.21 -0400, Adrian Thurston ha scritto:
>> Thanks, I just checked in some fixes for these issues. Seems I need
>> to 
>> use dist_ to get CREDITS into the tarball. I'm not sure why.
> 
> Baffles me too; by the way for these things, "make distcheck" would be a
> huge help, if it wasn't that it cannot be used until kelbt implements
> the -I switch.
> 
> By the way, since it's much easier to note last minute fixes needed from
> the distribution point of view, I'd also suggest you sent a "heads up"
> message the day before you intend to release, this way I (and other
> maintainers, assuming they are in the list) can check the status of the
> in-svn code (I usually can do Linux, (G/)FreeBSD and OpenSolaris).
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Sat May 23 02:46:17 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 22 May 2009 22:46:17 -0400
Subject: [ragel-users] Build failures with GCC 4.4
In-Reply-To: <1242758687.18705.77.camel@yamato>
References: <1242758687.18705.77.camel@yamato>
Message-ID: <4A176379.6000003@complang.org>

Applied, thanks. I also committed a fix for the problem at main.cpp:339.

-Adrian

Diego E. “Flameeyes” Pettenò wrote:
> Seems like yesterday I tried with the “wrong” compiler (that is, the
> compiler that is actually used rather than the one I should test with).
> 
> While GCC 4.3 compiles Ragel 6.5 fine, GCC 4.4 errors out, because the
> string functions are now declared in such a way that they return “const
> char *” when given “const char *” and “char *” when given “char *”.
> 
> I'm attaching the half good part of the patch I've applied to the Gentoo
> ebuild, the other half is actually just a const_cast which is _nasty_;
> the problem is at main.c:339; the eq variable is a pointer to
> non-constant, and is indeed modified on line 342.
> 
> The solution would be, I guess, to use strncmp instead of setting eq to
> \0. This way you never modify the string and you can use constant
> strings.
> 
> HTH,
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Sat May 23 02:46:39 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 22 May 2009 22:46:39 -0400
Subject: [ragel-users] [PATCH] Fix tests under FreeBSD
In-Reply-To: <1242760059.18705.78.camel@yamato>
References: <1242760059.18705.78.camel@yamato>
Message-ID: <4A17638F.60000@complang.org>

Thanks again, applied.

-Adrian

Diego E. “Flameeyes” Pettenò wrote:
> The attached patch fixes the tests under FreeBSD: malloc.h cannot be
> used there, so it uses the correct include (also migrates them to the C
> ++ includes rather than the C ones).
> 
> HTH,
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Tue May 26 02:47:14 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 25 May 2009 22:47:14 -0400
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521174820.GA18603@semistable.com>
References: <20090521104802.GA9072@semistable.com>	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
Message-ID: <4A1B5832.2000009@complang.org>

Some people express multibyte sequences directly in ragel with a char or 
unsigned char alphtype. There is contributed script in examples called 
unicode2ragel.rb that generates ragel definitions for ranges of unicode 
code points in utf8 or ucs4.

As a side note, it shoudl probably be in contrib. I'm going to move that 
now for anyone following the SVN directly.

-Adrian

Robert Lemmen wrote:
> On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
>> Depends on your platform, but my approach to this problem (on the Mac)
>> was to detect
>> the encoding, and convert to UTF-8 before parsing. I also converted
>> line-endings (\r\n -> \n)
>> and ensured a newline at the end of the data at the same time.
> 
> how do you handle utf-8 in your ragel code? do you use a single-byte
> alphtype and then handle the utf-8 sequences manually?
> 
> cu  robert
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Tue May 26 02:54:37 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 25 May 2009 22:54:37 -0400
Subject: [ragel-users] examples/ and contrib/ not in tarball
Message-ID: <4A1B59ED.6030508@complang.org>

I just realized that the examples and contrib directories are not in the 
6.5 tarball. The need to explicitly include files with automake is 
something I'm adjusting to. For the time being please get these from the 
SVN if you need them.

http://svn.complang.org/ragel/trunk/examples/
http://svn.complang.org/ragel/trunk/contrib/

Adrian




From flameeyes at gmail.com  Thu May  7 12:04:37 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Thu, 07 May 2009 14:04:37 +0200
Subject: [ragel-users] Catch-rest machines
Message-ID: <1241697877.8305.176.camel@yamato>

Hi everybody,

I'm having some little trouble trying to wire up some tokenizing state
machines I wrote for feng ( http://www.lscube.org/ ) from one side
branch to the master one, and I start to wonder if it only worke dout of
luck before.

Basically this is used during RTSP requests parsing (RFC822-compatible),
it's autogenerated (yes, autogenerating ragel code that generates C
code, I know it sounds silly at first), so that it only identifies the
headers that we _actually_ use and skip all the rest.

The autogenerated machine can be reduced to

  Header_Name = (
    'Transport'i % { hdr_code = RTSP_Header_Transport; } |
    'Unsupported'i % { hdr_code = RTSP_Header_Unsupported; } |
    'User-Agent'i % { hdr_code = RTSP_Header_User_Agent; } |
    ( unreserved+ ) % { hdr_code = RTSP_Header_Unknown; }
  );

and then I wire it up in 

  Header = Header_Name :>
      ':' . SP . print+ > hdr_val_start;

  main := ( (Header % save_header) :> CRLF )** :> CRLF . 0;

By the time it calls save_header, though, hdr_code is always
RTSP_Header_Unknown if not for the last User-Agent one.

I'm sincerely at a bit of a loss.. or maybe I tried to bang my head on
this too much for now...

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090507/820fdd17/attachment-0001.sig>

From torben.lehoff at googlemail.com  Thu May 14 09:11:46 2009
From: torben.lehoff at googlemail.com (Torben Hoffmann)
Date: Thu, 14 May 2009 11:11:46 +0200
Subject: [ragel-users] How easy is it to extend Ragel's code generation to
	other languages?
Message-ID: <ecfbfea90905140211oa7cc8aai831a804120e509a3@mail.gmail.com>

Ragel seems pretty powerful, but it does not target Erlang which I use a
lot.

How easy would it be to add support for Erlang?

And in particular: would it be possible to generate both protocol analysers
as well as Erlang/OTP state machines (
http://www.erlang.org/doc/man/gen_fsm.html)?
The reason for this is that the gen_fsm module in Erlang/OTP is so powerful
that you really want to write you code using that.

Thanks in advance,
Torben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090514/d675ea1f/attachment-0001.html>

From torben.lehoff at googlemail.com  Thu May 14 18:48:28 2009
From: torben.lehoff at googlemail.com (Torben Hoffmann)
Date: Thu, 14 May 2009 20:48:28 +0200
Subject: [ragel-users] How easy is it to extend Ragel's code generation to
	other targets?
Message-ID: <ecfbfea90905141148n46f401cah7566932b9caa2fe8@mail.gmail.com>

Ragel seems pretty powerful, but it does not target Erlang which I use a
lot.

How easy would it be to add support for Erlang?

And in particular: would it be possible to generate both protocol analysers
as well as Erlang/OTP state machines (
http://www.erlang.org/doc/man/gen_fsm.html)?
The reason for this is that the gen_fsm module in Erlang/OTP is so powerful
that you really want to write you code using that.

Thanks in advance,
Torben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090514/d236bd1c/attachment-0001.html>

From thurston at complang.org  Fri May 15 02:37:31 2009
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 14 May 2009 22:37:31 -0400
Subject: [ragel-users] Best practice: using ragel for bit-based state
 machines on	microcontroller?
In-Reply-To: <1240948143.28562.12.camel@my.sporbeck-family.de>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
Message-ID: <4A0CD56B.4090807@complang.org>

I wish I had some tips for you. I have no experience using Ragel for 
bit-based parsers. I know it's pretty easy to mask out high bits using 
ranges

alphtype unsigned char;
foo = 0xfc .. 0xff;

But masking out low bit patterns is not pleasant because the values are 
not contiguous.

Also, once you mask out some bits, you just move over the others in the 
byte. I suppose you could use fhold strategically. Seems painful to me 
though.

-Adrian

Jan Sporbeck wrote:
> Hello there!
> 
> I'd like to use ragel to design the state machine for a microcontroller
> project (avr atmega8535) written in C.
> 
> I think I understand how to use it for streams of char, int, etc. But
> what's the best practice to use for bit based decisions?
> 
> I could use union..struct to pack all bits in one datatype and process
> that. But I doubt that'll yield a performant implementation.
> 
> I read messages on this list that ragel is used for uC projects, but no
> details how.
> 
> So any hints or example code to get me started is appreciated.
> 
> Thanks in advance,
> /Jan.
> 
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Fri May 15 03:10:23 2009
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 14 May 2009 23:10:23 -0400
Subject: [ragel-users] Best practice: using ragel for bit-based state
 machines on	microcontroller?
In-Reply-To: <1240948143.28562.12.camel@my.sporbeck-family.de>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
Message-ID: <4A0CDD1F.6050505@complang.org>

Ah, you can process at the bit level. See attached code. You'll probably 
want to scrutinize the generated and compiled code to see if it's good 
enough for your needs. One thing to note about using the getchar 
directive is that the expression can be evaluated more than once per 
value of p and if the compiler doesn't optimize that duplicate work away 
then your code won't be optimal.

By the way, I'm not sure if I just figured this out now, or if somebody 
told me about this technique a while back and I forgot. (Bob maybe?)

-Adrian

Jan Sporbeck wrote:
> Hello there!
> 
> I'd like to use ragel to design the state machine for a microcontroller
> project (avr atmega8535) written in C.
> 
> I think I understand how to use it for streams of char, int, etc. But
> what's the best practice to use for bit based decisions?
> 
> I could use union..struct to pack all bits in one datatype and process
> that. But I doubt that'll yield a performant implementation.
> 
> I read messages on this list that ragel is used for uC projects, but no
> details how.
> 
> So any hints or example code to get me started is appreciated.
> 
> Thanks in advance,
> /Jan.
> 
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tmp.rl
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090514/9f53a039/attachment-0001.ksh>

From thurston at complang.org  Fri May 15 03:18:59 2009
From: thurston at complang.org (Adrian Thurston)
Date: Thu, 14 May 2009 23:18:59 -0400
Subject: [ragel-users] Best practice: using ragel for bit-based state
 machines on	microcontroller?
In-Reply-To: <4A0CDD1F.6050505@complang.org>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
	<4A0CDD1F.6050505@complang.org>
Message-ID: <4A0CDF23.5030706@complang.org>

Sorry, I meant *getkey* directive. Uh oh, I'm getting the keywords of my 
own language wrong. That's embarrassing!

-Adrian

Adrian Thurston wrote:
> Ah, you can process at the bit level. See attached code. You'll probably 
> want to scrutinize the generated and compiled code to see if it's good 
> enough for your needs. One thing to note about using the getchar 
> directive is that the expression can be evaluated more than once per 
> value of p and if the compiler doesn't optimize that duplicate work away 
> then your code won't be optimal.
> 
> By the way, I'm not sure if I just figured this out now, or if somebody 
> told me about this technique a while back and I forgot. (Bob maybe?)
> 
> -Adrian
> 
> Jan Sporbeck wrote:
>> Hello there!
>>
>> I'd like to use ragel to design the state machine for a microcontroller
>> project (avr atmega8535) written in C.
>>
>> I think I understand how to use it for streams of char, int, etc. But
>> what's the best practice to use for bit based decisions?
>>
>> I could use union..struct to pack all bits in one datatype and process
>> that. But I doubt that'll yield a performant implementation.
>>
>> I read messages on this list that ragel is used for uC projects, but no
>> details how.
>>
>> So any hints or example code to get me started is appreciated.
>>
>> Thanks in advance,
>> /Jan.
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Fri May 15 13:42:10 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 15 May 2009 09:42:10 -0400
Subject: [ragel-users] Catch-rest machines
In-Reply-To: <1241697877.8305.176.camel@yamato>
References: <1241697877.8305.176.camel@yamato>
Message-ID: <20090515134210.GA1414@xform.complang.org>

Hi Diego,

The reason here is that the specific headers are a subset of the default
headers and two actions will be executed. A quick fix is to put the default
header at the top of the union to reverse the order. To see this, use -V and
graphviz. It should make things clear.

To avoid the double action execution you can either exclude the known headers
from the catch all with the - operator, or you can use priorities.

Adrian

On Thu, May 07, 2009 at 02:04:37PM +0200, Diego E. “Flameeyes” Pettenò wrote:
> Hi everybody,
> 
> I'm having some little trouble trying to wire up some tokenizing state
> machines I wrote for feng ( http://www.lscube.org/ ) from one side
> branch to the master one, and I start to wonder if it only worke dout of
> luck before.
> 
> Basically this is used during RTSP requests parsing (RFC822-compatible),
> it's autogenerated (yes, autogenerating ragel code that generates C
> code, I know it sounds silly at first), so that it only identifies the
> headers that we _actually_ use and skip all the rest.
> 
> The autogenerated machine can be reduced to
> 
>   Header_Name = (
>     'Transport'i % { hdr_code = RTSP_Header_Transport; } |
>     'Unsupported'i % { hdr_code = RTSP_Header_Unsupported; } |
>     'User-Agent'i % { hdr_code = RTSP_Header_User_Agent; } |
>     ( unreserved+ ) % { hdr_code = RTSP_Header_Unknown; }
>   );
> 
> and then I wire it up in 
> 
>   Header = Header_Name :>
>       ':' . SP . print+ > hdr_val_start;
> 
>   main := ( (Header % save_header) :> CRLF )** :> CRLF . 0;
> 
> By the time it calls save_header, though, hdr_code is always
> RTSP_Header_Unknown if not for the last User-Agent one.
> 
> I'm sincerely at a bit of a loss.. or maybe I tried to bang my head on
> this too much for now...
> 
> -- 
> Diego Elio Pettenò — “Flameeyes”
> http://blog.flameeyes.eu/
> 
> If you found a .asc file in this mail and know not what it is,
> it's a GnuPG digital signature: http://www.gnupg.org/
> 



> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users




From thurston at complang.org  Sat May 16 00:53:19 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 15 May 2009 20:53:19 -0400
Subject: [ragel-users] How easy is it to extend Ragel's code generation
 to	other languages?
In-Reply-To: <ecfbfea90905140211oa7cc8aai831a804120e509a3@mail.gmail.com>
References: <ecfbfea90905140211oa7cc8aai831a804120e509a3@mail.gmail.com>
Message-ID: <4A0E0E7F.5020403@complang.org>

It's generally pretty easy to get a basic model working in an imperative 
language. The approach to take depends on the facilities of the target 
language. For example if goto is available then you can copy the C code 
directly. If not, then maybe base it on Java or Ruby.

But since Erlang is functional, it's probably harder (but not 
impossible) to implement the Ragel runtime semantics exactly as it 
exists for the other target languages.

I can't really say since I don't know Erlang. What we need is to find 
the intersection of all Ragel experts with all Erlang experts.

-Adrian

Torben Hoffmann wrote:
> Ragel seems pretty powerful, but it does not target Erlang which I use a 
> lot.
> 
> How easy would it be to add support for Erlang?
> 
> And in particular: would it be possible to generate both protocol 
> analysers as well as Erlang/OTP state machines 
> (http://www.erlang.org/doc/man/gen_fsm.html)?
> The reason for this is that the gen_fsm module in Erlang/OTP is so 
> powerful that you really want to write you code using that.
> 
> Thanks in advance,
> Torben
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From ich+lists at slashhome.de  Sat May 16 12:40:21 2009
From: ich+lists at slashhome.de (Jan Sporbeck)
Date: Sat, 16 May 2009 14:40:21 +0200
Subject: [ragel-users] Best practice: using ragel for bit-based
	state	machines on microcontroller?
In-Reply-To: <4A0CDD1F.6050505@complang.org>
References: <1240948143.28562.12.camel@my.sporbeck-family.de>
	<4A0CDD1F.6050505@complang.org>
Message-ID: <1242477621.5144.8.camel@my.sporbeck-family.de>

Adrian, thanks for pointing me to that and providing an example.
I'll look into that and use it to at last verify the code I have been
making up manually. (I ended up with 40 states superpositioning four
state machines..)

Just to make clear what I meant by packing the bits into a bigger
structure. (Yes, I know it doesn't provide the most compact code)

union {
  struct {
    unsigned char  s1:1;
    unsigned char  s2:1;
    unsigned char  s3:1;
    unsigned char  s4:1;
  } bits;
  unsigned char byte;
} bit_byte;

bit_byte.bits.s1 = 1;

PORTD = bit_byte.byte;


/Jan.

Am Donnerstag, den 14.05.2009, 23:10 -0400 schrieb Adrian Thurston:
> Ah, you can process at the bit level. See attached code. You'll probably 
> want to scrutinize the generated and compiled code to see if it's good 
> enough for your needs. One thing to note about using the getchar 
> directive is that the expression can be evaluated more than once per 
> value of p and if the compiler doesn't optimize that duplicate work away 
> then your code won't be optimal.
> 
> By the way, I'm not sure if I just figured this out now, or if somebody 
> told me about this technique a while back and I forgot. (Bob maybe?)
> 
> -Adrian
> 
> Jan Sporbeck wrote:
> > Hello there!
> > 
> > I'd like to use ragel to design the state machine for a microcontroller
> > project (avr atmega8535) written in C.
> > 
> > I think I understand how to use it for streams of char, int, etc. But
> > what's the best practice to use for bit based decisions?
> > 
> > I could use union..struct to pack all bits in one datatype and process
> > that. But I doubt that'll yield a performant implementation.
> > 
> > I read messages on this list that ragel is used for uC projects, but no
> > details how.
> > 
> > So any hints or example code to get me started is appreciated.
> > 
> > Thanks in advance,
> > /Jan.





From thurston at complang.org  Mon May 18 17:41:21 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 18 May 2009 13:41:21 -0400
Subject: [ragel-users] ragel 6.5 released
Message-ID: <4A119DC1.9040307@complang.org>

Hi,

I just released 6.5. This includes a couple bug fixes and a move to 
automake.

Cheers,
  Adrian



From flameeyes at gmail.com  Mon May 18 18:07:33 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Mon, 18 May 2009 20:07:33 +0200
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <4A119DC1.9040307@complang.org>
References: <4A119DC1.9040307@complang.org>
Message-ID: <1242670053.18705.19.camel@yamato>

Il giorno Mon, 18/05/2009 alle 13.41 -0400, Adrian Thurston ha scritto:
> 
> I just released 6.5. This includes a couple bug fixes and a move to 
> automake.

Is it wanted or a mistake that the vim syntax file is not in the
tarball? The CREDITS file too.

You should probably add ragel.vim to EXTRA_DATA for it to be
distributed, and CREDITS to doc_DATA (dist_ shouldn't be needed given
that both that and ChangeLog don't have generation rules).

And you can avoid having an empty NEWS file around by setting automake
into foreign mode.

Other than these notes, it seems okay on Gentoo Linux, testing
Gentoo/FreeBSD and then pushing the package down to the users.

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090518/f7197827/attachment-0001.sig>

From flameeyes at gmail.com  Mon May 18 18:11:46 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Mon, 18 May 2009 20:11:46 +0200
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <4A119DC1.9040307@complang.org>
References: <4A119DC1.9040307@complang.org>
Message-ID: <1242670311.18705.20.camel@yamato>

Il giorno Mon, 18/05/2009 alle 13.41 -0400, Adrian Thurston ha scritto:
> 
> I just released 6.5. This includes a couple bug fixes and a move to 
> automake.

Actually just noticed the automated tests log on g/fbsd (and Linux too)
fails because test/cppscan1.h is also missing in conversion.

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090518/9276ba14/attachment-0001.sig>

From thurston at complang.org  Mon May 18 18:21:41 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 18 May 2009 14:21:41 -0400
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <1242670053.18705.19.camel@yamato>
References: <4A119DC1.9040307@complang.org> <1242670053.18705.19.camel@yamato>
Message-ID: <4A11A735.5000703@complang.org>

Thanks, I just checked in some fixes for these issues. Seems I need to 
use dist_ to get CREDITS into the tarball. I'm not sure why.

Diego E. “Flameeyes” Pettenò wrote:
> Il giorno Mon, 18/05/2009 alle 13.41 -0400, Adrian Thurston ha scritto:
>> I just released 6.5. This includes a couple bug fixes and a move to 
>> automake.
> 
> Is it wanted or a mistake that the vim syntax file is not in the
> tarball? The CREDITS file too.
> 
> You should probably add ragel.vim to EXTRA_DATA for it to be
> distributed, and CREDITS to doc_DATA (dist_ shouldn't be needed given
> that both that and ChangeLog don't have generation rules).
> 
> And you can avoid having an empty NEWS file around by setting automake
> into foreign mode.
> 
> Other than these notes, it seems okay on Gentoo Linux, testing
> Gentoo/FreeBSD and then pushing the package down to the users.
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From walter.php at gmail.com  Mon May 18 18:47:50 2009
From: walter.php at gmail.com (Walter Cruz)
Date: Mon, 18 May 2009 15:47:50 -0300
Subject: [ragel-users] Article to be included in the links section of ragel
	page
Message-ID: <32cabba0905181147h87bba44q769d2b7458ecee52@mail.gmail.com>

http://artigos.waltercruz.com/a-hello-world-for-ruby-on-ragel

It's a translation from devchix article to pt_BR

Cheers.
-- 
[]'
- Walter
waltercruz.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090518/b28f965c/attachment-0001.html>

From flameeyes at gmail.com  Mon May 18 20:33:45 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Mon, 18 May 2009 22:33:45 +0200
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <4A11A735.5000703@complang.org>
References: <4A119DC1.9040307@complang.org>
	<1242670053.18705.19.camel@yamato>  <4A11A735.5000703@complang.org>
Message-ID: <1242678825.18705.35.camel@yamato>

Il giorno Mon, 18/05/2009 alle 14.21 -0400, Adrian Thurston ha scritto:
> Thanks, I just checked in some fixes for these issues. Seems I need
> to 
> use dist_ to get CREDITS into the tarball. I'm not sure why.

Baffles me too; by the way for these things, "make distcheck" would be a
huge help, if it wasn't that it cannot be used until kelbt implements
the -I switch.

By the way, since it's much easier to note last minute fixes needed from
the distribution point of view, I'd also suggest you sent a "heads up"
message the day before you intend to release, this way I (and other
maintainers, assuming they are in the list) can check the status of the
in-svn code (I usually can do Linux, (G/)FreeBSD and OpenSolaris).

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090518/b04c6839/attachment-0001.sig>

From adrian.thurston at esentire.com  Tue May 19 13:17:43 2009
From: adrian.thurston at esentire.com (Adrian Thurston)
Date: Tue, 19 May 2009 09:17:43 -0400
Subject: [ragel-users] Article to be included in the links section of
 ragel page
In-Reply-To: <32cabba0905181147h87bba44q769d2b7458ecee52@mail.gmail.com>
References: <32cabba0905181147h87bba44q769d2b7458ecee52@mail.gmail.com>
Message-ID: <4A12B177.7050809@esentire.com>

Thanks, added.

-Adrian

Walter Cruz wrote:
> http://artigos.waltercruz.com/a-hello-world-for-ruby-on-ragel
> 
> It's a translation from devchix article to pt_BR
> 
> Cheers.
> -- 
> []'
> - Walter
> waltercruz.com <http://waltercruz.com>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From flameeyes at gmail.com  Tue May 19 18:44:47 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Tue, 19 May 2009 20:44:47 +0200
Subject: [ragel-users] Build failures with GCC 4.4
Message-ID: <1242758687.18705.77.camel@yamato>

Seems like yesterday I tried with the “wrong” compiler (that is, the
compiler that is actually used rather than the one I should test with).

While GCC 4.3 compiles Ragel 6.5 fine, GCC 4.4 errors out, because the
string functions are now declared in such a way that they return “const
char *” when given “const char *” and “char *” when given “char *”.

I'm attaching the half good part of the patch I've applied to the Gentoo
ebuild, the other half is actually just a const_cast which is _nasty_;
the problem is at main.c:339; the eq variable is a pointer to
non-constant, and is indeed modified on line 342.

The solution would be, I guess, to use strncmp instead of setting eq to
\0. This way you never modify the string and you can use constant
strings.

HTH,

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gcc-4.4-part1.patch
Type: text/x-patch
Size: 392 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090519/a5df0d75/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090519/a5df0d75/attachment-0001.sig>

From flameeyes at gmail.com  Tue May 19 19:07:39 2009
From: flameeyes at gmail.com (Diego E. =?UTF-8?Q?=E2=80=9CFlameeyes=E2=80=9D_?= =?ISO-8859-1?Q?Petten=F2?=)
Date: Tue, 19 May 2009 21:07:39 +0200
Subject: [ragel-users] [PATCH] Fix tests under FreeBSD
Message-ID: <1242760059.18705.78.camel@yamato>

The attached patch fixes the tests under FreeBSD: malloc.h cannot be
used there, so it uses the correct include (also migrates them to the C
++ includes rather than the C ones).

HTH,

-- 
Diego Elio Pettenò — “Flameeyes”
http://blog.flameeyes.eu/

If you found a .asc file in this mail and know not what it is,
it's a GnuPG digital signature: http://www.gnupg.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-Fix-tests-on-FreeBSD-malloc.h-should-not-be-used-std.patch
Type: text/x-patch
Size: 755 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090519/9eab7fa2/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090519/9eab7fa2/attachment-0001.sig>

From robertle at semistable.com  Thu May 21 10:48:02 2009
From: robertle at semistable.com (Robert Lemmen)
Date: Thu, 21 May 2009 11:48:02 +0100
Subject: [ragel-users] ragel and encodings
Message-ID: <20090521104802.GA9072@semistable.com>

hi folks,

i am writing a machine for a text-based format, but it happens to come
in different encodings (e.g. iso-8859-1 or utf-8). so the question is
whether anyone has done somethign like that before and has a good idea
on how to do the encoding handling in a transparetn way and without
messing up the error locations?

thanks  robert

-- 
Robert Lemmen                               http://www.semistable.com 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090521/5a2d3751/attachment-0001.sig>

From wil.macaulay at gmail.com  Thu May 21 15:34:35 2009
From: wil.macaulay at gmail.com (Wil Macaulay)
Date: Thu, 21 May 2009 11:34:35 -0400
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521104802.GA9072@semistable.com>
References: <20090521104802.GA9072@semistable.com>
Message-ID: <c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>

Depends on your platform, but my approach to this problem (on the Mac)
was to detect
the encoding, and convert to UTF-8 before parsing. I also converted
line-endings (\r\n -> \n)
and ensured a newline at the end of the data at the same time.

wil

On Thu, May 21, 2009 at 6:48 AM, Robert Lemmen <robertle at semistable.com> wrote:
> hi folks,
>
> i am writing a machine for a text-based format, but it happens to come
> in different encodings (e.g. iso-8859-1 or utf-8). so the question is
> whether anyone has done somethign like that before and has a good idea
> on how to do the encoding handling in a transparetn way and without
> messing up the error locations?
>
> thanks  robert
>
> --
> Robert Lemmen                               http://www.semistable.com
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.9 (GNU/Linux)
>
> iD8DBQFKFTFiS6AOchRbaWYRArCrAKC5sXnTDqdUbgziK0hyOu2I5ef6WACdG0MR
> SSQ7nRuzJJFrXGkbQD+M5as=
> =1Zbb
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
>



From robertle at semistable.com  Thu May 21 17:48:20 2009
From: robertle at semistable.com (Robert Lemmen)
Date: Thu, 21 May 2009 18:48:20 +0100
Subject: [ragel-users] ragel and encodings
In-Reply-To: <c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
Message-ID: <20090521174820.GA18603@semistable.com>

On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
> Depends on your platform, but my approach to this problem (on the Mac)
> was to detect
> the encoding, and convert to UTF-8 before parsing. I also converted
> line-endings (\r\n -> \n)
> and ensured a newline at the end of the data at the same time.

how do you handle utf-8 in your ragel code? do you use a single-byte
alphtype and then handle the utf-8 sequences manually?

cu  robert

-- 
Robert Lemmen                               http://www.semistable.com 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20090521/c42b48d3/attachment-0001.sig>

From wil.macaulay at gmail.com  Thu May 21 18:51:31 2009
From: wil.macaulay at gmail.com (Wil Macaulay)
Date: Thu, 21 May 2009 14:51:31 -0400
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521174820.GA18603@semistable.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
Message-ID: <c713a0460905211151w637193e8u3b71c5c112753271@mail.gmail.com>

Sorry - I was inaccurate in my previous reply (should have refreshed
my memory first by looking at
the code).  On the Mac, the native encoding is Unicode  - that's the
conceptual basis for the NSString class. There are convenience
functions for accessing the underlying
character buffer as unichar - 16 bits unsigned.   So my first step is
to convert the raw file to an NSString
as Unicode, then access the character buffer and sent that to my
parser.  This requires my ragel file to use:

#UniChar type is 16 bits unsigned
	
	alphtype unsigned short;

Keywords all fall into the standard ASCII charset - anything that is
outside the ascii character set,
for me, is only interesting in the context of literals (quoted strings
and the like).  This means that I can
write my FSM in the normal fashion.

Hope this helps

wil



On Thu, May 21, 2009 at 1:48 PM, Robert Lemmen <robertle at semistable.com> wrote:
> On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
>> Depends on your platform, but my approach to this problem (on the Mac)
>> was to detect
>> the encoding, and convert to UTF-8 before parsing. I also converted
>> line-endings (\r\n -> \n)
>> and ensured a newline at the end of the data at the same time.
>
> how do you handle utf-8 in your ragel code? do you use a single-byte
> alphtype and then handle the utf-8 sequences manually?
>
> cu  robert
>
> --
> Robert Lemmen                               http://www.semistable.com
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.9 (GNU/Linux)
>
> iD8DBQFKFZPkS6AOchRbaWYRAjClAKCy0w4KQNUOxyeA/0l1RUWQyZQKmwCeM3o7
> /CvWvDgAdAJYGDy2VEUBkuo=
> =xX1k
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
>



From win at wincent.com  Thu May 21 18:59:02 2009
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 21 May 2009 20:59:02 +0200
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521174820.GA18603@semistable.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
Message-ID: <DE942C33-28D4-40A8-BAC6-BD1CE7B6C5E3@wincent.com>

El 21/5/2009, a las 19:48, Robert Lemmen escribió:

> On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
>> Depends on your platform, but my approach to this problem (on the  
>> Mac)
>> was to detect
>> the encoding, and convert to UTF-8 before parsing. I also converted
>> line-endings (\r\n -> \n)
>> and ensured a newline at the end of the data at the same time.
>
> how do you handle utf-8 in your ragel code? do you use a single-byte
> alphtype and then handle the utf-8 sequences manually?

I work with UTF-8 sequences manually in my Wikitext module. You can  
see the Ragel file here:

http://git.wincent.com/wikitext.git?a=blob;f=ext/wikitext_ragel.rl

Wincent




From win at wincent.com  Thu May 21 19:04:00 2009
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 21 May 2009 21:04:00 +0200
Subject: [ragel-users] ragel and encodings
In-Reply-To: <c713a0460905211151w637193e8u3b71c5c112753271@mail.gmail.com>
References: <20090521104802.GA9072@semistable.com>
	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
	<c713a0460905211151w637193e8u3b71c5c112753271@mail.gmail.com>
Message-ID: <5069AA2B-7792-4CC8-B9DB-0D0DB2567B2A@wincent.com>

El 21/5/2009, a las 20:51, Wil Macaulay escribió:

> Sorry - I was inaccurate in my previous reply (should have refreshed
> my memory first by looking at
> the code).  On the Mac, the native encoding is Unicode  - that's the
> conceptual basis for the NSString class. There are convenience
> functions for accessing the underlying
> character buffer as unichar - 16 bits unsigned.   So my first step is
> to convert the raw file to an NSString
> as Unicode, then access the character buffer and sent that to my
> parser.  This requires my ragel file to use:
>
> #UniChar type is 16 bits unsigned
> 	
> 	alphtype unsigned short;
>
> Keywords all fall into the standard ASCII charset - anything that is
> outside the ascii character set,
> for me, is only interesting in the context of literals (quoted strings
> and the like).  This means that I can
> write my FSM in the normal fashion.

As far as I know, the native encoding for NSString on Mac OS X is  
UTF-16, which means that the approach you describe will work for most  
input, but fall down for any code points which require surrogates (not  
all code points can be represented in 16 bits, so some of them require  
an additional 16 bits, forming a surrogate pair).

The approach would work fine if the input was in UCS-2 (which always  
fits in 16 bits, but which can't represent all Unicode code points).

So I guess it all depends on the kind of input the original poster is  
expecting. If it's user-supplied (untrusted input) and he wants to  
work with UTF-16 then he should probably gracefully handle surrogates,  
even if he isn't expecting them.

This Wikipedia article explains all this in a lot more detail:

http://en.wikipedia.org/wiki/UTF-16

Wincent




From thurston at complang.org  Sat May 23 02:45:12 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 22 May 2009 22:45:12 -0400
Subject: [ragel-users] ragel 6.5 released
In-Reply-To: <1242678825.18705.35.camel@yamato>
References: <4A119DC1.9040307@complang.org>	<1242670053.18705.19.camel@yamato>
	<4A11A735.5000703@complang.org> <1242678825.18705.35.camel@yamato>
Message-ID: <4A176338.2020102@complang.org>

Ah-ha, I didn't know about make distcheck. Thanks.

-Adrian

Diego E. “Flameeyes” Pettenò wrote:
> Il giorno Mon, 18/05/2009 alle 14.21 -0400, Adrian Thurston ha scritto:
>> Thanks, I just checked in some fixes for these issues. Seems I need
>> to 
>> use dist_ to get CREDITS into the tarball. I'm not sure why.
> 
> Baffles me too; by the way for these things, "make distcheck" would be a
> huge help, if it wasn't that it cannot be used until kelbt implements
> the -I switch.
> 
> By the way, since it's much easier to note last minute fixes needed from
> the distribution point of view, I'd also suggest you sent a "heads up"
> message the day before you intend to release, this way I (and other
> maintainers, assuming they are in the list) can check the status of the
> in-svn code (I usually can do Linux, (G/)FreeBSD and OpenSolaris).
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Sat May 23 02:46:17 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 22 May 2009 22:46:17 -0400
Subject: [ragel-users] Build failures with GCC 4.4
In-Reply-To: <1242758687.18705.77.camel@yamato>
References: <1242758687.18705.77.camel@yamato>
Message-ID: <4A176379.6000003@complang.org>

Applied, thanks. I also committed a fix for the problem at main.cpp:339.

-Adrian

Diego E. “Flameeyes” Pettenò wrote:
> Seems like yesterday I tried with the “wrong” compiler (that is, the
> compiler that is actually used rather than the one I should test with).
> 
> While GCC 4.3 compiles Ragel 6.5 fine, GCC 4.4 errors out, because the
> string functions are now declared in such a way that they return “const
> char *” when given “const char *” and “char *” when given “char *”.
> 
> I'm attaching the half good part of the patch I've applied to the Gentoo
> ebuild, the other half is actually just a const_cast which is _nasty_;
> the problem is at main.c:339; the eq variable is a pointer to
> non-constant, and is indeed modified on line 342.
> 
> The solution would be, I guess, to use strncmp instead of setting eq to
> \0. This way you never modify the string and you can use constant
> strings.
> 
> HTH,
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Sat May 23 02:46:39 2009
From: thurston at complang.org (Adrian Thurston)
Date: Fri, 22 May 2009 22:46:39 -0400
Subject: [ragel-users] [PATCH] Fix tests under FreeBSD
In-Reply-To: <1242760059.18705.78.camel@yamato>
References: <1242760059.18705.78.camel@yamato>
Message-ID: <4A17638F.60000@complang.org>

Thanks again, applied.

-Adrian

Diego E. “Flameeyes” Pettenò wrote:
> The attached patch fixes the tests under FreeBSD: malloc.h cannot be
> used there, so it uses the correct include (also migrates them to the C
> ++ includes rather than the C ones).
> 
> HTH,
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Tue May 26 02:47:14 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 25 May 2009 22:47:14 -0400
Subject: [ragel-users] ragel and encodings
In-Reply-To: <20090521174820.GA18603@semistable.com>
References: <20090521104802.GA9072@semistable.com>	<c713a0460905210834t787f2b9bn92151d59d30694b2@mail.gmail.com>
	<20090521174820.GA18603@semistable.com>
Message-ID: <4A1B5832.2000009@complang.org>

Some people express multibyte sequences directly in ragel with a char or 
unsigned char alphtype. There is contributed script in examples called 
unicode2ragel.rb that generates ragel definitions for ranges of unicode 
code points in utf8 or ucs4.

As a side note, it shoudl probably be in contrib. I'm going to move that 
now for anyone following the SVN directly.

-Adrian

Robert Lemmen wrote:
> On Thu, May 21, 2009 at 11:34:35AM -0400, Wil Macaulay wrote:
>> Depends on your platform, but my approach to this problem (on the Mac)
>> was to detect
>> the encoding, and convert to UTF-8 before parsing. I also converted
>> line-endings (\r\n -> \n)
>> and ensured a newline at the end of the data at the same time.
> 
> how do you handle utf-8 in your ragel code? do you use a single-byte
> alphtype and then handle the utf-8 sequences manually?
> 
> cu  robert
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



From thurston at complang.org  Tue May 26 02:54:37 2009
From: thurston at complang.org (Adrian Thurston)
Date: Mon, 25 May 2009 22:54:37 -0400
Subject: [ragel-users] examples/ and contrib/ not in tarball
Message-ID: <4A1B59ED.6030508@complang.org>

I just realized that the examples and contrib directories are not in the 
6.5 tarball. The need to explicitly include files with automake is 
something I'm adjusting to. For the time being please get these from the 
SVN if you need them.

http://svn.complang.org/ragel/trunk/examples/
http://svn.complang.org/ragel/trunk/contrib/

Adrian




