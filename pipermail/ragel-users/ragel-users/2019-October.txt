From rajeev at arable.com  Mon Oct 14 14:04:25 2019
From: rajeev at arable.com (Rajeev Bharol)
Date: Mon, 14 Oct 2019 11:04:25 -0700
Subject: [ragel-users] combining ragel and lemon
In-Reply-To: <372df856-36a9-cc2b-b5e3-ccb7a07dc6a9@esi-group.com>
References: <372df856-36a9-cc2b-b5e3-ccb7a07dc6a9@esi-group.com>
Message-ID: <CAG2Yen99-hqgjPoZ_E4AZYZaddXujbVOJp4FkDdUKEmk6CqDmg@mail.gmail.com>

Hi
I am using ragel 6.10 and it generates following unused variables that GCC
compiler complains about. Is it a bug.

static const int json_en_rest_array = 12;
static const int json_en_rest_object = 32;
static const int json_en_main = 1;

Thanks
Rajeev

On Fri, Aug 16, 2019 at 10:07 AM Mark Olesen <Mark.Olesen at esi-group.com>
wrote:

> I've use ragel in a few places already for parsing, but now I'm looking
> to port over a medium sized chunk of flex/bison. Perhaps going for a
> ragel/lemon combination.
>
> According to the lemon docs (https://www.hwaci.com/sw/lemon/lemon.html)
> the parser is the one calling the lexer. But this seems to be the same
> as ragel would like to be doing: match a pattern, call an action.
>
> The few examples of ragel/lemon that I've found (the classic calculator,
> or a json parser) seem to be handling this by running ragel as the
> scanner, and calling the lemon parser in its actions.
>
> Some other examples I've seen use re2c for the lexing part. This appears
> to fit better with what lemon expects, but there must be some way to lex
> a single token and return from ragel I suspect.
>
> I would be thankful for ideas.
>
> Cheers,
> /mark
> _______________________________________________
> ragel-users mailing list
> ragel-users at colm.net
> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191014/0f6a6577/attachment.html>

From rajeev at arable.com  Mon Oct 14 14:05:15 2019
From: rajeev at arable.com (Rajeev Bharol)
Date: Mon, 14 Oct 2019 11:05:15 -0700
Subject: [ragel-users] Unused variables generated by ragel 6.10
Message-ID: <CAG2Yen-WHh9yNM5Pekie61L7e+5XVgJDQ88Pi96V9BXKyJJK0g@mail.gmail.com>

Hello experts,

I am using ragel 6.10 and it generates following unused variables that GCC
compiler complains about. Is it a bug?

static const int json_en_rest_array = 12;
static const int json_en_rest_object = 32;
static const int json_en_main = 1;

Thanks
Rajeev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191014/52733518/attachment.html>

From thurston at colm.net  Tue Oct 15 07:11:11 2019
From: thurston at colm.net (Adrian Thurston)
Date: Tue, 15 Oct 2019 08:11:11 -0300
Subject: [ragel-users] combining ragel and lemon
In-Reply-To: <CAG2Yen99-hqgjPoZ_E4AZYZaddXujbVOJp4FkDdUKEmk6CqDmg@mail.gmail.com>
References: <372df856-36a9-cc2b-b5e3-ccb7a07dc6a9@esi-group.com>
 <CAG2Yen99-hqgjPoZ_E4AZYZaddXujbVOJp4FkDdUKEmk6CqDmg@mail.gmail.com>
Message-ID: <be9131618defcff3e0e386265bad1f3b@colm.net>

Hi Rajeev,

Those are entry points you can use during initialization to start 
parsing somewhere other than "main". You can also use them to jump to 
other parts from action code. To remove them from output use the noentry 
write option to the write data command:

write data noentry;

Adrian

On 2019-10-14 15:04, Rajeev Bharol wrote:
> Hi
> I am using ragel 6.10 and it generates following unused variables that
> GCC compiler complains about. Is it a bug.
> 
> static const int json_en_rest_array = 12;
> static const int json_en_rest_object = 32;
> static const int json_en_main = 1;
> 
> Thanks
> Rajeev
> 
> On Fri, Aug 16, 2019 at 10:07 AM Mark Olesen
> <Mark.Olesen at esi-group.com> wrote:
> 
>> I've use ragel in a few places already for parsing, but now I'm
>> looking
>> to port over a medium sized chunk of flex/bison. Perhaps going for a
>> 
>> ragel/lemon combination.
>> 
>> According to the lemon docs
>> (https://www.hwaci.com/sw/lemon/lemon.html)
>> the parser is the one calling the lexer. But this seems to be the
>> same
>> as ragel would like to be doing: match a pattern, call an action.
>> 
>> The few examples of ragel/lemon that I've found (the classic
>> calculator,
>> or a json parser) seem to be handling this by running ragel as the
>> scanner, and calling the lemon parser in its actions.
>> 
>> Some other examples I've seen use re2c for the lexing part. This
>> appears
>> to fit better with what lemon expects, but there must be some way to
>> lex
>> a single token and return from ragel I suspect.
>> 
>> I would be thankful for ideas.
>> 
>> Cheers,
>> /mark
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at colm.net
>> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
> _______________________________________________
> ragel-users mailing list
> ragel-users at colm.net
> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users

-- 
Dr. Adrian D. Thurston
Chief Scientist
Colm Networks
http://colm.net/


From rajeev at arable.com  Wed Oct 16 00:09:09 2019
From: rajeev at arable.com (Rajeev Bharol)
Date: Tue, 15 Oct 2019 21:09:09 -0700
Subject: [ragel-users] combining ragel and lemon
In-Reply-To: <be9131618defcff3e0e386265bad1f3b@colm.net>
References: <372df856-36a9-cc2b-b5e3-ccb7a07dc6a9@esi-group.com>
 <CAG2Yen99-hqgjPoZ_E4AZYZaddXujbVOJp4FkDdUKEmk6CqDmg@mail.gmail.com>
 <be9131618defcff3e0e386265bad1f3b@colm.net>
Message-ID: <CAG2Yen9rcihUEvQ=yTUE59fK=AFgVvQRSteNOYy7CV4tzuviWQ@mail.gmail.com>

Thanks Adrian,
With

*write data noentry;*Three variables ie., *json_en_main, json_en_rest_object,
json_en_rest_array* are not created anymore. However, the variables *json_error
and json_first_final* are still created, and hence GCC still complains. Any
remedy for these?


build/json.c:265:18: error: 'json_error' defined but not used
[-Werror=unused-const-variable=]
 static const int json_error = 0;
                  ^~~~~~~~~~
build/json.c:264:18: error: 'json_first_final' defined but not used
[-Werror=unused-const-variable=]
 static const int json_first_final = 61;
                  ^~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors



regards
Rajeev



On Tue, Oct 15, 2019 at 4:11 AM Adrian Thurston <thurston at colm.net> wrote:

> Hi Rajeev,
>
> Those are entry points you can use during initialization to start
> parsing somewhere other than "main". You can also use them to jump to
> other parts from action code. To remove them from output use the noentry
> write option to the write data command:
>
> write data noentry;
>
> Adrian
>
> On 2019-10-14 15:04, Rajeev Bharol wrote:
> > Hi
> > I am using ragel 6.10 and it generates following unused variables that
> > GCC compiler complains about. Is it a bug.
> >
> > static const int json_en_rest_array = 12;
> > static const int json_en_rest_object = 32;
> > static const int json_en_main = 1;
> >
> > Thanks
> > Rajeev
> >
> > On Fri, Aug 16, 2019 at 10:07 AM Mark Olesen
> > <Mark.Olesen at esi-group.com> wrote:
> >
> >> I've use ragel in a few places already for parsing, but now I'm
> >> looking
> >> to port over a medium sized chunk of flex/bison. Perhaps going for a
> >>
> >> ragel/lemon combination.
> >>
> >> According to the lemon docs
> >> (https://www.hwaci.com/sw/lemon/lemon.html)
> >> the parser is the one calling the lexer. But this seems to be the
> >> same
> >> as ragel would like to be doing: match a pattern, call an action.
> >>
> >> The few examples of ragel/lemon that I've found (the classic
> >> calculator,
> >> or a json parser) seem to be handling this by running ragel as the
> >> scanner, and calling the lemon parser in its actions.
> >>
> >> Some other examples I've seen use re2c for the lexing part. This
> >> appears
> >> to fit better with what lemon expects, but there must be some way to
> >> lex
> >> a single token and return from ragel I suspect.
> >>
> >> I would be thankful for ideas.
> >>
> >> Cheers,
> >> /mark
> >> _______________________________________________
> >> ragel-users mailing list
> >> ragel-users at colm.net
> >> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
> > _______________________________________________
> > ragel-users mailing list
> > ragel-users at colm.net
> > http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>
> --
> Dr. Adrian D. Thurston
> Chief Scientist
> Colm Networks
> http://colm.net/
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at colm.net
> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191015/d27644c0/attachment.html>

From rajeev at arable.com  Wed Oct 16 19:24:08 2019
From: rajeev at arable.com (Rajeev Bharol)
Date: Wed, 16 Oct 2019 16:24:08 -0700
Subject: [ragel-users] combining ragel and lemon
In-Reply-To: <CAG2Yen9rcihUEvQ=yTUE59fK=AFgVvQRSteNOYy7CV4tzuviWQ@mail.gmail.com>
References: <372df856-36a9-cc2b-b5e3-ccb7a07dc6a9@esi-group.com>
 <CAG2Yen99-hqgjPoZ_E4AZYZaddXujbVOJp4FkDdUKEmk6CqDmg@mail.gmail.com>
 <be9131618defcff3e0e386265bad1f3b@colm.net>
 <CAG2Yen9rcihUEvQ=yTUE59fK=AFgVvQRSteNOYy7CV4tzuviWQ@mail.gmail.com>
Message-ID: <CAG2Yen9Q40OLeVRi_s9LVdtmVma0bb60-ZLq3BtydNG5c_aFng@mail.gmail.com>

Hi Adrian
The following:
*%% write data noentry noerror nofinal;*

Fixes all my errors. Will it have any unintended consequences?

regards


On Tue, Oct 15, 2019 at 9:09 PM Rajeev Bharol <rajeev at arable.com> wrote:

> Thanks Adrian,
> With
>
> *write data noentry;*Three variables ie., *json_en_main, json_en_rest_object,
> json_en_rest_array* are not created anymore. However, the variables *json_error
> and json_first_final* are still created, and hence GCC still complains.
> Any remedy for these?
>
>
> build/json.c:265:18: error: 'json_error' defined but not used
> [-Werror=unused-const-variable=]
>  static const int json_error = 0;
>                   ^~~~~~~~~~
> build/json.c:264:18: error: 'json_first_final' defined but not used
> [-Werror=unused-const-variable=]
>  static const int json_first_final = 61;
>                   ^~~~~~~~~~~~~~~~
> cc1: all warnings being treated as errors
>
>
>
> regards
> Rajeev
>
>
>
> On Tue, Oct 15, 2019 at 4:11 AM Adrian Thurston <thurston at colm.net> wrote:
>
>> Hi Rajeev,
>>
>> Those are entry points you can use during initialization to start
>> parsing somewhere other than "main". You can also use them to jump to
>> other parts from action code. To remove them from output use the noentry
>> write option to the write data command:
>>
>> write data noentry;
>>
>> Adrian
>>
>> On 2019-10-14 15:04, Rajeev Bharol wrote:
>> > Hi
>> > I am using ragel 6.10 and it generates following unused variables that
>> > GCC compiler complains about. Is it a bug.
>> >
>> > static const int json_en_rest_array = 12;
>> > static const int json_en_rest_object = 32;
>> > static const int json_en_main = 1;
>> >
>> > Thanks
>> > Rajeev
>> >
>> > On Fri, Aug 16, 2019 at 10:07 AM Mark Olesen
>> > <Mark.Olesen at esi-group.com> wrote:
>> >
>> >> I've use ragel in a few places already for parsing, but now I'm
>> >> looking
>> >> to port over a medium sized chunk of flex/bison. Perhaps going for a
>> >>
>> >> ragel/lemon combination.
>> >>
>> >> According to the lemon docs
>> >> (https://www.hwaci.com/sw/lemon/lemon.html)
>> >> the parser is the one calling the lexer. But this seems to be the
>> >> same
>> >> as ragel would like to be doing: match a pattern, call an action.
>> >>
>> >> The few examples of ragel/lemon that I've found (the classic
>> >> calculator,
>> >> or a json parser) seem to be handling this by running ragel as the
>> >> scanner, and calling the lemon parser in its actions.
>> >>
>> >> Some other examples I've seen use re2c for the lexing part. This
>> >> appears
>> >> to fit better with what lemon expects, but there must be some way to
>> >> lex
>> >> a single token and return from ragel I suspect.
>> >>
>> >> I would be thankful for ideas.
>> >>
>> >> Cheers,
>> >> /mark
>> >> _______________________________________________
>> >> ragel-users mailing list
>> >> ragel-users at colm.net
>> >> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>> > _______________________________________________
>> > ragel-users mailing list
>> > ragel-users at colm.net
>> > http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>>
>> --
>> Dr. Adrian D. Thurston
>> Chief Scientist
>> Colm Networks
>> http://colm.net/
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at colm.net
>> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191016/d1319a2c/attachment.html>

From thurston at colm.net  Wed Oct 16 19:26:21 2019
From: thurston at colm.net (Adrian Thurston)
Date: Wed, 16 Oct 2019 23:26:21 +0000 (UTC)
Subject: [ragel-users] combining ragel and lemon
In-Reply-To: <CAG2Yen9Q40OLeVRi_s9LVdtmVma0bb60-ZLq3BtydNG5c_aFng@mail.gmail.com>
References: <372df856-36a9-cc2b-b5e3-ccb7a07dc6a9@esi-group.com>
 <CAG2Yen99-hqgjPoZ_E4AZYZaddXujbVOJp4FkDdUKEmk6CqDmg@mail.gmail.com>
 <be9131618defcff3e0e386265bad1f3b@colm.net>
 <CAG2Yen9rcihUEvQ=yTUE59fK=AFgVvQRSteNOYy7CV4tzuviWQ@mail.gmail.com>
 <CAG2Yen9Q40OLeVRi_s9LVdtmVma0bb60-ZLq3BtydNG5c_aFng@mail.gmail.com>
Message-ID: <F4B7059BF1E9EC31.802a8b77-80e6-4e18-be64-75a3ecf75db2@mail.outlook.com>

Just omits the static vars. So long as you are not checking final state status or if in the error state you can safely omit them.




Get Outlook for Android







On Wed, Oct 16, 2019 at 8:24 PM -0300, "Rajeev Bharol" <rajeev at arable.com> wrote:










Hi Adrian
The following:%% write data noentry noerror nofinal;

Fixes all my errors. Will it have any unintended consequences?
regards

On Tue, Oct 15, 2019 at 9:09 PM Rajeev Bharol <rajeev at arable.com> wrote:
Thanks Adrian,
With write data noentry;
Three variables ie., json_en_main, json_en_rest_object, json_en_rest_array are not created anymore. However, the variables json_error and json_first_final are still created, and hence GCC still complains. Any remedy for these?

build/json.c:265:18: error: 'json_error' defined but not used [-Werror=unused-const-variable=]
 static const int json_error = 0;
                  ^~~~~~~~~~
build/json.c:264:18: error: 'json_first_final' defined but not used [-Werror=unused-const-variable=]
 static const int json_first_final = 61;
                  ^~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors



regardsRajeev



On Tue, Oct 15, 2019 at 4:11 AM Adrian Thurston <thurston at colm.net> wrote:
Hi Rajeev,



Those are entry points you can use during initialization to start 

parsing somewhere other than "main". You can also use them to jump to 

other parts from action code. To remove them from output use the noentry 

write option to the write data command:



write data noentry;



Adrian



On 2019-10-14 15:04, Rajeev Bharol wrote:

> Hi

> I am using ragel 6.10 and it generates following unused variables that

> GCC compiler complains about. Is it a bug.

> 

> static const int json_en_rest_array = 12;

> static const int json_en_rest_object = 32;

> static const int json_en_main = 1;

> 

> Thanks

> Rajeev

> 

> On Fri, Aug 16, 2019 at 10:07 AM Mark Olesen

> <Mark.Olesen at esi-group.com> wrote:

> 

>> I've use ragel in a few places already for parsing, but now I'm

>> looking

>> to port over a medium sized chunk of flex/bison. Perhaps going for a

>> 

>> ragel/lemon combination.

>> 

>> According to the lemon docs

>> (https://www.hwaci.com/sw/lemon/lemon.html)

>> the parser is the one calling the lexer. But this seems to be the

>> same

>> as ragel would like to be doing: match a pattern, call an action.

>> 

>> The few examples of ragel/lemon that I've found (the classic

>> calculator,

>> or a json parser) seem to be handling this by running ragel as the

>> scanner, and calling the lemon parser in its actions.

>> 

>> Some other examples I've seen use re2c for the lexing part. This

>> appears

>> to fit better with what lemon expects, but there must be some way to

>> lex

>> a single token and return from ragel I suspect.

>> 

>> I would be thankful for ideas.

>> 

>> Cheers,

>> /mark

>> _______________________________________________

>> ragel-users mailing list

>> ragel-users at colm.net

>> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users

> _______________________________________________

> ragel-users mailing list

> ragel-users at colm.net

> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users



-- 

Dr. Adrian D. Thurston

Chief Scientist

Colm Networks

http://colm.net/



_______________________________________________

ragel-users mailing list

ragel-users at colm.net

http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users








-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191016/313de2d0/attachment.html>

From rajeev at arable.com  Wed Oct 16 20:20:07 2019
From: rajeev at arable.com (Rajeev Bharol)
Date: Wed, 16 Oct 2019 17:20:07 -0700
Subject: [ragel-users] combining ragel and lemon
In-Reply-To: <F4B7059BF1E9EC31.802a8b77-80e6-4e18-be64-75a3ecf75db2@mail.outlook.com>
References: <372df856-36a9-cc2b-b5e3-ccb7a07dc6a9@esi-group.com>
 <CAG2Yen99-hqgjPoZ_E4AZYZaddXujbVOJp4FkDdUKEmk6CqDmg@mail.gmail.com>
 <be9131618defcff3e0e386265bad1f3b@colm.net>
 <CAG2Yen9rcihUEvQ=yTUE59fK=AFgVvQRSteNOYy7CV4tzuviWQ@mail.gmail.com>
 <CAG2Yen9Q40OLeVRi_s9LVdtmVma0bb60-ZLq3BtydNG5c_aFng@mail.gmail.com>
 <F4B7059BF1E9EC31.802a8b77-80e6-4e18-be64-75a3ecf75db2@mail.outlook.com>
Message-ID: <CAG2Yen8=fvv30gt95ByjdZY4tZEE4O1xoeP_=01VTmtRnTdmRA@mail.gmail.com>

ThankYou!

On Wed, Oct 16, 2019 at 4:26 PM Adrian Thurston <thurston at colm.net> wrote:

> Just omits the static vars. So long as you are not checking final state
> status or if in the error state you can safely omit them.
>
> Get Outlook for Android <https://aka.ms/ghei36>
>
>
>
>
> On Wed, Oct 16, 2019 at 8:24 PM -0300, "Rajeev Bharol" <rajeev at arable.com>
> wrote:
>
> Hi Adrian
>> The following:
>> *%% write data noentry noerror nofinal;*
>>
>> Fixes all my errors. Will it have any unintended consequences?
>>
>> regards
>>
>>
>> On Tue, Oct 15, 2019 at 9:09 PM Rajeev Bharol <rajeev at arable.com> wrote:
>>
>>> Thanks Adrian,
>>> With
>>>
>>> *write data noentry;*Three variables ie., *json_en_main, json_en_rest_object,
>>> json_en_rest_array* are not created anymore. However, the variables *json_error
>>> and json_first_final* are still created, and hence GCC still complains.
>>> Any remedy for these?
>>>
>>>
>>> build/json.c:265:18: error: 'json_error' defined but not used
>>> [-Werror=unused-const-variable=]
>>>  static const int json_error = 0;
>>>                   ^~~~~~~~~~
>>> build/json.c:264:18: error: 'json_first_final' defined but not used
>>> [-Werror=unused-const-variable=]
>>>  static const int json_first_final = 61;
>>>                   ^~~~~~~~~~~~~~~~
>>> cc1: all warnings being treated as errors
>>>
>>>
>>>
>>> regards
>>> Rajeev
>>>
>>>
>>>
>>> On Tue, Oct 15, 2019 at 4:11 AM Adrian Thurston <thurston at colm.net>
>>> wrote:
>>>
>>>> Hi Rajeev,
>>>>
>>>> Those are entry points you can use during initialization to start
>>>> parsing somewhere other than "main". You can also use them to jump to
>>>> other parts from action code. To remove them from output use the
>>>> noentry
>>>> write option to the write data command:
>>>>
>>>> write data noentry;
>>>>
>>>> Adrian
>>>>
>>>> On 2019-10-14 15:04, Rajeev Bharol wrote:
>>>> > Hi
>>>> > I am using ragel 6.10 and it generates following unused variables that
>>>> > GCC compiler complains about. Is it a bug.
>>>> >
>>>> > static const int json_en_rest_array = 12;
>>>> > static const int json_en_rest_object = 32;
>>>> > static const int json_en_main = 1;
>>>> >
>>>> > Thanks
>>>> > Rajeev
>>>> >
>>>> > On Fri, Aug 16, 2019 at 10:07 AM Mark Olesen
>>>> > <Mark.Olesen at esi-group.com> wrote:
>>>> >
>>>> >> I've use ragel in a few places already for parsing, but now I'm
>>>> >> looking
>>>> >> to port over a medium sized chunk of flex/bison. Perhaps going for a
>>>> >>
>>>> >> ragel/lemon combination.
>>>> >>
>>>> >> According to the lemon docs
>>>> >> (https://www.hwaci.com/sw/lemon/lemon.html)
>>>> >> the parser is the one calling the lexer. But this seems to be the
>>>> >> same
>>>> >> as ragel would like to be doing: match a pattern, call an action.
>>>> >>
>>>> >> The few examples of ragel/lemon that I've found (the classic
>>>> >> calculator,
>>>> >> or a json parser) seem to be handling this by running ragel as the
>>>> >> scanner, and calling the lemon parser in its actions.
>>>> >>
>>>> >> Some other examples I've seen use re2c for the lexing part. This
>>>> >> appears
>>>> >> to fit better with what lemon expects, but there must be some way to
>>>> >> lex
>>>> >> a single token and return from ragel I suspect.
>>>> >>
>>>> >> I would be thankful for ideas.
>>>> >>
>>>> >> Cheers,
>>>> >> /mark
>>>> >> _______________________________________________
>>>> >> ragel-users mailing list
>>>> >> ragel-users at colm.net
>>>> >> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>>>> > _______________________________________________
>>>> > ragel-users mailing list
>>>> > ragel-users at colm.net
>>>> > http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>>>>
>>>> --
>>>> Dr. Adrian D. Thurston
>>>> Chief Scientist
>>>> Colm Networks
>>>> http://colm.net/
>>>>
>>>> _______________________________________________
>>>> ragel-users mailing list
>>>> ragel-users at colm.net
>>>> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>>>>
>>> _______________________________________________
> ragel-users mailing list
> ragel-users at colm.net
> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191016/3feb6824/attachment-0001.html>

From rajeev at arable.com  Fri Oct 25 23:15:51 2019
From: rajeev at arable.com (Rajeev Bharol)
Date: Fri, 25 Oct 2019 20:15:51 -0700
Subject: [ragel-users] C file generated by Ragel is too big
Message-ID: <CAG2Yen8qc=HEqLj6wePUoU3y4Su8S-9EDJgB9eEHV2PkyVmtNQ@mail.gmail.com>

Hi Experts,
I was supposed to get a smaller code footprint using Ragel parser. However,
my C file generated is humongous.

For 36k of Ragel file, I get 467K of C file!

What could I be doing wrong?

regards
Rajeev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191025/199608f4/attachment.html>

From thurston at colm.net  Sat Oct 26 06:24:10 2019
From: thurston at colm.net (Adrian Thurston)
Date: Sat, 26 Oct 2019 10:24:10 +0000 (UTC)
Subject: [ragel-users] C file generated by Ragel is too big
In-Reply-To: <CAG2Yen8qc=HEqLj6wePUoU3y4Su8S-9EDJgB9eEHV2PkyVmtNQ@mail.gmail.com>
References: <CAG2Yen8qc=HEqLj6wePUoU3y4Su8S-9EDJgB9eEHV2PkyVmtNQ@mail.gmail.com>
Message-ID: <F4B7059BF1E9EC31.e515b6a2-b6e4-4f59-ad0d-f760bcb5d5df@mail.outlook.com>

Really depends on the grammar. Could be a blow-up. Are you able to share it publicly? You can also send it privately to me if you need to. 




Get Outlook for Android







On Sat, Oct 26, 2019 at 12:16 AM -0300, "Rajeev Bharol" <rajeev at arable.com> wrote:










Hi Experts,I was supposed to get a smaller code footprint using Ragel parser. However, my C file generated is humongous.  

For 36k of Ragel file, I get 467K of C file!
What could I be doing wrong?
regardsRajeev





-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191026/a924dd31/attachment.html>

From rajeev at arable.com  Mon Oct 28 17:04:05 2019
From: rajeev at arable.com (Rajeev Bharol)
Date: Mon, 28 Oct 2019 14:04:05 -0700
Subject: [ragel-users] C file generated by Ragel is too big
In-Reply-To: <F4B7059BF1E9EC31.e515b6a2-b6e4-4f59-ad0d-f760bcb5d5df@mail.outlook.com>
References: <CAG2Yen8qc=HEqLj6wePUoU3y4Su8S-9EDJgB9eEHV2PkyVmtNQ@mail.gmail.com>
 <F4B7059BF1E9EC31.e515b6a2-b6e4-4f59-ad0d-f760bcb5d5df@mail.outlook.com>
Message-ID: <CAG2Yen-gWMP=ehkyKNjK8sDrumFvHAmmfRiciA6MaZyW0Q9d6w@mail.gmail.com>

Thanks Adrian,
I just sent you my file.

regards

On Sat, Oct 26, 2019 at 3:24 AM Adrian Thurston <thurston at colm.net> wrote:

> Really depends on the grammar. Could be a blow-up. Are you able to share
> it publicly? You can also send it privately to me if you need to.
>
> Get Outlook for Android <https://aka.ms/ghei36>
>
>
>
>
> On Sat, Oct 26, 2019 at 12:16 AM -0300, "Rajeev Bharol" <rajeev at arable.com
> > wrote:
>
> Hi Experts,
>> I was supposed to get a smaller code footprint using Ragel parser.
>> However, my C file generated is humongous.
>>
>> For 36k of Ragel file, I get 467K of C file!
>>
>> What could I be doing wrong?
>>
>> regards
>> Rajeev
>>
> _______________________________________________
> ragel-users mailing list
> ragel-users at colm.net
> http://www.colm.net/cgi-bin/mailman/listinfo/ragel-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20191028/abaae9c5/attachment.html>

