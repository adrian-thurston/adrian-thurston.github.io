From silverdirk-rgl at silverdirk.com  Wed Oct 19 04:06:39 2011
From: silverdirk-rgl at silverdirk.com (M Conrad)
Date: Wed, 19 Oct 2011 00:06:39 -0400
Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
Message-ID: <op.v3kyx4llah38gt@osangar.int.intellitree.com>

Hi, I am wondering if there is a good LALR(1) parser generator for use  
with Ragel that has as nice of a host-language interface as Ragel does.

I found Lemon, but it generates almost unreadable code, and half the time  
it tells me about errors in my grammar with meaningless assertion errors.   
Also, I really like the way Ragel can be inlined with the host language,  
and would like to find a parser-generator to match.

If one doesn't exist, I am considering writing one.  (I've written the  
LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I  
don't want to waste effort if it is redundant.

Can anyone point me to other LR parsers that you like?

Thanks,
-Mike

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From jesusfreke at jesusfreke.com  Wed Oct 19 21:42:58 2011
From: jesusfreke at jesusfreke.com (JesusFreke)
Date: Wed, 19 Oct 2011 14:42:58 -0700
Subject: [ragel-users] ragel-users Digest, Vol 37, Issue 1
In-Reply-To: <mailman.1.1319050802.22596.ragel-users@complang.org>
References: <mailman.1.1319050802.22596.ragel-users@complang.org>
Message-ID: <CACUovh1ODkJpYGx=L7n0gWZLOw56rgqVNLsjvRZG==TMkRVYqA@mail.gmail.com>

I'm not sure if it meets your criteria, but I've used ANTLR and found it to
be very good. One of the nice things about it is that it includes an "IDE"
type environment where you can step through the parser on a token-by-token
basis, see the rules it is picking and the parse tree it is generating. It
was an invaluable tool while developing my parser in ANTLR. I only wish I
had known about ragel at the time. I had wrote my lexer initially with
ANTLR, and then I rewrote it in jflex for better performance. Now that I've
used ragel a bit, I may end up doing one more rewrite :)



On Wed, Oct 19, 2011 at 12:00 PM, <ragel-users-request at complang.org> wrote:

> Send ragel-users mailing list submissions to
>        ragel-users at complang.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://www.complang.org/mailman/listinfo/ragel-users
> or, via email, send a message with subject or body 'help' to
>        ragel-users-request at complang.org
>
> You can reach the person managing the list at
>        ragel-users-owner at complang.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of ragel-users digest..."
>
>
> Today's Topics:
>
>   1. LALR(1) companion tool for Ragel scanner (M Conrad)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Wed, 19 Oct 2011 00:06:39 -0400
> From: "M Conrad" <silverdirk-rgl at silverdirk.com>
> To: ragel-users at complang.org
> Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
> Message-ID: <op.v3kyx4llah38gt at osangar.int.intellitree.com>
> Content-Type: text/plain; charset=utf-8; format=flowed; delsp=yes
>
> Hi, I am wondering if there is a good LALR(1) parser generator for use
> with Ragel that has as nice of a host-language interface as Ragel does.
>
> I found Lemon, but it generates almost unreadable code, and half the time
> it tells me about errors in my grammar with meaningless assertion errors.
> Also, I really like the way Ragel can be inlined with the host language,
> and would like to find a parser-generator to match.
>
> If one doesn't exist, I am considering writing one.  (I've written the
> LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I
> don't want to waste effort if it is redundant.
>
> Can anyone point me to other LR parsers that you like?
>
> Thanks,
> -Mike
>
>
>
> ------------------------------
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
> End of ragel-users Digest, Vol 37, Issue 1
> ******************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20111019/2d7e9f6e/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From silverdirk-rgl at silverdirk.com  Thu Oct 20 07:07:37 2011
From: silverdirk-rgl at silverdirk.com (M Conrad)
Date: Thu, 20 Oct 2011 03:07:37 -0400
Subject: [ragel-users] ragel-users Digest, Vol 37, Issue 1
In-Reply-To: <CACUovh1ODkJpYGx=L7n0gWZLOw56rgqVNLsjvRZG==TMkRVYqA@mail.gmail.com>
References: <mailman.1.1319050802.22596.ragel-users@complang.org>
	<CACUovh1ODkJpYGx=L7n0gWZLOw56rgqVNLsjvRZG==TMkRVYqA@mail.gmail.com>
Message-ID: <op.v3m12zufah38gt@osangar.int.intellitree.com>

I looked at ANTLR a bit, but it seemed like their approach was to add lots  
of "magic" to an LL parser.

I'm rather fond of the LR algorithms, and while it's harder to make  
friendly error messages with them, the good old "unexpected $token at  
$line,$col" isn't really so bad.

On Wed, 19 Oct 2011 17:42:58 -0400, JesusFreke <jesusfreke at jesusfreke.com>  
wrote:

> I'm not sure if it meets your criteria, but I've used ANTLR and found it  
> to
> be very good. One of the nice things about it is that it includes an  
> "IDE"
> type environment where you can step through the parser on a  
> token-by-token
> basis, see the rules it is picking and the parse tree it is generating.  
> It
> was an invaluable tool while developing my parser in ANTLR. I only wish I
> had known about ragel at the time. I had wrote my lexer initially with
> ANTLR, and then I rewrote it in jflex for better performance. Now that  
> I've
> used ragel a bit, I may end up doing one more rewrite :)
>
>
>
> On Wed, Oct 19, 2011 at 12:00 PM, <ragel-users-request at complang.org>  
> wrote:
>
>> Send ragel-users mailing list submissions to
>>        ragel-users at complang.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>        http://www.complang.org/mailman/listinfo/ragel-users
>> or, via email, send a message with subject or body 'help' to
>>        ragel-users-request at complang.org
>>
>> You can reach the person managing the list at
>>        ragel-users-owner at complang.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of ragel-users digest..."
>>
>>
>> Today's Topics:
>>
>>   1. LALR(1) companion tool for Ragel scanner (M Conrad)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Wed, 19 Oct 2011 00:06:39 -0400
>> From: "M Conrad" <silverdirk-rgl at silverdirk.com>
>> To: ragel-users at complang.org
>> Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
>> Message-ID: <op.v3kyx4llah38gt at osangar.int.intellitree.com>
>> Content-Type: text/plain; charset=utf-8; format=flowed; delsp=yes
>>
>> Hi, I am wondering if there is a good LALR(1) parser generator for use
>> with Ragel that has as nice of a host-language interface as Ragel does.
>>
>> I found Lemon, but it generates almost unreadable code, and half the  
>> time
>> it tells me about errors in my grammar with meaningless assertion  
>> errors.
>> Also, I really like the way Ragel can be inlined with the host language,
>> and would like to find a parser-generator to match.
>>
>> If one doesn't exist, I am considering writing one.  (I've written the
>> LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I
>> don't want to waste effort if it is redundant.
>>
>> Can anyone point me to other LR parsers that you like?
>>
>> Thanks,
>> -Mike
>>
>>
>>
>> ------------------------------
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>> End of ragel-users Digest, Vol 37, Issue 1
>> ******************************************
>>


-- 
Using Opera's revolutionary email client: http://www.opera.com/mail/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From petru.severin at gmail.com  Fri Oct 21 02:34:01 2011
From: petru.severin at gmail.com (Petru Severin)
Date: Fri, 21 Oct 2011 05:34:01 +0300
Subject: [ragel-users] Ragel compilation hangs
Message-ID: <4EA0DA19.20702@gmail.com>

Hi,

I am trying to create a Ragel parser for SVG Path syntax. I lifted the 
grammar from SVG specification and adapted it to be compatible with 
Ragel. When I try to compile it, Ragel just hangs instead of finishing 
immediately like it usually does. I understand that the machine might 
need adjustments but it's difficult to guess what's wrong.

I'd like to get an advice from more experienced Ragel users.

Here's the machine for SVG path:

%%{
	machine PathParser;

	wsp = (" " | 9 | 13 | 10);
	digit_sequence = digit+;
	sign = "+" | "-";
	exponent = ( "e" | "E" ) sign? digit_sequence;
	fractional_constant = digit_sequence? "." digit_sequence | 
digit_sequence ".";
	floating_point_constant = fractional_constant exponent?  | 
digit_sequence exponent;
	integer_constant = digit_sequence;
	comma = ",";
	comma_wsp = (wsp+ comma? wsp*) | (comma wsp*);
	flag = "0" | "1";
	number = sign? integer_constant | sign? floating_point_constant;
	nonnegative_number = integer_constant | floating_point_constant;
	coordinate = number;
	coordinate_pair = coordinate comma_wsp? coordinate;
	elliptical_arc_argument = nonnegative_number comma_wsp? 
nonnegative_number comma_wsp?  number comma_wsp flag comma_wsp? flag 
comma_wsp? coordinate_pair;
	elliptical_arc_argument_sequence = elliptical_arc_argument (comma_wsp? 
elliptical_arc_argument)*;
	elliptical_arc = ( "A" | "a" ) wsp* elliptical_arc_argument_sequence;
	smooth_quadratic_bezier_curveto_argument_sequence = coordinate_pair 
(comma_wsp? coordinate_pair)*;
	smooth_quadratic_bezier_curveto = ( "T" | "t" ) wsp* 
smooth_quadratic_bezier_curveto_argument_sequence;
	quadratic_bezier_curveto_argument = coordinate_pair comma_wsp? 
coordinate_pair;
	quadratic_bezier_curveto_argument_sequence = 
quadratic_bezier_curveto_argument (comma_wsp? 
quadratic_bezier_curveto_argument)*;
	quadratic_bezier_curveto = ( "Q" | "q" ) wsp* 
quadratic_bezier_curveto_argument_sequence;
	smooth_curveto_argument = coordinate_pair comma_wsp? coordinate_pair;
	smooth_curveto_argument_sequence = smooth_curveto_argument (comma_wsp? 
smooth_curveto_argument)*;
	smooth_curveto = ( "S" | "s" ) wsp* smooth_curveto_argument_sequence;
	curveto_argument = coordinate_pair comma_wsp? coordinate_pair 
comma_wsp? coordinate_pair;
	curveto_argument_sequence = curveto_argument (comma_wsp? 
curveto_argument)*;
	curveto = ( "C" | "c" ) wsp* curveto_argument_sequence;
	vertical_lineto_argument_sequence = coordinate (comma_wsp? coordinate)*;
	vertical_lineto = ( "V" | "v" ) wsp* vertical_lineto_argument_sequence;
	horizontal_lineto_argument_sequence = coordinate (comma_wsp? coordinate)*;
	horizontal_lineto = ( "H" | "h" ) wsp* horizontal_lineto_argument_sequence;
	lineto_argument_sequence = coordinate_pair (comma_wsp? coordinate_pair)*;
	lineto = ( "L" | "l" ) wsp* lineto_argument_sequence;
	closepath = ("Z" | "z");
	moveto_argument_sequence = coordinate_pair | coordinate_pair comma_wsp? 
lineto_argument_sequence;
	moveto = ( "M" | "m" ) wsp* moveto_argument_sequence;
	drawto_command = closepath | lineto | horizontal_lineto | 
vertical_lineto | curveto | smooth_curveto | quadratic_bezier_curveto | 
smooth_quadratic_bezier_curveto | elliptical_arc;
	drawto_commands = drawto_command (wsp* drawto_command)*;
	moveto_drawto_command_group = moveto wsp* drawto_commands?;
	moveto_drawto_command_groups = moveto_drawto_command_group (wsp* 
moveto_drawto_command_group)*;
	svg_path := wsp* moveto_drawto_command_groups? wsp*;
}%%

package com.wireframesketcher.ui.svg.parser;

class PathParser
{	
%% write data;

	public void parse(String string)
	{
		int cs;
		int p;
		int pe;
		int eof;
		char[] data;
		int ts;
		int act;
		int te;
	
%% write init;

		data = string.toCharArray();
		p = 0;
		pe = string.length();
		eof = pe;
		
%% write exec;
	}
}

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From socketpair at gmail.com  Sat Oct 22 18:59:40 2011
From: socketpair at gmail.com (=?UTF-8?B?0JzQsNGA0Log0JrQvtGA0LXQvdCx0LXRgNCz?=)
Date: Sun, 23 Oct 2011 00:59:40 +0600
Subject: [ragel-users] [bug][ragel 6.6]
Message-ID: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>

source attached.

ragel -L -C -G2 -e -p  smtp.rl


----------------------
smtp.c:167:2: error: label ‘_again’ used but not defined
---------------------

$ ragel -v
Ragel State Machine Compiler version 6.6 Dec 2009
Copyright (c) 2001-2009 by Adrian Thurston
-------------------------------------

Also, -T0 compiles OK, but does not work as expected. How to debug ?
graphviz diagrams says that everything is fine.

-- 
Segmentation fault
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smtp.rl
Type: application/octet-stream
Size: 772 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel/attachments/20111023/2c959c1f/attachment.obj>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Mon Oct 24 03:15:17 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sun, 23 Oct 2011 20:15:17 -0700
Subject: [ragel-users] [bug][ragel 6.6]
In-Reply-To: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>
References: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>
Message-ID: <4EA4D845.8050307@complang.org>

Hi, could you please verify with 6.7? If the bug is still present can 
you please send me (not necessarily the list) a ragel program that 
exibits the error?

Thanks,
  Adrian

On 11-10-22 11:59 AM, Марк Коренберг wrote:
> source attached.
>
> ragel -L -C -G2 -e -p  smtp.rl
>
>
> ----------------------
> smtp.c:167:2: error: label ‘_again’ used but not defined
> ---------------------
>
> $ ragel -v
> Ragel State Machine Compiler version 6.6 Dec 2009
> Copyright (c) 2001-2009 by Adrian Thurston
> -------------------------------------
>
> Also, -T0 compiles OK, but does not work as expected. How to debug ?
> graphviz diagrams says that everything is fine.
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From socketpair at gmail.com  Mon Oct 24 03:52:12 2011
From: socketpair at gmail.com (=?UTF-8?B?0JzQsNGA0Log0JrQvtGA0LXQvdCx0LXRgNCz?=)
Date: Mon, 24 Oct 2011 09:52:12 +0600
Subject: [ragel-users] [bug][ragel 6.6]
In-Reply-To: <4EA4D845.8050307@complang.org>
References: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>
	<4EA4D845.8050307@complang.org>
Message-ID: <CAEmTpZHAmOj8kx8Qg=aLZy8EK8tTEYodu05Knf4Hahpx1EJNWA@mail.gmail.com>

2011/10/24 Adrian Thurston <thurston at complang.org>:
> Hi, could you please verify with 6.7? If the bug is still present can you
> please send me (not necessarily the list) a ragel program that exibits the
> error?

The problem still exists in ragel 6.7
The program is attached to letter. If attachements does not work, I
paste same program in the body:
################################
#include <stdio.h>
#include <string.h>

%%{
machine defs;

CRLF = "\r\n";
SP = " ";
TAB = '\x09';
textstring = (TAB|SP|[!-~])+;

Domain = [a-z.]+;


domain_instance := Domain %{ printf("%d: domain complete\n", __LINE__); fret;};

action parse_domain {
    printf("%d:, calling parse_domain  {%s}\n", __LINE__, p);
    fcall domain_instance;
}

Greeting := "220 " %parse_domain (SP textstring)? CRLF;
}%%

int main()
{
    const char * const text= "220 qwe.ru text qweqweqweqwe\r\n";
    int cs;
    const char* p=text;
    const char* pe = text + strlen(text);
    const char* eof = pe;

    int top;
    int stack[100];

    %% write data;
    %% write init;
    %% write exec;
    return 0;
}
################################

>
> Thanks,
>  Adrian
>
> On 11-10-22 11:59 AM, Марк Коренберг wrote:
>>
>> source attached.
>>
>> ragel -L -C -G2 -e -p  smtp.rl
>>
>>
>> ----------------------
>> smtp.c:167:2: error: label ‘_again’ used but not defined
>> ---------------------
>>
>> $ ragel -v
>> Ragel State Machine Compiler version 6.6 Dec 2009
>> Copyright (c) 2001-2009 by Adrian Thurston
>> -------------------------------------
>>
>> Also, -T0 compiles OK, but does not work as expected. How to debug ?
>> graphviz diagrams says that everything is fine.
>>
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



-- 
Segmentation fault
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smtp.rl
Type: application/octet-stream
Size: 772 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel/attachments/20111024/3b9076d6/attachment.obj>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From ragel-user at jgoettgens.de  Tue Oct 25 14:35:03 2011
From: ragel-user at jgoettgens.de (ragel-user at jgoettgens.de)
Date: Tue, 25 Oct 2011 16:35:03 +0200
Subject: [ragel-users] Cygwin cross compilation
Message-ID: <AC0235FBB2CB43FDBDD91597AC350FD0@localdomain>

I just wanted to point out that it is now possible (probably was for some time) to build ragel binaries using cygwin that don’t depend on the cygwin runtime environment.

E.g. to build 64-bit binaries simply call configure with

./configure --host=x86_64-w64-mingw32

If ragel gets called from outside the cygwin environment one should copy libgcc_s_sjlj-1.dll and libstdc++-6.dll from the appropriate sys-root directory into the directory of ragel (or elsewhere where the runtime system can find them). Of course, the cross compilation packages should be installed on the system.

I’ll update this thread in case I find major problems during testing (using txl, etc).

jg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel/attachments/20111025/de071a93/attachment.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Wed Oct 26 19:10:47 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 26 Oct 2011 12:10:47 -0700
Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
In-Reply-To: <op.v3kyx4llah38gt@osangar.int.intellitree.com>
References: <op.v3kyx4llah38gt@osangar.int.intellitree.com>
Message-ID: <4EA85B37.10504@complang.org>

My own parser generator, kelbt, has a host language interface similar to 
that of ragel. It is not 1.0 tough and there are no docs yet. It is 
oriented around research problems. Eg it is backtracking bottom up and 
as such is in a less common class of parser generators.

That said, it is in debian and I use it for several of my own projects, 
including ragel.

On 11-10-18 09:06 PM, M Conrad wrote:
> Hi, I am wondering if there is a good LALR(1) parser generator for use
> with Ragel that has as nice of a host-language interface as Ragel does.
>
> I found Lemon, but it generates almost unreadable code, and half the
> time it tells me about errors in my grammar with meaningless assertion
> errors. Also, I really like the way Ragel can be inlined with the host
> language, and would like to find a parser-generator to match.
>
> If one doesn't exist, I am considering writing one. (I've written the
> LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I
> don't want to waste effort if it is redundant.
>
> Can anyone point me to other LR parsers that you like?
>
> Thanks,
> -Mike
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From silverdirk-rgl at silverdirk.com  Wed Oct 19 04:06:39 2011
From: silverdirk-rgl at silverdirk.com (M Conrad)
Date: Wed, 19 Oct 2011 00:06:39 -0400
Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
Message-ID: <op.v3kyx4llah38gt@osangar.int.intellitree.com>

Hi, I am wondering if there is a good LALR(1) parser generator for use  
with Ragel that has as nice of a host-language interface as Ragel does.

I found Lemon, but it generates almost unreadable code, and half the time  
it tells me about errors in my grammar with meaningless assertion errors.   
Also, I really like the way Ragel can be inlined with the host language,  
and would like to find a parser-generator to match.

If one doesn't exist, I am considering writing one.  (I've written the  
LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I  
don't want to waste effort if it is redundant.

Can anyone point me to other LR parsers that you like?

Thanks,
-Mike

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From jesusfreke at jesusfreke.com  Wed Oct 19 21:42:58 2011
From: jesusfreke at jesusfreke.com (JesusFreke)
Date: Wed, 19 Oct 2011 14:42:58 -0700
Subject: [ragel-users] ragel-users Digest, Vol 37, Issue 1
In-Reply-To: <mailman.1.1319050802.22596.ragel-users@complang.org>
References: <mailman.1.1319050802.22596.ragel-users@complang.org>
Message-ID: <CACUovh1ODkJpYGx=L7n0gWZLOw56rgqVNLsjvRZG==TMkRVYqA@mail.gmail.com>

I'm not sure if it meets your criteria, but I've used ANTLR and found it to
be very good. One of the nice things about it is that it includes an "IDE"
type environment where you can step through the parser on a token-by-token
basis, see the rules it is picking and the parse tree it is generating. It
was an invaluable tool while developing my parser in ANTLR. I only wish I
had known about ragel at the time. I had wrote my lexer initially with
ANTLR, and then I rewrote it in jflex for better performance. Now that I've
used ragel a bit, I may end up doing one more rewrite :)



On Wed, Oct 19, 2011 at 12:00 PM, <ragel-users-request at complang.org> wrote:

> Send ragel-users mailing list submissions to
>        ragel-users at complang.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://www.complang.org/mailman/listinfo/ragel-users
> or, via email, send a message with subject or body 'help' to
>        ragel-users-request at complang.org
>
> You can reach the person managing the list at
>        ragel-users-owner at complang.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of ragel-users digest..."
>
>
> Today's Topics:
>
>   1. LALR(1) companion tool for Ragel scanner (M Conrad)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Wed, 19 Oct 2011 00:06:39 -0400
> From: "M Conrad" <silverdirk-rgl at silverdirk.com>
> To: ragel-users at complang.org
> Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
> Message-ID: <op.v3kyx4llah38gt at osangar.int.intellitree.com>
> Content-Type: text/plain; charset=utf-8; format=flowed; delsp=yes
>
> Hi, I am wondering if there is a good LALR(1) parser generator for use
> with Ragel that has as nice of a host-language interface as Ragel does.
>
> I found Lemon, but it generates almost unreadable code, and half the time
> it tells me about errors in my grammar with meaningless assertion errors.
> Also, I really like the way Ragel can be inlined with the host language,
> and would like to find a parser-generator to match.
>
> If one doesn't exist, I am considering writing one.  (I've written the
> LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I
> don't want to waste effort if it is redundant.
>
> Can anyone point me to other LR parsers that you like?
>
> Thanks,
> -Mike
>
>
>
> ------------------------------
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users
>
> End of ragel-users Digest, Vol 37, Issue 1
> ******************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20111019/2d7e9f6e/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From silverdirk-rgl at silverdirk.com  Thu Oct 20 07:07:37 2011
From: silverdirk-rgl at silverdirk.com (M Conrad)
Date: Thu, 20 Oct 2011 03:07:37 -0400
Subject: [ragel-users] ragel-users Digest, Vol 37, Issue 1
In-Reply-To: <CACUovh1ODkJpYGx=L7n0gWZLOw56rgqVNLsjvRZG==TMkRVYqA@mail.gmail.com>
References: <mailman.1.1319050802.22596.ragel-users@complang.org>
	<CACUovh1ODkJpYGx=L7n0gWZLOw56rgqVNLsjvRZG==TMkRVYqA@mail.gmail.com>
Message-ID: <op.v3m12zufah38gt@osangar.int.intellitree.com>

I looked at ANTLR a bit, but it seemed like their approach was to add lots  
of "magic" to an LL parser.

I'm rather fond of the LR algorithms, and while it's harder to make  
friendly error messages with them, the good old "unexpected $token at  
$line,$col" isn't really so bad.

On Wed, 19 Oct 2011 17:42:58 -0400, JesusFreke <jesusfreke at jesusfreke.com>  
wrote:

> I'm not sure if it meets your criteria, but I've used ANTLR and found it  
> to
> be very good. One of the nice things about it is that it includes an  
> "IDE"
> type environment where you can step through the parser on a  
> token-by-token
> basis, see the rules it is picking and the parse tree it is generating.  
> It
> was an invaluable tool while developing my parser in ANTLR. I only wish I
> had known about ragel at the time. I had wrote my lexer initially with
> ANTLR, and then I rewrote it in jflex for better performance. Now that  
> I've
> used ragel a bit, I may end up doing one more rewrite :)
>
>
>
> On Wed, Oct 19, 2011 at 12:00 PM, <ragel-users-request at complang.org>  
> wrote:
>
>> Send ragel-users mailing list submissions to
>>        ragel-users at complang.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>        http://www.complang.org/mailman/listinfo/ragel-users
>> or, via email, send a message with subject or body 'help' to
>>        ragel-users-request at complang.org
>>
>> You can reach the person managing the list at
>>        ragel-users-owner at complang.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of ragel-users digest..."
>>
>>
>> Today's Topics:
>>
>>   1. LALR(1) companion tool for Ragel scanner (M Conrad)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Wed, 19 Oct 2011 00:06:39 -0400
>> From: "M Conrad" <silverdirk-rgl at silverdirk.com>
>> To: ragel-users at complang.org
>> Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
>> Message-ID: <op.v3kyx4llah38gt at osangar.int.intellitree.com>
>> Content-Type: text/plain; charset=utf-8; format=flowed; delsp=yes
>>
>> Hi, I am wondering if there is a good LALR(1) parser generator for use
>> with Ragel that has as nice of a host-language interface as Ragel does.
>>
>> I found Lemon, but it generates almost unreadable code, and half the  
>> time
>> it tells me about errors in my grammar with meaningless assertion  
>> errors.
>> Also, I really like the way Ragel can be inlined with the host language,
>> and would like to find a parser-generator to match.
>>
>> If one doesn't exist, I am considering writing one.  (I've written the
>> LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I
>> don't want to waste effort if it is redundant.
>>
>> Can anyone point me to other LR parsers that you like?
>>
>> Thanks,
>> -Mike
>>
>>
>>
>> ------------------------------
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>>
>> End of ragel-users Digest, Vol 37, Issue 1
>> ******************************************
>>


-- 
Using Opera's revolutionary email client: http://www.opera.com/mail/

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From petru.severin at gmail.com  Fri Oct 21 02:34:01 2011
From: petru.severin at gmail.com (Petru Severin)
Date: Fri, 21 Oct 2011 05:34:01 +0300
Subject: [ragel-users] Ragel compilation hangs
Message-ID: <4EA0DA19.20702@gmail.com>

Hi,

I am trying to create a Ragel parser for SVG Path syntax. I lifted the 
grammar from SVG specification and adapted it to be compatible with 
Ragel. When I try to compile it, Ragel just hangs instead of finishing 
immediately like it usually does. I understand that the machine might 
need adjustments but it's difficult to guess what's wrong.

I'd like to get an advice from more experienced Ragel users.

Here's the machine for SVG path:

%%{
	machine PathParser;

	wsp = (" " | 9 | 13 | 10);
	digit_sequence = digit+;
	sign = "+" | "-";
	exponent = ( "e" | "E" ) sign? digit_sequence;
	fractional_constant = digit_sequence? "." digit_sequence | 
digit_sequence ".";
	floating_point_constant = fractional_constant exponent?  | 
digit_sequence exponent;
	integer_constant = digit_sequence;
	comma = ",";
	comma_wsp = (wsp+ comma? wsp*) | (comma wsp*);
	flag = "0" | "1";
	number = sign? integer_constant | sign? floating_point_constant;
	nonnegative_number = integer_constant | floating_point_constant;
	coordinate = number;
	coordinate_pair = coordinate comma_wsp? coordinate;
	elliptical_arc_argument = nonnegative_number comma_wsp? 
nonnegative_number comma_wsp?  number comma_wsp flag comma_wsp? flag 
comma_wsp? coordinate_pair;
	elliptical_arc_argument_sequence = elliptical_arc_argument (comma_wsp? 
elliptical_arc_argument)*;
	elliptical_arc = ( "A" | "a" ) wsp* elliptical_arc_argument_sequence;
	smooth_quadratic_bezier_curveto_argument_sequence = coordinate_pair 
(comma_wsp? coordinate_pair)*;
	smooth_quadratic_bezier_curveto = ( "T" | "t" ) wsp* 
smooth_quadratic_bezier_curveto_argument_sequence;
	quadratic_bezier_curveto_argument = coordinate_pair comma_wsp? 
coordinate_pair;
	quadratic_bezier_curveto_argument_sequence = 
quadratic_bezier_curveto_argument (comma_wsp? 
quadratic_bezier_curveto_argument)*;
	quadratic_bezier_curveto = ( "Q" | "q" ) wsp* 
quadratic_bezier_curveto_argument_sequence;
	smooth_curveto_argument = coordinate_pair comma_wsp? coordinate_pair;
	smooth_curveto_argument_sequence = smooth_curveto_argument (comma_wsp? 
smooth_curveto_argument)*;
	smooth_curveto = ( "S" | "s" ) wsp* smooth_curveto_argument_sequence;
	curveto_argument = coordinate_pair comma_wsp? coordinate_pair 
comma_wsp? coordinate_pair;
	curveto_argument_sequence = curveto_argument (comma_wsp? 
curveto_argument)*;
	curveto = ( "C" | "c" ) wsp* curveto_argument_sequence;
	vertical_lineto_argument_sequence = coordinate (comma_wsp? coordinate)*;
	vertical_lineto = ( "V" | "v" ) wsp* vertical_lineto_argument_sequence;
	horizontal_lineto_argument_sequence = coordinate (comma_wsp? coordinate)*;
	horizontal_lineto = ( "H" | "h" ) wsp* horizontal_lineto_argument_sequence;
	lineto_argument_sequence = coordinate_pair (comma_wsp? coordinate_pair)*;
	lineto = ( "L" | "l" ) wsp* lineto_argument_sequence;
	closepath = ("Z" | "z");
	moveto_argument_sequence = coordinate_pair | coordinate_pair comma_wsp? 
lineto_argument_sequence;
	moveto = ( "M" | "m" ) wsp* moveto_argument_sequence;
	drawto_command = closepath | lineto | horizontal_lineto | 
vertical_lineto | curveto | smooth_curveto | quadratic_bezier_curveto | 
smooth_quadratic_bezier_curveto | elliptical_arc;
	drawto_commands = drawto_command (wsp* drawto_command)*;
	moveto_drawto_command_group = moveto wsp* drawto_commands?;
	moveto_drawto_command_groups = moveto_drawto_command_group (wsp* 
moveto_drawto_command_group)*;
	svg_path := wsp* moveto_drawto_command_groups? wsp*;
}%%

package com.wireframesketcher.ui.svg.parser;

class PathParser
{	
%% write data;

	public void parse(String string)
	{
		int cs;
		int p;
		int pe;
		int eof;
		char[] data;
		int ts;
		int act;
		int te;
	
%% write init;

		data = string.toCharArray();
		p = 0;
		pe = string.length();
		eof = pe;
		
%% write exec;
	}
}

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


From socketpair at gmail.com  Sat Oct 22 18:59:40 2011
From: socketpair at gmail.com (=?UTF-8?B?0JzQsNGA0Log0JrQvtGA0LXQvdCx0LXRgNCz?=)
Date: Sun, 23 Oct 2011 00:59:40 +0600
Subject: [ragel-users] [bug][ragel 6.6]
Message-ID: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>

source attached.

ragel -L -C -G2 -e -p  smtp.rl


----------------------
smtp.c:167:2: error: label ‘_again’ used but not defined
---------------------

$ ragel -v
Ragel State Machine Compiler version 6.6 Dec 2009
Copyright (c) 2001-2009 by Adrian Thurston
-------------------------------------

Also, -T0 compiles OK, but does not work as expected. How to debug ?
graphviz diagrams says that everything is fine.

-- 
Segmentation fault
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smtp.rl
Type: application/octet-stream
Size: 772 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20111023/2c959c1f/attachment-0001.obj>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Mon Oct 24 03:15:17 2011
From: thurston at complang.org (Adrian Thurston)
Date: Sun, 23 Oct 2011 20:15:17 -0700
Subject: [ragel-users] [bug][ragel 6.6]
In-Reply-To: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>
References: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>
Message-ID: <4EA4D845.8050307@complang.org>

Hi, could you please verify with 6.7? If the bug is still present can 
you please send me (not necessarily the list) a ragel program that 
exibits the error?

Thanks,
  Adrian

On 11-10-22 11:59 AM, Марк Коренберг wrote:
> source attached.
>
> ragel -L -C -G2 -e -p  smtp.rl
>
>
> ----------------------
> smtp.c:167:2: error: label ‘_again’ used but not defined
> ---------------------
>
> $ ragel -v
> Ragel State Machine Compiler version 6.6 Dec 2009
> Copyright (c) 2001-2009 by Adrian Thurston
> -------------------------------------
>
> Also, -T0 compiles OK, but does not work as expected. How to debug ?
> graphviz diagrams says that everything is fine.
>
>
>
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From socketpair at gmail.com  Mon Oct 24 03:52:12 2011
From: socketpair at gmail.com (=?UTF-8?B?0JzQsNGA0Log0JrQvtGA0LXQvdCx0LXRgNCz?=)
Date: Mon, 24 Oct 2011 09:52:12 +0600
Subject: [ragel-users] [bug][ragel 6.6]
In-Reply-To: <4EA4D845.8050307@complang.org>
References: <CAEmTpZFY1QE_jAOTDSbsByRt-DBswrQQTwcci1FUT7ixrjZ4nQ@mail.gmail.com>
	<4EA4D845.8050307@complang.org>
Message-ID: <CAEmTpZHAmOj8kx8Qg=aLZy8EK8tTEYodu05Knf4Hahpx1EJNWA@mail.gmail.com>

2011/10/24 Adrian Thurston <thurston at complang.org>:
> Hi, could you please verify with 6.7? If the bug is still present can you
> please send me (not necessarily the list) a ragel program that exibits the
> error?

The problem still exists in ragel 6.7
The program is attached to letter. If attachements does not work, I
paste same program in the body:
################################
#include <stdio.h>
#include <string.h>

%%{
machine defs;

CRLF = "\r\n";
SP = " ";
TAB = '\x09';
textstring = (TAB|SP|[!-~])+;

Domain = [a-z.]+;


domain_instance := Domain %{ printf("%d: domain complete\n", __LINE__); fret;};

action parse_domain {
    printf("%d:, calling parse_domain  {%s}\n", __LINE__, p);
    fcall domain_instance;
}

Greeting := "220 " %parse_domain (SP textstring)? CRLF;
}%%

int main()
{
    const char * const text= "220 qwe.ru text qweqweqweqwe\r\n";
    int cs;
    const char* p=text;
    const char* pe = text + strlen(text);
    const char* eof = pe;

    int top;
    int stack[100];

    %% write data;
    %% write init;
    %% write exec;
    return 0;
}
################################

>
> Thanks,
>  Adrian
>
> On 11-10-22 11:59 AM, Марк Коренберг wrote:
>>
>> source attached.
>>
>> ragel -L -C -G2 -e -p  smtp.rl
>>
>>
>> ----------------------
>> smtp.c:167:2: error: label ‘_again’ used but not defined
>> ---------------------
>>
>> $ ragel -v
>> Ragel State Machine Compiler version 6.6 Dec 2009
>> Copyright (c) 2001-2009 by Adrian Thurston
>> -------------------------------------
>>
>> Also, -T0 compiles OK, but does not work as expected. How to debug ?
>> graphviz diagrams says that everything is fine.
>>
>>
>>
>>
>> _______________________________________________
>> ragel-users mailing list
>> ragel-users at complang.org
>> http://www.complang.org/mailman/listinfo/ragel-users
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users



-- 
Segmentation fault
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smtp.rl
Type: application/octet-stream
Size: 772 bytes
Desc: not available
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20111024/3b9076d6/attachment-0001.obj>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From ragel-user at jgoettgens.de  Tue Oct 25 14:35:03 2011
From: ragel-user at jgoettgens.de (ragel-user at jgoettgens.de)
Date: Tue, 25 Oct 2011 16:35:03 +0200
Subject: [ragel-users] Cygwin cross compilation
Message-ID: <AC0235FBB2CB43FDBDD91597AC350FD0@localdomain>

I just wanted to point out that it is now possible (probably was for some time) to build ragel binaries using cygwin that don’t depend on the cygwin runtime environment.

E.g. to build 64-bit binaries simply call configure with

./configure --host=x86_64-w64-mingw32

If ragel gets called from outside the cygwin environment one should copy libgcc_s_sjlj-1.dll and libstdc++-6.dll from the appropriate sys-root directory into the directory of ragel (or elsewhere where the runtime system can find them). Of course, the cross compilation packages should be installed on the system.

I’ll update this thread in case I find major problems during testing (using txl, etc).

jg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.colm.net/pipermail/ragel-users/attachments/20111025/de071a93/attachment-0001.html>
-------------- next part --------------
_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users

From thurston at complang.org  Wed Oct 26 19:10:47 2011
From: thurston at complang.org (Adrian Thurston)
Date: Wed, 26 Oct 2011 12:10:47 -0700
Subject: [ragel-users] LALR(1) companion tool for Ragel scanner
In-Reply-To: <op.v3kyx4llah38gt@osangar.int.intellitree.com>
References: <op.v3kyx4llah38gt@osangar.int.intellitree.com>
Message-ID: <4EA85B37.10504@complang.org>

My own parser generator, kelbt, has a host language interface similar to 
that of ragel. It is not 1.0 tough and there are no docs yet. It is 
oriented around research problems. Eg it is backtracking bottom up and 
as such is in a less common class of parser generators.

That said, it is in debian and I use it for several of my own projects, 
including ragel.

On 11-10-18 09:06 PM, M Conrad wrote:
> Hi, I am wondering if there is a good LALR(1) parser generator for use
> with Ragel that has as nice of a host-language interface as Ragel does.
>
> I found Lemon, but it generates almost unreadable code, and half the
> time it tells me about errors in my grammar with meaningless assertion
> errors. Also, I really like the way Ragel can be inlined with the host
> language, and would like to find a parser-generator to match.
>
> If one doesn't exist, I am considering writing one. (I've written the
> LALR(1) algorithm in Java before, so it wouldn't be that hard) But, I
> don't want to waste effort if it is redundant.
>
> Can anyone point me to other LR parsers that you like?
>
> Thanks,
> -Mike
>
> _______________________________________________
> ragel-users mailing list
> ragel-users at complang.org
> http://www.complang.org/mailman/listinfo/ragel-users

_______________________________________________
ragel-users mailing list
ragel-users at complang.org
http://www.complang.org/mailman/listinfo/ragel-users


