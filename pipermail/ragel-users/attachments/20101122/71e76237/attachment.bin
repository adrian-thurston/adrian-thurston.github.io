diff --git a/ragel-d.vim b/ragel-d.vim
index ac7c51d..ce88995 100644
--- a/ragel-d.vim
+++ b/ragel-d.vim
@@ -54,7 +54,7 @@ syntax match anyId "[a-zA-Z_][a-zA-Z_0-9]*"
 syntax keyword fsmType fpc fc fcurs fbuf fblen ftargs fstack
 syntax keyword fsmKeyword fhold fgoto fcall fret fentry fnext fexec fbreak
 
-syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords
+syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords,rlBuiltIns
 
 syntax region machineSpec1 matchgroup=beginRL start="%%{" end="}%%" contains=@rlItems
 syntax region machineSpec2 matchgroup=beginRL start="%%[^{]"rs=e-1 end="$" keepend contains=@rlItems
@@ -92,6 +92,9 @@ syntax match rlOtherOps "<:" contained
 syntax keyword rlKeywords machine action context include import export prepush postpop contained
 syntax keyword rlExprKeywords when inwhen outwhen err lerr eof from to contained
 
+" Built-in rules
+syntax keyword rlBuiltIns any ascii extend alpha digit alnum lower upper xdigit cntrl graph print punct space zlen empty contained
+
 " Case Labels
 syntax keyword caseLabelKeyword case contained
 syntax cluster caseLabelItems contains=ocComment,ocPreproc,ocLiteral,ocType,ocKeyword,caseLabelKeyword,ocNumber,ocBoolean,anyId,fsmType,fsmKeyword
@@ -152,5 +155,6 @@ hi link fsmKeyword Keyword
 hi link anyLabel Label
 hi link caseLabelKeyword Keyword
 hi link beginRL Type
+hi link rlBuiltIns Constant
  
 let b:current_syntax = "ragel"
diff --git a/ragel-java.vim b/ragel-java.vim
index 227481e..1d66e99 100644
--- a/ragel-java.vim
+++ b/ragel-java.vim
@@ -49,7 +49,7 @@ syntax match anyId "[a-zA-Z_][a-zA-Z_0-9]*"
 syntax keyword fsmType fpc fc fcurs fbuf fblen ftargs fstack
 syntax keyword fsmKeyword fhold fgoto fcall fret fentry fnext fexec fbreak
 
-syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords
+syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords,rlBuiltIns
 
 syntax region machineSpec1 matchgroup=beginRL start="%%{" end="}%%" contains=@rlItems
 syntax region machineSpec2 matchgroup=beginRL start="%%[^{]"rs=e-1 end="$" keepend contains=@rlItems
@@ -87,6 +87,9 @@ syntax match rlOtherOps "<:" contained
 syntax keyword rlKeywords machine action context include import export prepush postpop contained
 syntax keyword rlExprKeywords when inwhen outwhen err lerr eof from to contained
 
+" Built-in rules
+syntax keyword rlBuiltIns any ascii extend alpha digit alnum lower upper xdigit cntrl graph print punct space zlen empty contained
+
 " Case Labels
 syntax keyword caseLabelKeyword case contained
 syntax cluster caseLabelItems contains=ocComment,ocPreproc,ocLiteral,ocType,ocKeyword,caseLabelKeyword,ocNumber,ocBoolean,anyId,fsmType,fsmKeyword
@@ -147,5 +150,6 @@ hi link fsmKeyword Keyword
 hi link anyLabel Label
 hi link caseLabelKeyword Keyword
 hi link beginRL Type
+hi link rlBuiltIns Constant
  
 let b:current_syntax = "ragel"
diff --git a/ragel-m.vim b/ragel-m.vim
index c8d9904..e374562 100644
--- a/ragel-m.vim
+++ b/ragel-m.vim
@@ -52,7 +52,7 @@ syntax match anyId "[a-zA-Z_][a-zA-Z_0-9]*"
 syntax keyword fsmType fpc fc fcurs fbuf fblen ftargs fstack
 syntax keyword fsmKeyword fhold fgoto fcall fret fentry fnext fexec fbreak
 
-syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords
+syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords,rlBuiltIns
 
 syntax region machineSpec1 matchgroup=beginRL start="%%{" end="}%%" contains=@rlItems
 syntax region machineSpec2 matchgroup=beginRL start="%%[^{]"rs=e-1 end="$" keepend contains=@rlItems
@@ -90,6 +90,9 @@ syntax match rlOtherOps "<:" contained
 syntax keyword rlKeywords machine action context include import export prepush postpop contained
 syntax keyword rlExprKeywords when inwhen outwhen err lerr eof from to contained
 
+" Built-in rules
+syntax keyword rlBuiltIns any ascii extend alpha digit alnum lower upper xdigit cntrl graph print punct space zlen empty contained
+
 " Case Labels
 syntax keyword caseLabelKeyword case contained
 syntax cluster caseLabelItems contains=ocComment,ocPreproc,ocLiteral,ocType,ocKeyword,caseLabelKeyword,ocNumber,ocBoolean,anyId,fsmType,fsmKeyword
@@ -150,5 +153,6 @@ hi link fsmKeyword Keyword
 hi link anyLabel Label
 hi link caseLabelKeyword Keyword
 hi link beginRL Type
+hi link rlBuiltIns Constant
  
 let b:current_syntax = "ragel"
diff --git a/ragel.vim b/ragel.vim
index 5884805..f94ae0f 100644
--- a/ragel.vim
+++ b/ragel.vim
@@ -47,7 +47,7 @@ syntax match anyId "[a-zA-Z_][a-zA-Z_0-9]*"
 syntax keyword fsmType fpc fc fcurs fbuf fblen ftargs fstack
 syntax keyword fsmKeyword fhold fgoto fcall fret fentry fnext fexec fbreak
 
-syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords
+syntax cluster rlItems contains=rlComment,rlLiteral,rlAugmentOps,rlOtherOps,rlKeywords,rlWrite,rlCodeCurly,rlCodeSemi,rlNumber,anyId,rlLabelColon,rlExprKeywords,rlBuiltIns
 
 syntax region machineSpec1 matchgroup=beginRL start="%%{" end="}%%" contains=@rlItems
 syntax region machineSpec2 matchgroup=beginRL start="%%[^{]"rs=e-1 end="$" keepend contains=@rlItems
@@ -85,6 +85,9 @@ syntax match rlOtherOps "<:" contained
 syntax keyword rlKeywords machine action context include import export prepush postpop contained
 syntax keyword rlExprKeywords when inwhen outwhen err lerr eof from to contained
 
+" Built-in rules
+syntax keyword rlBuiltIns any ascii extend alpha digit alnum lower upper xdigit cntrl graph print punct space zlen empty contained
+
 " Case Labels
 syntax keyword caseLabelKeyword case contained
 syntax cluster caseLabelItems contains=ocComment,ocPreproc,ocLiteral,ocType,ocKeyword,caseLabelKeyword,ocNumber,ocBoolean,anyId,fsmType,fsmKeyword
@@ -145,5 +148,6 @@ hi link fsmKeyword Keyword
 hi link anyLabel Label
 hi link caseLabelKeyword Keyword
 hi link beginRL Type
+hi link rlBuiltIns Constant
  
 let b:current_syntax = "ragel"
