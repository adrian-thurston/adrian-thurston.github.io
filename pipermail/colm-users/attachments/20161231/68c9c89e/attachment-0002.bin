digraph colm_build {
	rankdir="LR"
	concentrate=false
	node [shape=box]
	{	rank=min;
		consinit[shape=box, color=blue]
		main [shape=box, color=red]
		loadinit [shape=box, color=green]
		colmlm [shape=house, color=green]
		loadcolm [shape=box, color=gold]
	}

	{	ank=min;
		node [color=lightblue]
		resolve lookup synthesis parsetree parser fsmstate fsmbase fsmattach fsmmin fsmgraph fsmcodegen fsmexec pdagraph pdabuild pdacodegen redfsm redbuild fsmap dotgen pcheck ctinput declare codegen exports compiler reduce 
	} -> libprog [color=lightblue]

	{	rank=min;
		node [color=brown]
		map list input debug codevec pool string tree bytecode program struct commit
	} ->libcolm [color=brown]

	{
		libprog[shape=circle,color=lightblue]
		libcolm[shape=circle, color=brown]
	}
	subgraph consinit {
		node [shape=ellipse]

		consinit->bootstrap0 [color=blue]
		main->bootstrap0 [color=red, label="-DCONS_INIT"]
		libcolm->bootstrap0 [color=brown]
		libprog->bootstrap0 [color=lightblue]
		bootstrap0[color=blue]
		bootstrap0->genparse1[color=blue]
		bootstrap0->genif1[color=blue]

	}
	subgraph loadinit {
		node [shape=ellipse]

		colmlm->bootstrap1 [ color=green]
		loadinit->bootstrap1 [color=green]
		genparse1->bootstrap1[color=blue]
		genif1->bootstrap1[color=blue]
		main->bootstrap1 [color=red, label="-DLOAD_INIT"]
		bootstrap1[color=green]
		libcolm->bootstrap1 [color=brown]
		libprog->bootstrap1 [color=lightblue]
		
		bootstrap1->genparse2[color=green]
		bootstrap1->genif2[color=green]
	}
	{
		loadcolm->colm [color=gold]
		genparse2->colm[color=green]
		genif2->colm[color=green]
		main->colm [color=red, label="-DLOAD_COLM"]
		libcolm->colm [color=brown]
		libprog->colm [color=lightblue]
		
	}
	colm[shape=circle, color=green]	
}

